@using System
@using System.Collections.Generic
@using System.Globalization
@using Spartane.Core.Domain.Permission
@using Spartane.Core.Domain.Spartane_File
@using Spartane.Web.Helpers
@model Spartane.Web.Areas.Frontal.Models.Planes_de_RutinasModel
@{

/*
    string Fecha_de_Registro = "";
    if (Model.Fecha_de_Registro == "")
    { Model.Fecha_de_Registro = DateTime.Now.ToString(ConfigurationProperty.DateFormat); }
    string Fecha_inicio_del_Plan = "";
    if (Model.Fecha_inicio_del_Plan == "")
    { Model.Fecha_inicio_del_Plan = DateTime.Now.ToString(ConfigurationProperty.DateFormat); }
    string Fecha_fin_del_Plan = "";
    if (Model.Fecha_fin_del_Plan == "")
    { Model.Fecha_fin_del_Plan = DateTime.Now.ToString(ConfigurationProperty.DateFormat); }

*/
    List<SelectListItem> varSpartan_User_Usuario_que_Registra = null;
    if (ViewBag.Spartan_Users_Usuario_que_Registra != null)
    { varSpartan_User_Usuario_que_Registra = (List<SelectListItem>)ViewBag.Spartan_Users_Usuario_que_Registra; }
    List<SelectListItem> varPacientes_Paciente = null;
    if (ViewBag.Pacientess_Paciente != null)
    { varPacientes_Paciente = (List<SelectListItem>)ViewBag.Pacientess_Paciente; }
    List<SelectListItem> varNivel_de_dificultad_Nivel_de_dificultad = null;
    if (ViewBag.Nivel_de_dificultads_Nivel_de_dificultad != null)
    { varNivel_de_dificultad_Nivel_de_dificultad = (List<SelectListItem>)ViewBag.Nivel_de_dificultads_Nivel_de_dificultad; }
    List<SelectListItem> varSemanas_Planes_Semana = null;
    if (ViewBag.Semanas_Planess_Semana != null)
    { varSemanas_Planes_Semana = (List<SelectListItem>)ViewBag.Semanas_Planess_Semana; }
    List<SelectListItem> varEstatus_Estatus = null;
    if (ViewBag.Estatuss_Estatus != null)
    { varEstatus_Estatus = (List<SelectListItem>)ViewBag.Estatuss_Estatus; }
    List<SelectListItem> varRutinas_Rutina = null;
    if (ViewBag.Rutinass_Rutina != null)
    { varRutinas_Rutina = (List<SelectListItem>)ViewBag.Rutinass_Rutina; }
    List<SelectListItem> varEstatus_Plan_de_Rutinas_Estatus_de_Seguimiento = null;
    if (ViewBag.Estatus_Plan_de_Rutinass_Estatus_de_Seguimiento != null)
    { varEstatus_Plan_de_Rutinas_Estatus_de_Seguimiento = (List<SelectListItem>)ViewBag.Estatus_Plan_de_Rutinass_Estatus_de_Seguimiento; }

    Permission permissionDetalle_Planes_de_Rutinas = ViewBag.PermissionDetalle_Planes_de_Rutinas;

    Permission permission = ViewBag.Permission;
	
	if (ViewBag.IsPartial)
   { 
       Layout = "~/Areas/Frontal/Views/Shared/_LayoutPopup.cshtml";
   }
}
<div class="loading style-2"><div class="loading-wheel"></div></div>
<div class="modal fade in" id="dvAttributeValue" style="background-color:rgba(0, 0, 0, 0.7);">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <div class="form-group">
                    <label class="col-sm-3 control-label" id="lblAttributeType">@Resources.Resources.Value</label>
                    <div class="col-sm-7">
                        <input type="text" title="Value" class="form-control" id="txtAttributeValue" />
                    </div>
                    <div class="col-sm-2">
                        <a class="btn btn-primary" onclick="SaveValue()">@Resources.Resources.Submit</a>
                    </div>
                    <input type="hidden" id="hdnAttributType" />
                    <input type="hidden" id="hdnAttributElement" />
                    <input type="hidden" id="hdnAttributNumber" />
                    <input type="hidden" id="hdnElementType" />
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row wrapper border-bottom white-bg page-heading">

    <div class="row">
        <div class="col-lg-10">
            <h2>
                @Resources.Planes_de_RutinasResources.Planes_de_Rutinas
                <button onclick="Planes_de_RutinasGetBusinessRule('', 'Al Abrir Pantalla', '0')" type="button" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton" data-toggle="modal" data-target="#Planes_de_RutinasBusinessRule-form">
                    <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleToBegin">
                        <i class="fa fa-cogs fa-spin"></i>
                    </a>
                </button>
            </h2>
            <ol class="breadcrumb">
                <li>
                    <a href="@Url.Action("Index", "Home")">@Resources.Resources.Home</a>
                </li>
                <li class="active">
                @if (Session["PhaseName"] != null)
                {
                    <strong>@Session["PhaseName"].ToString()</strong>
                }
                else
                {
                    <strong>@Resources.Planes_de_RutinasResources.Planes_de_Rutinas</strong>
                }
                
            </li>
                <li class="active">
                    <strong>@Resources.Resources.Create</strong>
                </li>
            </ol>
        </div>
        <div class="col-lg-2">

            @{
                if (Convert.ToInt32(Spartane.Web.SessionHelper.Role) == (int)Spartane.Core.Enums.SpartanRoleEnum.Admin)
                {
                    <h2>&nbsp;</h2>
                    <button onclick="Planes_de_RutinasDisplayBusinessRule()" type="button" class="btn btn-info btn-lg displayBusinessProperyButton">
                        <i class="fa fa-cogs fa-spin"></i>
                    </button>

                    <div aria-hidden="true" class="modal fade in Planes_de_RutinasPropertyBusinessModal" id="Planes_de_RutinasPropertyBusinessModal-form" style="display: none; background-color:rgba(0, 0, 0, 0.7);">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="modal-title">
                                          @Resources.Resources.titleBussinesRules
                                        <button data-dismiss="modal" class="close" type="button"><span aria-hidden="true">×</span><span class="sr-only">@Resources.Resources.Close</span></button>
                                    </h4>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <a class="btn btn-primary full-width" data-dismiss="modal" data-toggle="modal" data-target="#PropertyModal-form" onclick="GetPropertyBag()">@Resources.Resources.Property</a>
                                        </div>
                                        <div class="clearfix col-sm-12">&nbsp;</div>
                                        <div class="col-sm-12">
                                            <a class="btn btn-primary full-width" data-dismiss="modal" data-toggle="modal" data-target="#Planes_de_RutinasBusinessRule-form" onclick="Planes_de_RutinasGetBusinessRule()">Business Rule</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                     <div aria-hidden="true" data-backdrop="static" class="modal fade in PropertyModal" id="PropertyModal-form" style="display: none; background-color:rgba(0, 0, 0, 0.7);">
					</div>
					<div aria-hidden="true" data-backdrop="static" class="modal fade in Planes_de_RutinasBusinessRuleModal" id="Planes_de_RutinasBusinessRule-form" style="display: none; background-color:rgba(0, 0, 0, 0.7);">
					</div>


                }
            }
                    <div aria-hidden="true" class="modal fade in AddDetalle_Planes_de_RutinasModal" id="AddDetalle_Planes_de_Rutinas-form" style="display: none; background-color:rgba(0, 0, 0, 0.7);">
                    </div>


        </div>
    </div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox float-e-margins">
        <div class="ibox-content">
            @using (Html.BeginForm("Post", "Planes_de_Rutinas", FormMethod.Post, new { id = "CreatePlanes_de_Rutinas", @readonly = "true", @class = "form-horizontal", enctype = "multipart/form-data" }))
            {
                                <input type="hidden" id="hdnIsNew" name="hdnIsNew" value="@ViewBag.IsNew.ToString()" />
                <span id="popupNotification"></span>
                <div class="container-fluid Planes_de_RutinasCreateForm" id="viewmodeledit">
				 <div class="alert alert-warning" id="controlsRequerid" style="display:none">
                        <a href="#" class="close" onclick="$('#controlsRequerid').hide();">&times;</a>
                        <span id="textRequired"></span>
                 </div>
			<div class="tabs-container">
                        	<ul class="nav nav-tabs">
<li class="active"><a data-toggle="tab" href="#tabDatos_Generales"> @Resources.Planes_de_RutinasResources.TabDatos_Generales</a></li>
<li class=""><a data-toggle="tab" href="#tabSeguimiento_al_Plan"> @Resources.Planes_de_RutinasResources.TabSeguimiento_al_Plan</a></li>

                        	</ul>
	                	<div class="tab-content">
                            <div id="tabDatos_Generales" class="tab-pane active">
                                <div class="panel-body">
                            <div class="form-group" id="divFolio">
                                <label class="col-sm-2 control-label">@Resources.Planes_de_RutinasResources.Folio</label>
                                <div class="col-sm-8" data-field-id="Folio" data-attribute="259779" data-field-name="@Resources.Planes_de_RutinasResources.Folio">
                                    <label class="form-control" for="Folio" id="lblFolio">
                                    @if (Model.Folio== 0)
                                        {
                                            <text>@Resources.Resources.ClaveDefault</text>
                                        }
                                        else
                                        { 
                                            <text>@Model.Folio</text>
                                        }
                                    </label>
                                </div>
                            </div>
                            <div class="form-group" id="divFecha_de_Registro">
                                <label class="col-sm-2 control-label">@Resources.Planes_de_RutinasResources.Fecha_de_Registro</label>
                                <div class="col-sm-8" data-field-id="Fecha_de_Registro" data-attribute="259780" data-field-name="@Resources.Planes_de_RutinasResources.Fecha_de_Registro">
                                    <div class='input-group date' id='datetimepicker1'>
                                        <input class="form-control col-md-12 Datos_Generales" id="Fecha_de_Registro"  name="Fecha_de_Registro" type="text" value="@Model.Fecha_de_Registro">
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="divHora_de_Registro">
                                <label class="col-sm-2 control-label">@Resources.Planes_de_RutinasResources.Hora_de_Registro</label>
                                <div class="col-sm-8" data-field-id="Hora_de_Registro" data-attribute="259781" data-field-name="@Resources.Planes_de_RutinasResources.Hora_de_Registro">
                                    <div class='input-group date' id='timePicker'>
                                        <input class="form-control col-md-12 Datos_Generales" id="Hora_de_Registro"  name="Hora_de_Registro" type="text" data-autoclose="true" value="@Model.Hora_de_Registro">
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-time"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="divUsuario_que_Registra">
                                <label class="col-sm-2 control-label">@Resources.Planes_de_RutinasResources.Usuario_que_Registra</label>
                                <div class="col-sm-8" data-field-id="Usuario_que_Registra" data-attribute="259782" data-field-name="@Resources.Planes_de_RutinasResources.Usuario_que_Registra">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field Usuario que Registra must be a number." data-val-required="The Usuario que Registra field is required." id="Usuario_que_Registra" name="Usuario_que_Registra">
                                        <option value=""></option>
                                        @if (varSpartan_User_Usuario_que_Registra != null){ 
                                            foreach (var itemUsuario_que_Registra in varSpartan_User_Usuario_que_Registra)
                                            {
                                                if (itemUsuario_que_Registra.Value == Convert.ToString(Model.Usuario_que_Registra))
                                                {
                                                    <option value="@itemUsuario_que_Registra.Value" selected>@itemUsuario_que_Registra.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemUsuario_que_Registra.Value">@itemUsuario_que_Registra.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Usuario_que_Registra" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 259782).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Spartan_User', 'Usuario_que_Registra');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divPaciente">
                                <label class="col-sm-2 control-label">@Resources.Planes_de_RutinasResources.Paciente</label>
                                <div class="col-sm-8" data-field-id="Paciente" data-attribute="259786" data-field-name="@Resources.Planes_de_RutinasResources.Paciente">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field Paciente must be a number." data-val-required="The Paciente field is required." id="Paciente" name="Paciente">
                                        <option value=""></option>
                                        @if (varPacientes_Paciente != null){ 
                                            foreach (var itemPaciente in varPacientes_Paciente)
                                            {
                                                if (itemPaciente.Value == Convert.ToString(Model.Paciente))
                                                {
                                                    <option value="@itemPaciente.Value" selected>@itemPaciente.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemPaciente.Value">@itemPaciente.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Paciente" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 259786).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Pacientes', 'Paciente');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divNivel_de_dificultad">
                                <label class="col-sm-2 control-label">@Resources.Planes_de_RutinasResources.Nivel_de_dificultad</label>
                                <div class="col-sm-8" data-field-id="Nivel_de_dificultad" data-attribute="260154" data-field-name="@Resources.Planes_de_RutinasResources.Nivel_de_dificultad">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field Nivel de dificultad must be a number." data-val-required="The Nivel de dificultad field is required." id="Nivel_de_dificultad" name="Nivel_de_dificultad">
                                        <option value=""></option>
                                        @if (varNivel_de_dificultad_Nivel_de_dificultad != null){ 
                                            foreach (var itemNivel_de_dificultad in varNivel_de_dificultad_Nivel_de_dificultad)
                                            {
                                                if (itemNivel_de_dificultad.Value == Convert.ToString(Model.Nivel_de_dificultad))
                                                {
                                                    <option value="@itemNivel_de_dificultad.Value" selected>@itemNivel_de_dificultad.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemNivel_de_dificultad.Value">@itemNivel_de_dificultad.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Nivel_de_dificultad" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 260154).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Nivel_de_dificultad', 'Nivel_de_dificultad');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divSemana">
                                <label class="col-sm-2 control-label">@Resources.Planes_de_RutinasResources.Semana</label>
                                <div class="col-sm-8" data-field-id="Semana" data-attribute="259785" data-field-name="@Resources.Planes_de_RutinasResources.Semana">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field Semana must be a number." data-val-required="The Semana field is required." id="Semana" name="Semana">
                                        <option value=""></option>
                                        @if (varSemanas_Planes_Semana != null){ 
                                            foreach (var itemSemana in varSemanas_Planes_Semana)
                                            {
                                                if (itemSemana.Value == Convert.ToString(Model.Semana))
                                                {
                                                    <option value="@itemSemana.Value" selected>@itemSemana.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemSemana.Value">@itemSemana.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Semana" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 259785).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Semanas_Planes', 'Semana');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divFecha_inicio_del_Plan">
                                <label class="col-sm-2 control-label">@Resources.Planes_de_RutinasResources.Fecha_inicio_del_Plan</label>
                                <div class="col-sm-8" data-field-id="Fecha_inicio_del_Plan" data-attribute="259783" data-field-name="@Resources.Planes_de_RutinasResources.Fecha_inicio_del_Plan">
                                    <div class='input-group date' id='datetimepicker1'>
                                        <input class="form-control col-md-12 Datos_Generales" id="Fecha_inicio_del_Plan"  name="Fecha_inicio_del_Plan" type="text" value="@Model.Fecha_inicio_del_Plan">
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="divFecha_fin_del_Plan">
                                <label class="col-sm-2 control-label">@Resources.Planes_de_RutinasResources.Fecha_fin_del_Plan</label>
                                <div class="col-sm-8" data-field-id="Fecha_fin_del_Plan" data-attribute="259784" data-field-name="@Resources.Planes_de_RutinasResources.Fecha_fin_del_Plan">
                                    <div class='input-group date' id='datetimepicker1'>
                                        <input class="form-control col-md-12 Datos_Generales" id="Fecha_fin_del_Plan"  name="Fecha_fin_del_Plan" type="text" value="@Model.Fecha_fin_del_Plan">
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="divEstatus">
                                <label class="col-sm-2 control-label">@Resources.Planes_de_RutinasResources.Estatus</label>
                                <div class="col-sm-8" data-field-id="Estatus" data-attribute="259789" data-field-name="@Resources.Planes_de_RutinasResources.Estatus">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field Estatus must be a number." data-val-required="The Estatus field is required." id="Estatus" name="Estatus">
                                        <option value=""></option>
                                        @if (varEstatus_Estatus != null){ 
                                            foreach (var itemEstatus in varEstatus_Estatus)
                                            {
                                                if (itemEstatus.Value == Convert.ToString(Model.Estatus))
                                                {
                                                    <option value="@itemEstatus.Value" selected>@itemEstatus.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemEstatus.Value">@itemEstatus.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Estatus" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 259789).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Estatus', 'Estatus');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divRutina">
                                <label class="col-sm-2 control-label">@Resources.Planes_de_RutinasResources.Rutina</label>
                                <div class="col-sm-8" data-field-id="Rutina" data-attribute="259787" data-field-name="@Resources.Planes_de_RutinasResources.Rutina">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field Rutina must be a number." data-val-required="The Rutina field is required." id="Rutina" name="Rutina">
                                        <option value=""></option>
                                        @if (varRutinas_Rutina != null){ 
                                            foreach (var itemRutina in varRutinas_Rutina)
                                            {
                                                if (itemRutina.Value == Convert.ToString(Model.Rutina))
                                                {
                                                    <option value="@itemRutina.Value" selected>@itemRutina.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemRutina.Value">@itemRutina.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Rutina" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 259787).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Rutinas', 'Rutina');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            </div>
                                </div>


                            <div id="tabSeguimiento_al_Plan" class="tab-pane">
                                <div class="panel-body">
                            <div id="divSeguimiento_de_Rutina">
                            <div class="ibox-title">
                                <h5>@Resources.Planes_de_RutinasResources.Seguimiento_de_Rutina</h5>
                                <div class="ibox-tools">
                                </div>
                            </div>
                            <div class="ibox-content">
                                <div class="">
									@if (permissionDetalle_Planes_de_Rutinas.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_Planes_de_RutinasfnClickAddRow();" href="javascript:void(0);" title="@Resources.Resources.AddNewRow" class="Detalle_Planes_de_RutinasAddRow btn btn-primary">
                                            <i class="glyphicon glyphicon-plus"></i>
                                        </a>
                                    }
                                    <button onclick="Planes_de_RutinasGetBusinessRule('', 'Al Guardar o al Eliminar una Row', '259795')" type="button" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton" data-toggle="modal" data-target="#Planes_de_RutinasBusinessRule-form">
                                        <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleToCreateGrid">
                                            <i class="fa fa-cogs fa-spin"></i>
                                        </a>
                                    </button>
									@if (permissionDetalle_Planes_de_Rutinas.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_Planes_de_RutinasfnOpenAddRowPopUp();" data-toggle="modal" title="@Resources.Resources.AddNewRow" data-target="#AddDetalle_Planes_de_Rutinas-form" data-backdrop="static" data-keyboard="false" class="btn_mrpopup btn btn-primary">
                                            <i class="glyphicon glyphicon-new-window"></i>
                                        </a>
                                    }  
                                </div>

                                <br />

                                <div style='overflow-x: auto;'>
                                    <table class="table table-striped table-bordered table-hover childValidateTable" id="Detalle_Planes_de_RutinasGrid">
                                        <thead>
                                            <tr>
                                                <th class="ActionHeader"><span>@Resources.Resources.Actions</span></th>


                                                <th class="Numero_de_DiaHeader"><span>
<button type="button" data-attribute="259792" data-field-id="Detalle_Planes_de_RutinasNumero_de_Dia" data-field-name="@Resources.Detalle_Planes_de_RutinasResources.Numero_de_Dia" data-toggle="modal" data-target="#Planes_de_RutinasBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Planes_de_RutinasResources.Numero_de_Dia">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Planes_de_RutinasResources.Numero_de_Dia</span></th>
                                                <th class="FechaHeader"><span>
<button type="button" data-attribute="259793" data-field-id="Detalle_Planes_de_RutinasFecha" data-field-name="@Resources.Detalle_Planes_de_RutinasResources.Fecha" data-toggle="modal" data-target="#Planes_de_RutinasBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Planes_de_RutinasResources.Fecha">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Planes_de_RutinasResources.Fecha</span></th>
                                                <th class="Orden_de_RealizacionHeader"><span>
<button type="button" data-attribute="260158" data-field-id="Detalle_Planes_de_RutinasOrden_de_Realizacion" data-field-name="@Resources.Detalle_Planes_de_RutinasResources.Orden_de_Realizacion" data-toggle="modal" data-target="#Planes_de_RutinasBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Planes_de_RutinasResources.Orden_de_Realizacion">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>
@Resources.Detalle_Planes_de_RutinasResources.Orden_de_Realizacion</span></th>
                                                <th class="Secuencia_del_EjercicioHeader"><span>
<button type="button" data-attribute="260159" data-field-id="Detalle_Planes_de_RutinasSecuencia_del_Ejercicio" data-field-name="@Resources.Detalle_Planes_de_RutinasResources.Secuencia_del_Ejercicio" data-toggle="modal" data-target="#Planes_de_RutinasBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Planes_de_RutinasResources.Secuencia_del_Ejercicio">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Planes_de_RutinasResources.Secuencia_del_Ejercicio</span></th>
                                                <th class="Enfoque_del_EjercicioHeader"><span>
<button type="button" data-attribute="260161" data-field-id="Detalle_Planes_de_RutinasEnfoque_del_Ejercicio" data-field-name="@Resources.Detalle_Planes_de_RutinasResources.Enfoque_del_Ejercicio" data-toggle="modal" data-target="#Planes_de_RutinasBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Planes_de_RutinasResources.Enfoque_del_Ejercicio">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Planes_de_RutinasResources.Enfoque_del_Ejercicio</span></th>
                                                <th class="EjercicioHeader"><span>
<button type="button" data-attribute="260160" data-field-id="Detalle_Planes_de_RutinasEjercicio" data-field-name="@Resources.Detalle_Planes_de_RutinasResources.Ejercicio" data-toggle="modal" data-target="#Planes_de_RutinasBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Planes_de_RutinasResources.Ejercicio">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Planes_de_RutinasResources.Ejercicio</span></th>
                                                <th class="RealizadoHeader"><span>
<button type="button" data-attribute="259794" data-field-id="Detalle_Planes_de_RutinasRealizado" data-field-name="@Resources.Detalle_Planes_de_RutinasResources.Realizado" data-toggle="modal" data-target="#Planes_de_RutinasBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Planes_de_RutinasResources.Realizado">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Planes_de_RutinasResources.Realizado</span></th>

                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                            </div>
                            <div class="form-group" id="divEstatus_de_Seguimiento">
                                <label class="col-sm-2 control-label">@Resources.Planes_de_RutinasResources.Estatus_de_Seguimiento</label>
                                <div class="col-sm-8" data-field-id="Estatus_de_Seguimiento" data-attribute="260155" data-field-name="@Resources.Planes_de_RutinasResources.Estatus_de_Seguimiento">
                                    <select class="form-control Seguimiento_al_Plan" data-val="true" data-val-number="The field Estatus de Seguimiento must be a number." data-val-required="The Estatus de Seguimiento field is required." id="Estatus_de_Seguimiento" name="Estatus_de_Seguimiento">
                                        <option value=""></option>
                                        @if (varEstatus_Plan_de_Rutinas_Estatus_de_Seguimiento != null){ 
                                            foreach (var itemEstatus_de_Seguimiento in varEstatus_Plan_de_Rutinas_Estatus_de_Seguimiento)
                                            {
                                                if (itemEstatus_de_Seguimiento.Value == Convert.ToString(Model.Estatus_de_Seguimiento))
                                                {
                                                    <option value="@itemEstatus_de_Seguimiento.Value" selected>@itemEstatus_de_Seguimiento.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemEstatus_de_Seguimiento.Value">@itemEstatus_de_Seguimiento.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Estatus_de_Seguimiento" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 260155).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Estatus_Plan_de_Rutinas', 'Estatus_de_Seguimiento');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            </div>
                                </div>

				</div>	
                    <br />
                            <div class="form-actions fluid">
                                <input type="hidden" value="@Model.Folio" id="ReferenceFolio" />
                                <input type="hidden" value="@Model.Folio" name="Folio" id="FolioId" />
                                <input type="hidden" value="@ViewBag.Operation" name="Operation" id="Operation" />
                                @if (!ViewBag.Consult)
                                {
                                    <input type="button" value="@Resources.Resources.Guardar" id="Planes_de_RutinasGuardar" class="btn btn-w-m btn-primary btn_save" onclick="return checkClientValidate('Planes_de_RutinasCreateForm');"  />
									<button onclick="Planes_de_RutinasGetBusinessRule('', 'Al Guardar o al Cerrar la Pantalla', '2')" type="button" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton" data-toggle="modal" data-target="#Planes_de_RutinasBusinessRule-form">
                                        <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleBeforeSave">
                                            <i class="fa fa-cogs fa-spin"></i>
                                        </a>
                                    </button>                                    

                                    <input type="button" value="@Resources.Resources.GuardarNuevo" id="Planes_de_RutinasGuardarYNuevo" onclick="return checkClientValidate('Planes_de_RutinasCreateForm');" data-bind="    click: saveAndNew" class="btn btn-w-m btn-success btn_saveandnew"  />
                                    <input type="button" value="@Resources.Resources.GuardarCopia" id="Planes_de_RutinasGuardarYCopia" onclick="return checkClientValidate('Planes_de_RutinasCreateForm');" data-bind="    click: saveAndNew" class="btn btn-w-m btn-success btn_saveandcopy"  />
                                    if (permission.Configure)
                                    {
                                        <a title="@Resources.Resources.Configure" id="ConfigureSave" name="ConfigureSave" onclick="SaveElementAttributes()" class="btn btn-success btn-configure">@Resources.Resources.Configure</a>
                                    }
                                }

                                <input type="hidden" id="hdnConfigureType" />
								<input type="hidden" id="hdnPlanes_de_RutinasBusinessRuleFieldId" />
                                <input type="hidden" id="hdnPlanes_de_RutinasBusinessRuleFieldName" />
                                <input type="hidden" id="hdnPlanes_de_RutinasBusinessRuleAttribute" />

                                <input type="button" value="@Resources.Resources.Cancelar" id="Planes_de_RutinasCancelar" name="Planes_de_RutinasCancelar" class="btn btn-danger noConsult btn_cancelar" data-bind="click: cancel" tabindex="16" />

                                <button onclick="Planes_de_RutinasGetBusinessRule('', 'Al Cancelar', '4')" type="button" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton" data-toggle="modal" data-target="#Planes_de_RutinasBusinessRule-form">
                                    <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleToBegin">
                                        <i class="fa fa-cogs fa-spin"></i>
                                    </a>
                                </button>
                            </div>
						</div>
					</div>
                }
        </div>
    </div>
</div>
<input id="hdnApplicationDirectory" type="hidden" value="@Url.Content("~/")" />

@section Styles {
<link href="@Url.Content("~/Content/BootstrapDatePicker/bootstrap-datetimepicker.min.css")" rel="stylesheet" />
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/select2Styles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
<style>
    .dataTables_filter {
        display: none;
    }
    .select2-results{background-color:#fff;}
    .select2-container .select2-dropdown{height:auto !important;}

    div.dataTables_info {
        display: inline-block;
        float: right;
    }
        /*i {
        font-size: 25px !important;
        display: block;
        color: #676a6c;
        margin-left: 6px;
        margin-right: 6px;
    }*/

    .fullWidth {
        width: 100%;
    }
</style>
}

<script type="text/javascript" src="~/Uploads/Scripts/Planes_de_Rutinas.js?v=@DateTime.Now.ToString("ddMMyyyyhhmmss")"></script>
<script type="text/javascript" src="~/Scripts/Custom/Planes_de_RutinasGeneral.js?v=@DateTime.Now.ToString("ddMMyyyyhhmmss")"></script>
<script type="text/javascript" src="~/Uploads/Scripts/Rules/Planes_de_RutinasCreateRules.js?v=@DateTime.Now.ToString("ddMMyyyyhhmmss")"></script>
<script src="~/Scripts/plugins/chosen/chosen.jquery.js"></script>

@section Scripts {


    <script type="text/javascript">
        


	function GetTraduction(text) {
         switch (text.toLowerCase()) {
            case 'edit':
                return "@Resources.Resources.Edit";          
            case 'delete':
                return "@Resources.Resources.Delete";               
            case 'required':
                return "@Resources.Resources.Required";              
            case 'notrequired':
                return "@Resources.Resources.NotRequired";           
            case 'enabled':
                return "@Resources.Resources.Enabled";         
            case 'disabled':
                return "@Resources.Resources.Disabled";           
            case 'visible':
                return "@Resources.Resources.Visible";            
            case 'botvisible':
                return "@Resources.Resources.InVisible";
            case 'messagednoinvisible':
                return "@Resources.Resources.messagedNoInVisible";
            case 'messagednoreadonly':
                return "@Resources.Resources.messagedNoReadOnly";
            case 'defaultvalue':
                return "@Resources.Resources.DefaultValue";
            case 'helptext':
                return "@Resources.Resources.HelpText";                     
            default:
                return "";
        }
    }
	
	    var isPartial = ('@ViewBag.IsPartial' == 'True');
        var isMR = ('@ViewBag.isMR' == 'True');
        var nameMR = '@ViewBag.nameMR';
		var nameAttribute = '@ViewBag.nameAttribute';
		var Tab_Datos_Generales = true;

		var Tab_Seguimiento_al_Plan = true;


        $(document).ready(function () {
            $('#ObjectId').val('44570');
		                 
            GetDetalle_Planes_de_Rutinas_Dias_de_la_semanaItem();



            GetDetalle_Planes_de_Rutinas_Tipo_de_Enfoque_del_EjercicioItem();
            GetDetalle_Planes_de_Rutinas_EjerciciosItem();

           
              showDetalle_Planes_de_RutinasGrid(null);

		   
			
             @if(ViewBag.IsNew)
            { 
                <text>$('input:checkbox').prop('checked', false);</text>
            }
			else
            {
                <text>
				if (Tab_Datos_Generales)
					Fill_Datos_Generales();

				if (Tab_Seguimiento_al_Plan)
					Fill_Seguimiento_al_Plan();


                </text>
             }
             EjecutarValidacionesAlComienzo();
                         $('#Fecha_de_Registro').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
                format: "@ConfigurationProperty.DateFormatDatePicker"
            });
            $('#Hora_de_Registro').clockpicker();
            $('#Fecha_inicio_del_Plan').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
                format: "@ConfigurationProperty.DateFormatDatePicker"
            });
            $('#Fecha_fin_del_Plan').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
                format: "@ConfigurationProperty.DateFormatDatePicker"
            });


            initiateUIControls();
			$('a').tooltip();
			$('.loading').css('display', 'none');
			

        });

        var Detalle_Planes_de_RutinasinsertRowCurrentIndex = -1;
        var Detalle_Planes_de_RutinasDataDataTable;
        function getDetalle_Planes_de_RutinasData() {
            $.ajax({
                url: "@Url.Content("~/Frontal/Planes_de_Rutinas/GetDetalle_Planes_de_Rutinas")" + "?draw=1&start=1&length=2147483647" + ($("#ReferenceFolio").val() != "" ? "&RelationId=" + $("#ReferenceFolio").val() : ""),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                    Detalle_Planes_de_RutinasDataDataTable = result.data;
                    showDetalle_Planes_de_RutinasGrid(result.data);
                    $('#Detalle_Planes_de_RutinasGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_Planes_de_RutinasGrid .gridDatePicker').attr("readonly", "");
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
        function Detalle_Planes_de_RutinasGetUpdateRowControls(data, nameOfTable, rowIndex) {

            var columnData = [];
            var counter = 0;
            var inputData = "<input type='text' class='fullWidth form-control' />";

           columnData[counter++] = $($(GetDetalle_Planes_de_Rutinas_Dias_de_la_semanaDropDown()).val(data.Numero_de_Dia)).addClass('Numero_de_Dia inputNumber').attr('id', nameOfTable + 'Numero_de_Dia' + rowIndex).attr('data-field', 'Numero_de_Dia').after($.parseHTML(addNew('Detalle_Planes_de_Rutinas', 'Dias_de_la_semana','Numero_de_Dia', 259792)));
            columnData[counter++] = $($($.parseHTML(GetGridDatePicker())).val(data.Fecha)).addClass('Fecha').attr('id', nameOfTable + 'Fecha' + rowIndex).attr('data-field', 'Fecha');
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Orden_de_Realizacion)).addClass('Orden_de_Realizacion inputNumber').attr('id', nameOfTable + 'Orden_de_Realizacion' + rowIndex).attr('data-field', 'Orden_de_Realizacion');
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Secuencia_del_Ejercicio)).addClass('Secuencia_del_Ejercicio').attr('id', nameOfTable + 'Secuencia_del_Ejercicio' + rowIndex).attr('data-field', 'Secuencia_del_Ejercicio');
           columnData[counter++] = $($(GetDetalle_Planes_de_Rutinas_Tipo_de_Enfoque_del_EjercicioDropDown()).val(data.Enfoque_del_Ejercicio)).addClass('Enfoque_del_Ejercicio inputNumber').attr('id', nameOfTable + 'Enfoque_del_Ejercicio' + rowIndex).attr('data-field', 'Enfoque_del_Ejercicio').after($.parseHTML(addNew('Detalle_Planes_de_Rutinas', 'Tipo_de_Enfoque_del_Ejercicio','Enfoque_del_Ejercicio', 260161)));
           columnData[counter++] = $($(GetDetalle_Planes_de_Rutinas_EjerciciosDropDown()).val(data.Ejercicio)).addClass('Ejercicio inputNumber').attr('id', nameOfTable + 'Ejercicio' + rowIndex).attr('data-field', 'Ejercicio').after($.parseHTML(addNew('Detalle_Planes_de_Rutinas', 'Ejercicios','Ejercicio', 260160)));
              columnData[counter++] = $($($.parseHTML(GetGridCheckBox())).prop('checked', (data.Realizado=="true" || data.Realizado==true)? 'checked': ''? 'checked': '')).addClass('Realizado').attr('id', nameOfTable + 'Realizado' + rowIndex).attr('data-field', 'Realizado');

            return columnData;
        }



        function GetFileInfo(fileData, fileUploadData) {

            var $div = $("<div>");
            if (fileUploadData != null && fileUploadData.files.length > 0) {

                $div.append("<label>" + fileUploadData.files[0].name + "</label>");
                //<i class="fa fa-times-circle" id='removeFileAttachment'>
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;

            } else if (fileUploadData != null) {
                return $.parseHTML(GetFileUploader());
            } else {
                $div.append("<label>" + fileData.FileName + "</label>");
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;
            }
        }

        var removedDetalle_Planes_de_RutinasData = [];
        function Detalle_Planes_de_RutinasDeleteRow(rowIndex, row) {
            var rowIndexTable = Detalle_Planes_de_RutinasTable.fnGetPosition($(row).parent().parent()[0]);
            var permission = {            
                 Delete: '@permissionDetalle_Planes_de_Rutinas.Delete' == 'True'
            };
            if (!permission.Delete || isConsultMode)
                return;            
            if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
              if (EjecutarValidacionesAlEliminarMRDetalle_Planes_de_Rutinas('Detalle_Planes_de_Rutinas_', '_' + rowIndex)) {
                var prevData = Detalle_Planes_de_RutinasTable.fnGetData(rowIndexTable );
                removedDetalle_Planes_de_RutinasData.push(prevData);
                Detalle_Planes_de_RutinasTable.fnDeleteRow(rowIndexTable );
				showDetalle_Planes_de_RutinasGrid(Detalle_Planes_de_RutinasTable.fnGetData());
              }
            }
			initiateUIControls();
        }

        function Detalle_Planes_de_RutinasrowCreationGrid(row, data, index) {
            var permission =  {            
                 Edit: '@permissionDetalle_Planes_de_Rutinas.Edit' == 'True',
                 Delete: '@permissionDetalle_Planes_de_Rutinas.Delete' == 'True'
            };
            setDetalle_Planes_de_RutinasValidation();
            var Detalle_Planes_de_RutinasRowElement = "Detalle_Planes_de_Rutinas_" + index.toString();
            $(row).addClass(Detalle_Planes_de_RutinasRowElement);
            var nameOfTable='Detalle_Planes_de_Rutinas_';
            var rowIndex = '_' + index;
            Detalle_Planes_de_RutinasinsertRowCurrentIndex = index;

            row.innerHTML = "";

            if (data.IsInsertRow) {

                if (row.childNodes.length != 0) {
                    for (var i = 0; i < row.childNodes.length; i++) {
                        row.childNodes[i].remove();
                    }
                }
                var controls = GetInsertDetalle_Planes_de_RutinasRowControls(index);
                var actionColInsert = $('<td>');

                var abc = "if(dynamicFieldValidation('" + Detalle_Planes_de_RutinasRowElement + "')){ Detalle_Planes_de_RutinasInsertRow(" + index + "); }";
                var insertRowHTML = '<a  data-toggle="tooltip" title="Confirmar Registro" onclick="' + abc + '">';
                $('<i class="fa fa-check">').appendTo($(insertRowHTML).appendTo(actionColInsert));
				$('<i class="fa fa-times">').appendTo($("<a data-toggle='tooltip' title='Cancelar Registro' onclick='Detalle_Planes_de_RutinasCancelRow(" + index + ")'>").appendTo(actionColInsert));
                actionColInsert.appendTo(row);

                for (i = 0; i < controls.length; i++) {
					var idHeader = $(controls[i]).data('field') + 'Header';
					if($(controls[i]).length > 1){
						idHeader = $($(controls[i])[1]).data('field') + 'Header';
					}					

					var classe = ($('#Detalle_Planes_de_RutinasGrid .' + idHeader).hasClass('dt-right') ? "dt-right" : "") + $('#Detalle_Planes_de_RutinasGrid .' + idHeader ).css('display') == 'none' ? " hide" : "";
				   
					if ($(controls[i]).next().length > 0) {
					    var div = $(controls[i]).next();
					    $('<td class="' + classe + '">').append($(controls[i])).append(div).appendTo(row);
					}else
					    $(controls[i]).appendTo($('<td class="' + classe + '">').appendTo(row));
					
                }
                $('#Detalle_Planes_de_RutinasGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('#Detalle_Planes_de_RutinasGrid .gridDatePicker').attr("readonly", "");
                return;
            }

            var actionCol = $('<td>');
			var edit = "<a title='@Resources.Resources.Edit' class='edit-MR' onclick='Detalle_Planes_de_RutinasEditRow(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                edit = "";
            var editPopUp = "<a title='@Resources.Resources.Edit' class='edit-popup-MR' data-toggle='modal' data-target='#AddDetalle_Planes_de_Rutinas-form' onclick='Detalle_Planes_de_RutinasEditRowPopup(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                editPopUp = "";
            var eliminar = "<a title='@Resources.Resources.Delete' class='eliminar-MR' onclick='Detalle_Planes_de_RutinasDeleteRow(" + index + ", this)'>";
            if (!permission.Delete || isConsultMode)
                eliminar = "";
            $('<i class="fa fa-pencil">').appendTo($(edit).appendTo(actionCol));
            //$('<i class="fa fa-edit">').appendTo($(editPopUp).appendTo(actionCol));
            $('<i class="fa fa-trash-o">').appendTo($(eliminar).appendTo(actionCol));
			if ($('.Action' + 'Header').css('display') != 'none')
				actionCol.appendTo(row);

            if ($('.Numero_de_Dia' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Numero_de_Dia'+rowIndex+'">').text(GetDetalle_Planes_de_Rutinas_Dias_de_la_semanaName(data.Numero_de_Dia)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Numero_de_Dia'+rowIndex+'">').text(GetDetalle_Planes_de_Rutinas_Dias_de_la_semanaName(data.Numero_de_Dia)).appendTo(row);
            if ($('.Fecha' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Fecha'+rowIndex+'">').text(data.Fecha).appendTo(row);
            else
                $('<td style="display:none;" id="'+nameOfTable+'Fecha'+rowIndex+'">').text(data.Fecha).appendTo(row);
            if ($('.Orden_de_Realizacion' + 'Header').css('display') != 'none')
                $('<td class="dt-right"  id="'+nameOfTable+'Orden_de_Realizacion'+rowIndex+'">').text(data.Orden_de_Realizacion).appendTo(row);
            else 
                 $('<td class="dt-right" style="display:none;"  id="'+nameOfTable+'Orden_de_Realizacion'+rowIndex+'">').text(data.Orden_de_Realizacion).appendTo(row);
            if ($('.Secuencia_del_Ejercicio' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Secuencia_del_Ejercicio'+rowIndex+'">').text(data.Secuencia_del_Ejercicio).appendTo(row);
            else 
                $('<td style="display:none;" id="'+nameOfTable+'Secuencia_del_Ejercicio'+rowIndex+'">').text(data.Secuencia_del_Ejercicio).appendTo(row);
            if ($('.Enfoque_del_Ejercicio' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Enfoque_del_Ejercicio'+rowIndex+'">').text(GetDetalle_Planes_de_Rutinas_Tipo_de_Enfoque_del_EjercicioName(data.Enfoque_del_Ejercicio)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Enfoque_del_Ejercicio'+rowIndex+'">').text(GetDetalle_Planes_de_Rutinas_Tipo_de_Enfoque_del_EjercicioName(data.Enfoque_del_Ejercicio)).appendTo(row);
            if ($('.Ejercicio' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Ejercicio'+rowIndex+'">').text(GetDetalle_Planes_de_Rutinas_EjerciciosName(data.Ejercicio)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Ejercicio'+rowIndex+'">').text(GetDetalle_Planes_de_Rutinas_EjerciciosName(data.Ejercicio)).appendTo(row);
            if ($('.Realizado' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Realizado'+rowIndex+'">').text(data.Realizado).appendTo(row);
            else
                $('<td style="display:none;" id="'+nameOfTable+'Realizado'+rowIndex+'">').text(data.Realizado).appendTo(row);

        }

        var Detalle_Planes_de_RutinasTable;
        function showDetalle_Planes_de_RutinasGrid(dataSet) {
            //removedDetalle_Planes_de_RutinasData = [];
            Detalle_Planes_de_RutinasTable = $('#Detalle_Planes_de_RutinasGrid').dataTable({
                dom: '<"html5buttons"B>lTgitp',
                buttons: [
                ],
                "createdRow": Detalle_Planes_de_RutinasrowCreationGrid,
                "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                data: dataSet,
                "columns": [
                    { "data": null, 'visible': true, "orderable": false },

                    { "data": "Numero_de_Dia", "orderable": false },
                    { "data": "Fecha", "orderable": false },
                    { "data": "Orden_de_Realizacion", "className": "dt-right", "orderable": false },
                    { "data": "Secuencia_del_Ejercicio", "orderable": false },
                    { "data": "Enfoque_del_Ejercicio", "orderable": false },
                    { "data": "Ejercicio", "orderable": false },
                    { "data": "Realizado", "orderable": false },

                ],
                "order": [[0, "asc"]],
                "language": {
                    "lengthMenu": "@Resources.Resources.Display" + " _MENU_ " + "@Resources.Resources.RecordsPerPage",
                    "zeroRecords": "@Resources.Resources.NothingFound",
                    "info": "@Resources.Resources.ShowingPages" + " _PAGE_ " + "@Resources.Resources.of" + " _PAGES_",
                    "infoEmpty": "@Resources.Resources.NoRecords",
                    "infoFiltered": "(" + "@Resources.Resources.FilteredFrom" + " _MAX_ " + "@Resources.Resources.TotalRecords" + ")",
                    "sSearch": "@Resources.Resources.Search",
                    "paginate": {
                        "previous": "@Resources.Resources.Previous",
                        "next": "@Resources.Resources.Next"
                    }
                },
				"bDestroy": true,
                "fnDrawCallback": function (settings) {
                    setDetalle_Planes_de_RutinasValidation();
                }
            }).on('init.dt', function (e, data) {
                $('a').tooltip();
            }).on('draw.dt', function () {
                $('#Detalle_Planes_de_RutinasGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('.gridDatePicker').inputmask("99-99-9999", { "placeholder": "dd-mm-yyyy" });
            });
        }


    var Detalle_Planes_de_Rutinas_Dias_de_la_semanaItems;
        function GetDetalle_Planes_de_Rutinas_Dias_de_la_semanaItem() {
            Detalle_Planes_de_Rutinas_Dias_de_la_semanaItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Planes_de_Rutinas/GetDetalle_Planes_de_Rutinas_Dias_de_la_semanaAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_Planes_de_Rutinas_Dias_de_la_semanaItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }



    var Detalle_Planes_de_Rutinas_Tipo_de_Enfoque_del_EjercicioItems;
        function GetDetalle_Planes_de_Rutinas_Tipo_de_Enfoque_del_EjercicioItem() {
            Detalle_Planes_de_Rutinas_Tipo_de_Enfoque_del_EjercicioItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Planes_de_Rutinas/GetDetalle_Planes_de_Rutinas_Tipo_de_Enfoque_del_EjercicioAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_Planes_de_Rutinas_Tipo_de_Enfoque_del_EjercicioItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
    var Detalle_Planes_de_Rutinas_EjerciciosItems;
        function GetDetalle_Planes_de_Rutinas_EjerciciosItem() {
            Detalle_Planes_de_Rutinas_EjerciciosItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Planes_de_Rutinas/GetDetalle_Planes_de_Rutinas_EjerciciosAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_Planes_de_Rutinas_EjerciciosItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }


        var Detalle_Planes_de_RutinasData = [];
        var Detalle_Planes_de_RutinasdeletedItem = [];
        var Detalle_Planes_de_RutinasDataMain = [];
        var Detalle_Planes_de_RutinasDataMainPages = [];
        var Detalle_Planes_de_RutinasnewItemCount = 0;
        var Detalle_Planes_de_RutinasmaxItemIndex = 0;
        var Detalle_Planes_de_RutinasDataMainInitialized = false;

        function SendDetalle_Planes_de_Rutinas(callBack, FolioId) {
            Detalle_Planes_de_RutinasData = GetDetalle_Planes_de_RutinasFromDataTable();

            if (Detalle_Planes_de_RutinasData.length > 0 || $("#ReferenceFolio").val() != FolioId) {
                if ($("#ReferenceFolio").val() != "0" && FolioId ==null)
                    FolioId = $("#ReferenceFolio").val();                
                if ($("#ReferenceFolio").val() == '')
                    $("#ReferenceFolio").val('0');
                $.ajax({
                    url: '@Url.Content("~/Frontal/Planes_de_Rutinas/PostDetalle_Planes_de_Rutinas?MasterId=")' + FolioId + "&referenceId=" + $("#ReferenceFolio").val(),
                    type: 'POST',
                    data: GetDetalle_Planes_de_Rutinas(),
                    async: true,
                    success: function (result) {

                    },
                    error: function (result) {
                        showNotification("@Resources.Resources.ErrorContactingServer", "error");
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });
            } else {
                //showNotification("@Resources.Resources.SaveSuccess", "success");
                //callBack(FolioId);
            }
            return true;
        }

        function GetAddDetalle_Planes_de_RutinasPopup(currentRowIndex, mode, id) {

            $.ajax({
                url: "@Url.Action("AddDetalle_Planes_de_Rutinas", "Detalle_Planes_de_Rutinas")",
                type: "GET",
                async: false,
                data: { rowIndex: currentRowIndex, functionMode: mode, id: id },
                success: function (data) {
                    $(".AddDetalle_Planes_de_RutinasModal").html(data);
                },
                error: function () {

                }
            });

            @*$.get('@Url.Action("AddDetalle_Planes_de_Rutinas", "Detalle_Planes_de_Rutinas")', { rowIndex: currentRowIndex }, function (data) {
                $(".AddDetalle_Planes_de_RutinasModal").html(data);
            });*@
        }

        function ShowMessagePendingRowDetalle_Planes_de_Rutinas()
        {
            //alert('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Seguimiento de Rutina"))')
	    showNotification('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Seguimiento de Rutina"))', "warning");
        }


        function initiateUIControls() {
             $('.gridDatePicker').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
                format: "@ConfigurationProperty.DateFormatDatePicker"
            });
            //Time Picker
            $('.gridTimePicker').clockpicker();
            $('.inputMoney').inputmask("currency", { greedy: false, prefix: "", rightAlign: false });
			$('td.inputMoney').inputmask("currency", { greedy: false, prefix: "$ ", rightAlign: false });
			$('td input.inputMoney').inputmask("currency", { greedy: false, prefix: "$ ", rightAlign: false });










        }

    </script>

<script type="text/javascript">


   function GetCatalogPopup(catalog, nameAttribute, isMR, nameMR) {
        if (!isMR)
            var url = "@Url.Action("Create", "Catalog", new { Module_Id = "1", isPartial = true, nameAttribute = "AttributoNombre" })";
        else
            var url = "@Url.Action("Create", "Catalog", new { Module_Id = "1", isPartial = true, isMR = true, nameMR = "Multirenglon",nameAttribute= "AttributoNombre" })";

        url = url.replace("Catalog", catalog).replace("Multirenglon", nameMR).replace("AttributoNombre", nameAttribute);

        window.open(htmlDecode(url), '_blank', 'left=200,top=100,width=850,height=550,toolbar=0,resizable=0');
    }

    function RefreshCatalog(catalog, control) {

	 if ($('#' + control).hasClass('AutoComplete'))   {
		   if ($('#' + control).attr("data-isfilter") == "true") {
				eval(GetReglaFilter(control, $('#ObjectId').val()));
				return;
			}
		}
			
			var url = '@Url.Content("~/Frontal/Planes_de_Rutinas/GetCatalogAll")';
			url = url.replace(/Catalog/g, catalog);

			$.ajax({
				url: url,
				async: true,
				success:function(result)
				{
					addItemsToSelect($('#' + control), result);
				},
				error: function (result)
				{
					showNotification("@Resources.Resources.ErrorContactingServer", "error");
				}
			});
		
    }


        function SendPlanes_de_RutinasData(callBack) {
			
					
		 var arr = []; 
		 $("form#CreatePlanes_de_Rutinas").find(':input').each(function( index ) {		 
			if ($(this).prop('disabled')==true|| $(this).prop('disabled')=="disabled")
			{		
				arr.push($(this).attr('id')); 
				$(this).prop('disabled', false);  	
			}
	    });
		
             var formData = new FormData($("form#CreatePlanes_de_Rutinas")[0]);
			$.each( arr, function( key, value ) {
			  $('#' +value).prop('disabled', true);
			});
			var id = $("#ReferenceFolio").val();
            var isNew = $('#hdnIsNew').val();
           
			if (Tab_Datos_Generales && !checkClientValidate('Planes_de_RutinasCreateForm', 'Datos_Generales')) {
				return false;
			}						

			if (Tab_Seguimiento_al_Plan && !checkClientValidate('Planes_de_RutinasCreateForm', 'Seguimiento_al_Plan')) {
				return false;
			}						


			
			if (isNew == "True")
            {
                id = CreateID();
            }
			
			
			if (Tab_Datos_Generales)
				Save_Datos_Generales(id);

			if (Tab_Seguimiento_al_Plan)
				Save_Seguimiento_al_Plan(id);


			showNotification("@Resources.Resources.SaveSuccess", "success");
			callBack(id);
            return true;
        };
		function CreateID()
		{
			var newId = 0;
			$.ajax({
				url: '@Url.Content("~/Frontal/Planes_de_Rutinas/CreateID")',
				type: 'GET',
				async: false,
				success: function (result) {
					if (result < 0) {
						showNotification("@Resources.Resources.ErrorSave", "error");
					} else {
						newId = result;
					}
				},
				error: function (result) {
					showNotification("@Resources.Resources.ErrorContactingServer", "error");
				},
				cache: false,
				contentType: false,
				processData: false
			});
			return newId;
		}
		
		function OpenRules()
		{
			$.get('@Url.Action("Index", "Business_Rule_Creation")', {}, function (data) {
				$(".Planes_de_RutinasBusinessRuleModal").html(data);
			});
		}
                function Planes_de_RutinasGetBusinessRule(FieldId, FieldName, Attribute) {
			if (FieldId != null && FieldName != null)
			{
			        $('#FieldId').val(FieldId);
				$('#FieldName').val(FieldName);
				$('#Attribute').val(Attribute);
			}
			$('#ObjectId').val('44570');
			$('#Screen').val('Planes_de_Rutinas');
			OpenRules();
               }

    var permission = {
        Consult: '@permission.Consult' == 'True',
        New: '@permission.New' == 'True',
        Edit: '@permission.Edit' == 'True',
        Delete: '@permission.Delete' == 'True',
        Export: '@permission.Export' == 'True',
        Print: '@permission.Print' == 'True',
        Configure: '@permission.Configure' == 'True',
    };

    
    //MR-var statusItems;
    //MR-var stateItems;
    //MR-var cityItems = [];
    var isConsultMode = "@ViewBag.Consult" == "True";
    Consult(isConsultMode);
        function Consult(val) {
            if (val) {
                $(':input').attr('readonly', 'readonly');
                $(':input').attr('disabled', 'true');
                $('.noConsult').removeAttr('readonly');
                $('.noConsult').removeAttr('disabled');
            }
        }

    function Planes_de_RutinasBackToGrid() {
        		if (isPartial)
			window.close('', '_parent', '');
        else
			location.href = "@Url.Content("~/Frontal/Planes_de_Rutinas/")";
    }
	
	function ReadScriptSettings(callback)
    {
        $.post("@Url.Content("~/Frontal/Planes_de_Rutinas/ReadScriptSettings")", function (data) {
            mainElementObject = JSON.parse(data.MainElement);
			if (data.ChildElement != null) {
                childElementObject = JSON.parse(data.ChildElement);
            }
            callback();
        });
    }

    function SaveSettingsWithoutReload() {
        $.post("@Url.Content("~/Frontal/Planes_de_Rutinas/WriteScriptSettings")", { CustomModuleAttributeList: mainElementObject, ChildModuleAttributeList: childElementObject }, function (data) {
            //$('#hdnConfigureType').val("0");
        }, "json");
    }
	
        function SaveElementAttributes() {
            if ($('#hdnConfigureType').val() == "1") {
                $.post("@Url.Content("~/Frontal/Planes_de_Rutinas/WriteScriptSettings")", { CustomModuleAttributeList: mainElementObject, ChildModuleAttributeList: childElementObject }, function (data) {
                    $('#hdnConfigureType').val("0");
                    location.reload(true);
                }, "json");
            } else {
                $.post("@Url.Content("~/Frontal/Planes_de_Rutinas/ReadScriptSettings")", function (data) {
                    mainElementObject = JSON.parse(data.MainElement);
                    childElementObject = JSON.parse(data.ChildElement);

                    for (var i = 0; i < mainElementObject.length; i++) {
							var mainElementAttributes = '<div class="col-sm-2">';
							mainElementAttributes += '<div class="displayAttributes requiredAttribute"><a class="requiredClick" title="' + (mainElementObject[i].IsRequired == true ? "@Resources.Resources.Required" : "@Resources.Resources.NotRequired") + '" onclick="setRequired(' + i.toString() + ', this, 1)"><img src="' + (mainElementObject[i].IsRequired == true ? "@Url.Content("~/Images/Required.png")" : "@Url.Content("~/Images/Not-Required.png")") + '" alt="" /></a></div>';
							mainElementAttributes += '<div class="displayAttributes visibleAttribute"><a class="visibleClick" title="' + (mainElementObject[i].IsVisible == true ? "@Resources.Resources.Visible" : "@Resources.Resources.InVisible") + '" onclick="setVisible(' + i.toString() + ', this, 1)"><img src="' + (mainElementObject[i].IsVisible == true ? "@Url.Content("~/Images/Visible.png")" : "@Url.Content("~/Images/InVisible.png")") + '" alt="" /></a></div>';
							mainElementAttributes += '<div class="displayAttributes readOnlyAttribute"><a class="readOnlyClick" title="' + (mainElementObject[i].IsReadOnly == true ? "@Resources.Resources.Disabled" : "@Resources.Resources.Enabled") + '" onclick="setReadOnly(' + i.toString() + ', this, 1)"><img src="' + (mainElementObject[i].IsReadOnly == true ? "@Url.Content("~/Images/Disabled.png")" : "@Url.Content("~/Images/Enabled.png")") + '" alt="" /></a></div>';
							mainElementAttributes += '<div class="displayAttributes defaultValueAttribute"><a id="hlDefaultValue_' + i.toString() + '" class="defaultValueClick" title="' + (mainElementObject[i].DefaultValue) + '" onclick="setDefaultValue(' + i.toString() + ', this, 1)"><img src="' + (mainElementObject[i].DefaultValue != '' && mainElementObject[i].DefaultValue != null ? "@Url.Content("~/Images/default-value.png")" : "@Url.Content("~/Images/Not-Default-Value.png")") + '" alt="" /></a></div>';
							mainElementAttributes += '<div class="displayAttributes helpTextAttribute"><a id="hlHelpText_' + i.toString() + '" class="helpTextClick" title="' + (mainElementObject[i].HelpText) + '" onclick="setHelpText(' + i.toString() + ', this, 1)"><img src="' + (mainElementObject[i].HelpText != '' && mainElementObject[i].HelpText != null ? "@Url.Content("~/Images/green-help.png")" : "@Url.Content("~/Images/red-help.jpg")") + '" alt="" /></a></div>';
							mainElementAttributes += '</div>';
							$('#' + mainElementObject[i].inputId).parent().closest('.form-group').show();

							$('#' + mainElementObject[i].inputId).closest('.col-sm-8').after(mainElementAttributes);
                  }
					 if (childElementObject != null) {
                        for (var j = 0; j < childElementObject.length; j++) {
                            var table = childElementObject[j].table.trim();
                            var grid = '#' + table + 'Grid';
                            $(grid).find("thead").find("tr").find("th").each(function () {
                                for (var i = 0; i < childElementObject[j].elements.length; i++) {
                                    if ($(this).hasClass(childElementObject[j].elements[i].inputId + 'Header')) {
                                        $(this).show();
                                        $(this).parent().show();
                                        $(this).append(returnAttributeHTML(childElementObject[j].elements[i], table, i));
                                    }
                                }
                            });
                        }

                    }
                     $('#ConfigureSave').text('@Html.Raw(Resources.Resources.Save  +" "+ Resources.Resources.Settings)');
                    $('#hdnConfigureType').val("1");
                });
            }
        }
		$('#CreatePlanes_de_Rutinas').on('click', '.btnPopupBusinessRules', function () {
			var fieldId = $(this).data('field-id');
			var fieldName = $(this).data('field-name');
			var attribute = $(this).data('attribute');
			$('#FieldId').val(fieldId);
			$('#FieldName').val(fieldName);
			$('#Attribute').val(attribute);
                        Planes_de_RutinasGetBusinessRule();
		});
		//Initialize HTML Editors            
  var filebrowserBrowseUrl = '../../ckfinder/ckfinder.html';
  var filebrowserImageBrowseUrl = '../../ckfinder/ckfinder.html?type=Images';
  var filebrowserUploadUrl = '../../ckfinder/connector?command=QuickUpload&type=Files';
  var filebrowserImageUploadUrl = '../../ckfinder/connector?command=QuickUpload&type=Images';
		
		
		function Fill_Datos_Generales()
        {
            $.ajax({
                url: "@Url.Content("~/Frontal/Planes_de_Rutinas/Get_Datos_Generales")?Id=" + $("#ReferenceFolio").val(),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                                        $('#Folio').val(result.data.Folio);
                    $('#Fecha_de_Registro').val(result.data.Fecha_de_Registro);
                    $('#Hora_de_Registro').val(result.data.Hora_de_Registro);
                    $('#Usuario_que_Registra').val(result.data.Usuario_que_Registra);
                    $('#Paciente').val(result.data.Paciente);
                    $('#Nivel_de_dificultad').val(result.data.Nivel_de_dificultad);
                    $('#Semana').val(result.data.Semana);
                    $('#Fecha_inicio_del_Plan').val(result.data.Fecha_inicio_del_Plan);
                    $('#Fecha_fin_del_Plan').val(result.data.Fecha_fin_del_Plan);
                    $('#Estatus').val(result.data.Estatus);
                    $('#Rutina').val(result.data.Rutina);

                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
		
		function Save_Datos_Generales(newId) {
			var data = new FormData();
			data.append('Folio', newId);
			                data.append('Fecha_de_Registro', $('#Fecha_de_Registro').val());
                data.append('Hora_de_Registro', $('#Hora_de_Registro').val());
                data.append('Usuario_que_Registra', $('#Usuario_que_Registra').val());
                data.append('Paciente', $('#Paciente').val());
                data.append('Nivel_de_dificultad', $('#Nivel_de_dificultad').val());
                data.append('Semana', $('#Semana').val());
                data.append('Fecha_inicio_del_Plan', $('#Fecha_inicio_del_Plan').val());
                data.append('Fecha_fin_del_Plan', $('#Fecha_fin_del_Plan').val());
                data.append('Estatus', $('#Estatus').val());
                data.append('Rutina', $('#Rutina').val());

			$.ajax({
				url: '@Url.Content("~/Frontal/Planes_de_Rutinas/Post_Datos_Generales")',
				type: 'POST',
				data: data,
				async: false,
				dataType: "json",
				contentType: false,
				processData: false,
				success: function (result) {
					if (result < 0) {
						showNotification("@Resources.Resources.ErrorSave", "Error al guardar Datos_Generales");
					} else {
						newId = result;
                    
					}
				},
				error: function (result) {
					showNotification("@Resources.Resources.ErrorContactingServer", "Error al guardar Datos_Generales");
				},
				cache: false
			});
		}

		function Fill_Seguimiento_al_Plan()
        {
            $.ajax({
                url: "@Url.Content("~/Frontal/Planes_de_Rutinas/Get_Seguimiento_al_Plan")?Id=" + $("#ReferenceFolio").val(),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                                        $('#Folio').val(result.data.Folio);
                    Detalle_Planes_de_RutinasDataDataTable = result.Seguimiento_de_Rutina;
                    showDetalle_Planes_de_RutinasGrid(result.Seguimiento_de_Rutina);
                    $('#Detalle_Planes_de_RutinasGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_Planes_de_RutinasGrid .gridDatePicker').attr("readonly", "");
                    $('#Estatus_de_Seguimiento').val(result.data.Estatus_de_Seguimiento);

                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
		
		function Save_Seguimiento_al_Plan(newId) {
			var data = new FormData();
			data.append('Folio', newId);
			                data.append('Estatus_de_Seguimiento', $('#Estatus_de_Seguimiento').val());

			$.ajax({
				url: '@Url.Content("~/Frontal/Planes_de_Rutinas/Post_Seguimiento_al_Plan")',
				type: 'POST',
				data: data,
				async: false,
				dataType: "json",
				contentType: false,
				processData: false,
				success: function (result) {
					if (result < 0) {
						showNotification("@Resources.Resources.ErrorSave", "Error al guardar Seguimiento_al_Plan");
					} else {
						newId = result;
                    					    SendDetalle_Planes_de_Rutinas(null, newId);

					}
				},
				error: function (result) {
					showNotification("@Resources.Resources.ErrorContactingServer", "Error al guardar Seguimiento_al_Plan");
				},
				cache: false
			});
		}


    </script>
}
    <input type="hidden" id="FieldId" name="FieldId" value="" />
    <input type="hidden" id="FieldName" name="FieldName" value="" />
    <input type="hidden" id="ObjectId" name="ObjectId" value="" />
    <input type="hidden" id="Attribute" name="Attribute" value="" />
    <input type="hidden" id="Screen" name="Screen" value="" />
     <input type="hidden" id="Planes_de_Rutinas_cmbLabelSelect" name="Planes_de_Rutinas_cmbLabelSelect" value="@Resources.Resources.CmbSelect" />


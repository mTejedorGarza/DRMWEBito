@using System.Collections.Generic
@using Spartane.Web.Areas.Frontal.Models
@using Spartane.Web.Helpers
@model Spartane.Web.Areas.Frontal.Models.Tips_y_PromocionesAdvanceSearchModel
@{
    List<SelectListItem> varSpartan_User_Usuario_que_Registra = null;
    if (ViewBag.Spartan_Users_Usuario_que_Registra != null)
    { varSpartan_User_Usuario_que_Registra = (List<SelectListItem>)ViewBag.Spartan_Users_Usuario_que_Registra; }
    List<SelectListItem> varTipos_de_Vendedor_Tipo_de_Vendedor = null;
    if (ViewBag.Tipos_de_Vendedors_Tipo_de_Vendedor != null)
    { varTipos_de_Vendedor_Tipo_de_Vendedor = (List<SelectListItem>)ViewBag.Tipos_de_Vendedors_Tipo_de_Vendedor; }
    List<SelectListItem> varSpartan_User_Vendedor = null;
    if (ViewBag.Spartan_Users_Vendedor != null)
    { varSpartan_User_Vendedor = (List<SelectListItem>)ViewBag.Spartan_Users_Vendedor; }
    List<SelectListItem> varEspecialidades_Especialidad = null;
    if (ViewBag.Especialidadess_Especialidad != null)
    { varEspecialidades_Especialidad = (List<SelectListItem>)ViewBag.Especialidadess_Especialidad; }
    List<SelectListItem> varMedicos_Especialista = null;
    if (ViewBag.Medicoss_Especialista != null)
    { varMedicos_Especialista = (List<SelectListItem>)ViewBag.Medicoss_Especialista; }
    List<SelectListItem> varEstatus_Estatus = null;
    if (ViewBag.Estatuss_Estatus != null)
    { varEstatus_Estatus = (List<SelectListItem>)ViewBag.Estatuss_Estatus; }

    var filters = (List<SelectListItem>)ViewBag.Filter;
}
<style>
    .input-validation-error {
        background: rgb(251, 227, 228);
        border: 1px solid #fbc2c4;
        color: #8a1f11;
    }

    .MarginBottom {
        margin-bottom: 1%;
    }

    #divAdvanceSearch input {
        margin-right: 2%;
    }

    #divAdvanceSearch button {
        margin-right: 2%;
    }

    #divAdvanceSearch select {
        margin-right: 2%;
    }

    #divAdvanceSearch h3 {
        margin-top: 2%;
    }

</style>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox float-e-margins" id="divAdvanceSearch">
        <div class="ibox-content">
            @using (Html.BeginForm("ShowAdvanceFilter", "Tips_y_Promociones", FormMethod.Post, new { @id = "frmAdvanceSearch", @role = "form" }))
            {
				<input type="hidden" value="-1" name="idFilter" id="idFilter" />
                <div class="MarginBottom ">
                    <h3>@Resources.Tips_y_PromocionesResources.Folio</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromFolio, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromFolio" })
                    @Html.ValidationMessageFor(m => m.FromFolio)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToFolio, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToFolio", @data_min = "txtAdvanceFromFolio" })
                    @Html.ValidationMessageFor(m => m.ToFolio)
                </div>
        <div class="MarginBottom ">
            <h3>@Resources.Tips_y_PromocionesResources.Fecha_de_registro</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceFromFecha_de_registro" name="FromFecha_de_registro" type="text" value="@Model.FromFecha_de_registro" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceToFecha_de_registro" name="ToFecha_de_registro" type="text" value="@Model.ToFecha_de_registro" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
        <div class="MarginBottom ">
            <h3>@Resources.Tips_y_PromocionesResources.Hora_de_Registro</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceFromHora_de_Registro" name="FromHora_de_Registro" type="text" value="@Model.FromHora_de_Registro" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceToHora_de_Registro" name="ToHora_de_Registro" type="text" value="@Model.ToHora_de_Registro" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
        </div>
                <div class="MarginBottom">
                    <h3>@Resources.Tips_y_PromocionesResources.Usuario_que_Registra</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Usuario_que_RegistraFilter, filters, new { @class = "form-control", @id = "ddlUsuario_que_RegistraFilter" })
                    @Html.TextBoxFor(m => m.AdvanceUsuario_que_Registra, new { @class = "form-control", @type = "text", @id = "txtAdvanceUsuario_que_Registra" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varSpartan_User_Usuario_que_Registra!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceUsuario_que_RegistraMultiple, varSpartan_User_Usuario_que_Registra,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceUsuario_que_Registra"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Tips_y_PromocionesResources.Tipo_de_Vendedor</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Tipo_de_VendedorFilter, filters, new { @class = "form-control", @id = "ddlTipo_de_VendedorFilter" })
                    @Html.TextBoxFor(m => m.AdvanceTipo_de_Vendedor, new { @class = "form-control", @type = "text", @id = "txtAdvanceTipo_de_Vendedor" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varTipos_de_Vendedor_Tipo_de_Vendedor!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceTipo_de_VendedorMultiple, varTipos_de_Vendedor_Tipo_de_Vendedor,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceTipo_de_Vendedor"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Tips_y_PromocionesResources.Vendedor</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.VendedorFilter, filters, new { @class = "form-control", @id = "ddlVendedorFilter" })
                    @Html.TextBoxFor(m => m.AdvanceVendedor, new { @class = "form-control", @type = "text", @id = "txtAdvanceVendedor" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varSpartan_User_Vendedor!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceVendedorMultiple, varSpartan_User_Vendedor,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceVendedor"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Tips_y_PromocionesResources.Nombre</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.NombreFilter, filters, new { @class = "form-control", @id = "ddlNombreFilter" })
                    @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control", @type = "text", @id = "txtNombre" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Tips_y_PromocionesResources.Descripcion_Corta</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Descripcion_CortaFilter, filters, new { @class = "form-control", @id = "ddlDescripcion_CortaFilter" })
                    @Html.TextBoxFor(m => m.Descripcion_Corta, new { @class = "form-control", @type = "text", @id = "txtDescripcion_Corta" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Tips_y_PromocionesResources.Descripcion_Larga</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Descripcion_LargaFilter, filters, new { @class = "form-control", @id = "ddlDescripcion_LargaFilter" })
                    @Html.TextBoxFor(m => m.Descripcion_Larga, new { @class = "form-control", @type = "text", @id = "txtDescripcion_Larga" })
                </div>
        <div class="MarginBottom ">
            <h3>@Resources.Tips_y_PromocionesResources.Fecha_inicio_de_Vigencia</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceFromFecha_inicio_de_Vigencia" name="FromFecha_inicio_de_Vigencia" type="text" value="@Model.FromFecha_inicio_de_Vigencia" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceToFecha_inicio_de_Vigencia" name="ToFecha_inicio_de_Vigencia" type="text" value="@Model.ToFecha_inicio_de_Vigencia" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
        <div class="MarginBottom ">
            <h3>@Resources.Tips_y_PromocionesResources.Fecha_fin_de_Vigencia</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceFromFecha_fin_de_Vigencia" name="FromFecha_fin_de_Vigencia" type="text" value="@Model.FromFecha_fin_de_Vigencia" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceToFecha_fin_de_Vigencia" name="ToFecha_fin_de_Vigencia" type="text" value="@Model.ToFecha_fin_de_Vigencia" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
                <div class="MarginBottom">
                    <h3>@Resources.Tips_y_PromocionesResources.Especialidad</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.EspecialidadFilter, filters, new { @class = "form-control", @id = "ddlEspecialidadFilter" })
                    @Html.TextBoxFor(m => m.AdvanceEspecialidad, new { @class = "form-control", @type = "text", @id = "txtAdvanceEspecialidad" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varEspecialidades_Especialidad!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceEspecialidadMultiple, varEspecialidades_Especialidad,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceEspecialidad"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Tips_y_PromocionesResources.Especialista</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.EspecialistaFilter, filters, new { @class = "form-control", @id = "ddlEspecialistaFilter" })
                    @Html.TextBoxFor(m => m.AdvanceEspecialista, new { @class = "form-control", @type = "text", @id = "txtAdvanceEspecialista" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varMedicos_Especialista!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceEspecialistaMultiple, varMedicos_Especialista,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceEspecialista"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Tips_y_PromocionesResources.Estatus</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.EstatusFilter, filters, new { @class = "form-control", @id = "ddlEstatusFilter" })
                    @Html.TextBoxFor(m => m.AdvanceEstatus, new { @class = "form-control", @type = "text", @id = "txtAdvanceEstatus" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varEstatus_Estatus!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceEstatusMultiple, varEstatus_Estatus,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceEstatus"
                        });
                    }
                </div>

                <div class="MarginBottom form-inline">
                    <input type="submit" class="btn btn-primary" value="@Resources.Resources.Search"><a class="btn btn-primary" href="@Url.Content("~/Frontal/Tips_y_Promociones/")" value=" ">@Resources.Resources.Cancelar</a>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function InitiateAdvanceSearch() {
        var advanceSearch = {}, hasParameter = false;
        if ($("#txtAdvanceFromFolio").val() != "" || $("#txtAdvanceToFolio").val() != "") {
            hasParameter = true;
            advanceSearch.Tips_y_PromocionesFolioFrom = $("#txtAdvanceFromFolio").val();
            advanceSearch.Tips_y_PromocionesFolioTo = $("#txtAdvanceToFolio").val();
        }
        if ($("#txtAdvanceFromFecha_de_registro").val() != "" || $("#txtAdvanceToFecha_de_registro").val() != "") {
            hasParameter = true;
            advanceSearch.Tips_y_PromocionesFecha_de_registroFrom = $("#txtAdvanceFromFecha_de_registro").val();
            advanceSearch.Tips_y_PromocionesFecha_de_registroTo = $("#txtAdvanceToFecha_de_registro").val();
        }
        if ($("#txtAdvanceHora_de_Registro").val() != "") {
            hasParameter = true;
            advanceSearch.Tips_y_PromocionesHora_de_Registro = $("#txtAdvanceHora_de_Registro").val();
            advanceSearch.Tips_y_PromocionesHora_de_RegistroSearchType = $("#ddlAdvanceHora_de_RegistroFilter").val();
        }
        advanceSearch.Usuario_que_RegistraSearchType = 0;
        if ($('#ddlAdvanceUsuario_que_Registra').val().length > 0 || $("#txtAdvanceUsuario_que_Registra").val() == "") {


            if (isTips_y_PromocionesTextSearch) {
                advanceSearch.Usuario_que_RegistraName = $("#txtAdvanceUsuario_que_Registra").val();
                advanceSearch.Usuario_que_RegistraNameSearchType = $("#ddlAdvanceUsuario_que_Registra").val();
                advanceSearch.Usuario_que_RegistraSearchType = 1;
            }
            else {

                advanceSearch.Usuario_que_RegistraToSearch = $("#ddlAdvanceUsuario_que_Registra").val();
                advanceSearch.Usuario_que_RegistraSearchType = 2;
            }
        }
        advanceSearch.Tipo_de_VendedorSearchType = 0;
        if ($('#ddlAdvanceTipo_de_Vendedor').val().length > 0 || $("#txtAdvanceTipo_de_Vendedor").val() == "") {


            if (isTips_y_PromocionesTextSearch) {
                advanceSearch.Tipo_de_VendedorName = $("#txtAdvanceTipo_de_Vendedor").val();
                advanceSearch.Tipo_de_VendedorNameSearchType = $("#ddlAdvanceTipo_de_Vendedor").val();
                advanceSearch.Tipo_de_VendedorSearchType = 1;
            }
            else {

                advanceSearch.Tipo_de_VendedorToSearch = $("#ddlAdvanceTipo_de_Vendedor").val();
                advanceSearch.Tipo_de_VendedorSearchType = 2;
            }
        }
        advanceSearch.VendedorSearchType = 0;
        if ($('#ddlAdvanceVendedor').val().length > 0 || $("#txtAdvanceVendedor").val() == "") {


            if (isTips_y_PromocionesTextSearch) {
                advanceSearch.VendedorName = $("#txtAdvanceVendedor").val();
                advanceSearch.VendedorNameSearchType = $("#ddlAdvanceVendedor").val();
                advanceSearch.VendedorSearchType = 1;
            }
            else {

                advanceSearch.VendedorToSearch = $("#ddlAdvanceVendedor").val();
                advanceSearch.VendedorSearchType = 2;
            }
        }
        if ($("#txtAdvanceNombre").val() != "") {
            hasParameter = true;
            advanceSearch.Tips_y_PromocionesNombre = $("#txtAdvanceNombre").val();
            advanceSearch.Tips_y_PromocionesNombreSearchType = $("#ddlAdvanceNombreFilter").val();
        }
        if ($("#txtAdvanceDescripcion_Corta").val() != "") {
            hasParameter = true;
            advanceSearch.Tips_y_PromocionesDescripcion_Corta = $("#txtAdvanceDescripcion_Corta").val();
            advanceSearch.Tips_y_PromocionesDescripcion_CortaSearchType = $("#ddlAdvanceDescripcion_CortaFilter").val();
        }
        if ($("#txtAdvanceDescripcion_Larga").val() != "") {
            hasParameter = true;
            advanceSearch.Tips_y_PromocionesDescripcion_Larga = $("#txtAdvanceDescripcion_Larga").val();
            advanceSearch.Tips_y_PromocionesDescripcion_LargaSearchType = $("#ddlAdvanceDescripcion_LargaFilter").val();
        }
        advanceSearch.ImagenSearchType = 0;
        if ($('#ddlAdvanceImagen').val().length > 0 || $("#txtAdvanceImagen").val() == "") {


            if (isTips_y_PromocionesTextSearch) {
                advanceSearch.ImagenName = $("#txtAdvanceImagen").val();
                advanceSearch.ImagenNameSearchType = $("#ddlAdvanceImagen").val();
                advanceSearch.ImagenSearchType = 1;
            }
            else {

                advanceSearch.ImagenToSearch = $("#ddlAdvanceImagen").val();
                advanceSearch.ImagenSearchType = 2;
            }
        }
        if ($("#txtAdvanceFromFecha_inicio_de_Vigencia").val() != "" || $("#txtAdvanceToFecha_inicio_de_Vigencia").val() != "") {
            hasParameter = true;
            advanceSearch.Tips_y_PromocionesFecha_inicio_de_VigenciaFrom = $("#txtAdvanceFromFecha_inicio_de_Vigencia").val();
            advanceSearch.Tips_y_PromocionesFecha_inicio_de_VigenciaTo = $("#txtAdvanceToFecha_inicio_de_Vigencia").val();
        }
        if ($("#txtAdvanceFromFecha_fin_de_Vigencia").val() != "" || $("#txtAdvanceToFecha_fin_de_Vigencia").val() != "") {
            hasParameter = true;
            advanceSearch.Tips_y_PromocionesFecha_fin_de_VigenciaFrom = $("#txtAdvanceFromFecha_fin_de_Vigencia").val();
            advanceSearch.Tips_y_PromocionesFecha_fin_de_VigenciaTo = $("#txtAdvanceToFecha_fin_de_Vigencia").val();
        }
        advanceSearch.EspecialidadSearchType = 0;
        if ($('#ddlAdvanceEspecialidad').val().length > 0 || $("#txtAdvanceEspecialidad").val() == "") {


            if (isTips_y_PromocionesTextSearch) {
                advanceSearch.EspecialidadName = $("#txtAdvanceEspecialidad").val();
                advanceSearch.EspecialidadNameSearchType = $("#ddlAdvanceEspecialidad").val();
                advanceSearch.EspecialidadSearchType = 1;
            }
            else {

                advanceSearch.EspecialidadToSearch = $("#ddlAdvanceEspecialidad").val();
                advanceSearch.EspecialidadSearchType = 2;
            }
        }
        advanceSearch.EspecialistaSearchType = 0;
        if ($('#ddlAdvanceEspecialista').val().length > 0 || $("#txtAdvanceEspecialista").val() == "") {


            if (isTips_y_PromocionesTextSearch) {
                advanceSearch.EspecialistaName = $("#txtAdvanceEspecialista").val();
                advanceSearch.EspecialistaNameSearchType = $("#ddlAdvanceEspecialista").val();
                advanceSearch.EspecialistaSearchType = 1;
            }
            else {

                advanceSearch.EspecialistaToSearch = $("#ddlAdvanceEspecialista").val();
                advanceSearch.EspecialistaSearchType = 2;
            }
        }
        advanceSearch.EstatusSearchType = 0;
        if ($('#ddlAdvanceEstatus').val().length > 0 || $("#txtAdvanceEstatus").val() == "") {


            if (isTips_y_PromocionesTextSearch) {
                advanceSearch.EstatusName = $("#txtAdvanceEstatus").val();
                advanceSearch.EstatusNameSearchType = $("#ddlAdvanceEstatus").val();
                advanceSearch.EstatusSearchType = 1;
            }
            else {

                advanceSearch.EstatusToSearch = $("#ddlAdvanceEstatus").val();
                advanceSearch.EstatusSearchType = 2;
            }
        }

        advanceSearchQuery = hasParameter ? JSON.stringify(advanceSearch) : "";
        $('#tblTips_y_Promociones').DataTable().draw();
        return false;
    }

    var advanceSearchQuery = "", isTips_y_PromocionesTextSearch = true;

    $(document).ready(function () {
        $('.clock').clockpicker();
		$('.date').datepicker({
			todayBtn: "linked",
			keyboardNavigation: false,
			forceParse: false,
			calendarWeeks: true,
			autoclose: true,
			format: "@ConfigurationProperty.DateFormatDatePicker"
		});
        $("#txtAdvanceUsuario_que_Registra").keypress(function () {
            isTips_y_PromocionesTextSearch = true;
            $("#ddlAdvanceUsuario_que_Registra").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceUsuario_que_Registra").change(function () {
            isTips_y_PromocionesTextSearch = false;
            $("#txtAdvanceUsuario_que_Registra").val('');
        });
        $("#txtAdvanceTipo_de_Vendedor").keypress(function () {
            isTips_y_PromocionesTextSearch = true;
            $("#ddlAdvanceTipo_de_Vendedor").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceTipo_de_Vendedor").change(function () {
            isTips_y_PromocionesTextSearch = false;
            $("#txtAdvanceTipo_de_Vendedor").val('');
        });
        $("#txtAdvanceVendedor").keypress(function () {
            isTips_y_PromocionesTextSearch = true;
            $("#ddlAdvanceVendedor").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceVendedor").change(function () {
            isTips_y_PromocionesTextSearch = false;
            $("#txtAdvanceVendedor").val('');
        });
        $("#txtAdvanceEspecialidad").keypress(function () {
            isTips_y_PromocionesTextSearch = true;
            $("#ddlAdvanceEspecialidad").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceEspecialidad").change(function () {
            isTips_y_PromocionesTextSearch = false;
            $("#txtAdvanceEspecialidad").val('');
        });
        $("#txtAdvanceEspecialista").keypress(function () {
            isTips_y_PromocionesTextSearch = true;
            $("#ddlAdvanceEspecialista").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceEspecialista").change(function () {
            isTips_y_PromocionesTextSearch = false;
            $("#txtAdvanceEspecialista").val('');
        });
        $("#txtAdvanceEstatus").keypress(function () {
            isTips_y_PromocionesTextSearch = true;
            $("#ddlAdvanceEstatus").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceEstatus").change(function () {
            isTips_y_PromocionesTextSearch = false;
            $("#txtAdvanceEstatus").val('');
        });

    });
</script>


@section Styles {
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/clockpickerStyles")

}

@section Scripts {
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/clockpicker")


    <script>
        //Adding Rules
        jQuery.validator.unobtrusive
      .adapters.addSingleVal("isnumberafter", "propertyname");
        jQuery.validator.unobtrusive
    .adapters.addSingleVal("isdateafter", "propertyname");

        //Number after method
        jQuery.validator.addMethod("isnumberafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {
                //if (Date.parse(val) <= Date.parse(otherVal)) {
                if (Number(val) < Number(otherVal)) {
                    return false;
                }
                        }
            return true;
        });

        //Date after after method
        jQuery.validator.addMethod("isdateafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {

                if (GetDateObject(val) < GetDateObject(otherVal)) {

                    return false;
                    }
                }
            return true;
            });


        function GetDateObject(value) {
            var delimiter = GetDelimiter(dateFormat);
            var dateCollection = value.split(delimiter);
            var formatCollection = dateFormat.split(delimiter);
            var dateModel = GetDateModel(dateCollection, formatCollection);
            return new Date(dateModel.Year, dateModel.Month - 1, dateModel.Day);
        }
        //Used to get the date model by parsing the date and the format
        function GetDateModel(dateCollection,formatCollection) {
            var day, month, year;
            for (var i = 0; i < formatCollection.length; i++) {
                switch (formatCollection[i][0].toUpperCase()) {
                
                    case "D":
                        day = dateCollection[i];
                        break;

                    case "Y":
                        year = dateCollection[i];
                        break;

                    case "M":
                        month = dateCollection[i];
                        break;
                }
            }

            return {
                Day:day,
                Month:month,
                Year:year
            };
        }

        function GetDelimiter(format) {

            for (var i = 0; i < format.length; i++) {
                if (/[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g.test(format[i])) {
                    return format[i];
                }
            }
            return null;
        }

        var dateFormat = "@ConfigurationProperty.DateFormatDatePicker";

        $(document).ready(function () {
            $('.input-daterange').datepicker({
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true,
                format: dateFormat,
                message: 'The date is not a valid'
            });

            $(".chosen-select").chosen({ width: "22%", no_results_text: "Oops, nothing found!" });
			if ($('#IsFilterModal').val() == 'true') {
                $('.ShowAdvanceFilter #right-sidebar').css('display', 'none');
                $('.ShowAdvanceFilter .navbar-default').css('display', 'none');
                $('.ShowAdvanceFilter .border-bottom').css('display', 'none');
                $('.ShowAdvanceFilter #page-wrapper').css('margin', '0 auto');
                $('.ShowAdvanceFilter .btn-save').val('@Resources.Resources.Filter');
                $('.ShowAdvanceFilter .btn-cancelar').attr('data-dismiss', 'modal');
                $('.ShowAdvanceFilter .btn-cancelar').removeAttr('href');
                $('#idFilter').val($('#IdReport').val());
            }
        });

    </script>
}


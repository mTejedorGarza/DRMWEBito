@using System.Collections.Generic
@using Spartane.Web.Areas.Frontal.Models
@using Spartane.Web.Helpers
@model Spartane.Web.Areas.Frontal.Models.Detalle_Horarios_ActividadAdvanceSearchModel
@{
    List<SelectListItem> varDetalle_Registro_en_Actividad_Evento_Codigo_de_Reservacion = null;
    if (ViewBag.Detalle_Registro_en_Actividad_Eventos_Codigo_de_Reservacion != null)
    { varDetalle_Registro_en_Actividad_Evento_Codigo_de_Reservacion = (List<SelectListItem>)ViewBag.Detalle_Registro_en_Actividad_Eventos_Codigo_de_Reservacion; }
    List<SelectListItem> varParentescos_Empleados_Parentesco_con_el_Empleado = null;
    if (ViewBag.Parentescos_Empleadoss_Parentesco_con_el_Empleado != null)
    { varParentescos_Empleados_Parentesco_con_el_Empleado = (List<SelectListItem>)ViewBag.Parentescos_Empleadoss_Parentesco_con_el_Empleado; }
    List<SelectListItem> varSexo_Sexo = null;
    if (ViewBag.Sexos_Sexo != null)
    { varSexo_Sexo = (List<SelectListItem>)ViewBag.Sexos_Sexo; }
    List<SelectListItem> varEstatus_Reservaciones_Actividad_Estatus_de_la_Reservacion = null;
    if (ViewBag.Estatus_Reservaciones_Actividads_Estatus_de_la_Reservacion != null)
    { varEstatus_Reservaciones_Actividad_Estatus_de_la_Reservacion = (List<SelectListItem>)ViewBag.Estatus_Reservaciones_Actividads_Estatus_de_la_Reservacion; }

    var filters = (List<SelectListItem>)ViewBag.Filter;
}
<style>
    .input-validation-error {
        background: rgb(251, 227, 228);
        border: 1px solid #fbc2c4;
        color: #8a1f11;
    }

    .MarginBottom {
        margin-bottom: 1%;
    }

    #divAdvanceSearch input {
        margin-right: 2%;
    }

    #divAdvanceSearch button {
        margin-right: 2%;
    }

    #divAdvanceSearch select {
        margin-right: 2%;
    }

    #divAdvanceSearch h3 {
        margin-top: 2%;
    }

</style>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox float-e-margins" id="divAdvanceSearch">
        <div class="ibox-content">
            @using (Html.BeginForm("ShowAdvanceFilter", "Detalle_Horarios_Actividad", FormMethod.Post, new { @id = "frmAdvanceSearch", @role = "form" }))
            {
				<input type="hidden" value="-1" name="idFilter" id="idFilter" />
                <div class="MarginBottom ">
                    <h3>@Resources.Detalle_Horarios_ActividadResources.Folio</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromFolio, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromFolio" })
                    @Html.ValidationMessageFor(m => m.FromFolio)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToFolio, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToFolio", @data_min = "txtAdvanceFromFolio" })
                    @Html.ValidationMessageFor(m => m.ToFolio)
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.Detalle_Horarios_ActividadResources.Numero_de_Cita</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromNumero_de_Cita, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromNumero_de_Cita" })
                    @Html.ValidationMessageFor(m => m.FromNumero_de_Cita)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToNumero_de_Cita, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToNumero_de_Cita", @data_min = "txtAdvanceFromNumero_de_Cita" })
                    @Html.ValidationMessageFor(m => m.ToNumero_de_Cita)
                </div>
        <div class="MarginBottom ">
            <h3>@Resources.Detalle_Horarios_ActividadResources.Hora_inicio</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceFromHora_inicio" name="FromHora_inicio" type="text" value="@Model.FromHora_inicio" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceToHora_inicio" name="ToHora_inicio" type="text" value="@Model.ToHora_inicio" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
        </div>
        <div class="MarginBottom ">
            <h3>@Resources.Detalle_Horarios_ActividadResources.Hora_fin</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceFromHora_fin" name="FromHora_fin" type="text" value="@Model.FromHora_fin" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceToHora_fin" name="ToHora_fin" type="text" value="@Model.ToHora_fin" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
        </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Horarios_ActividadResources.Horario</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.HorarioFilter, filters, new { @class = "form-control", @id = "ddlHorarioFilter" })
                    @Html.TextBoxFor(m => m.Horario, new { @class = "form-control", @type = "text", @id = "txtHorario" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Horarios_ActividadResources.Codigo_de_Reservacion</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Codigo_de_ReservacionFilter, filters, new { @class = "form-control", @id = "ddlCodigo_de_ReservacionFilter" })
                    @Html.TextBoxFor(m => m.AdvanceCodigo_de_Reservacion, new { @class = "form-control", @type = "text", @id = "txtAdvanceCodigo_de_Reservacion" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varDetalle_Registro_en_Actividad_Evento_Codigo_de_Reservacion!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceCodigo_de_ReservacionMultiple, varDetalle_Registro_en_Actividad_Evento_Codigo_de_Reservacion,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceCodigo_de_Reservacion"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Horarios_ActividadResources.Numero_de_Empleado</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Numero_de_EmpleadoFilter, filters, new { @class = "form-control", @id = "ddlNumero_de_EmpleadoFilter" })
                    @Html.TextBoxFor(m => m.Numero_de_Empleado, new { @class = "form-control", @type = "text", @id = "txtNumero_de_Empleado" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Horarios_ActividadResources.Nombre_Completo</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Nombre_CompletoFilter, filters, new { @class = "form-control", @id = "ddlNombre_CompletoFilter" })
                    @Html.TextBoxFor(m => m.Nombre_Completo, new { @class = "form-control", @type = "text", @id = "txtNombre_Completo" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Horarios_ActividadResources.Parentesco_con_el_Empleado</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Parentesco_con_el_EmpleadoFilter, filters, new { @class = "form-control", @id = "ddlParentesco_con_el_EmpleadoFilter" })
                    @Html.TextBoxFor(m => m.AdvanceParentesco_con_el_Empleado, new { @class = "form-control", @type = "text", @id = "txtAdvanceParentesco_con_el_Empleado" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varParentescos_Empleados_Parentesco_con_el_Empleado!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceParentesco_con_el_EmpleadoMultiple, varParentescos_Empleados_Parentesco_con_el_Empleado,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceParentesco_con_el_Empleado"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Horarios_ActividadResources.Sexo</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.SexoFilter, filters, new { @class = "form-control", @id = "ddlSexoFilter" })
                    @Html.TextBoxFor(m => m.AdvanceSexo, new { @class = "form-control", @type = "text", @id = "txtAdvanceSexo" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varSexo_Sexo!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceSexoMultiple, varSexo_Sexo,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceSexo"
                        });
                    }
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.Detalle_Horarios_ActividadResources.Edad</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromEdad, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromEdad" })
                    @Html.ValidationMessageFor(m => m.FromEdad)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToEdad, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToEdad", @data_min = "txtAdvanceFromEdad" })
                    @Html.ValidationMessageFor(m => m.ToEdad)
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Horarios_ActividadResources.Estatus_de_la_Reservacion</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Estatus_de_la_ReservacionFilter, filters, new { @class = "form-control", @id = "ddlEstatus_de_la_ReservacionFilter" })
                    @Html.TextBoxFor(m => m.AdvanceEstatus_de_la_Reservacion, new { @class = "form-control", @type = "text", @id = "txtAdvanceEstatus_de_la_Reservacion" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varEstatus_Reservaciones_Actividad_Estatus_de_la_Reservacion!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceEstatus_de_la_ReservacionMultiple, varEstatus_Reservaciones_Actividad_Estatus_de_la_Reservacion,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceEstatus_de_la_Reservacion"
                        });
                    }
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.Detalle_Horarios_ActividadResources.Frecuencia_Cardiaca_ppm</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromFrecuencia_Cardiaca_ppm, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromFrecuencia_Cardiaca_ppm" })
                    @Html.ValidationMessageFor(m => m.FromFrecuencia_Cardiaca_ppm)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToFrecuencia_Cardiaca_ppm, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToFrecuencia_Cardiaca_ppm", @data_min = "txtAdvanceFromFrecuencia_Cardiaca_ppm" })
                    @Html.ValidationMessageFor(m => m.ToFrecuencia_Cardiaca_ppm)
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.Detalle_Horarios_ActividadResources.Presion_sistolica_mm_Hg</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromPresion_sistolica_mm_Hg, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromPresion_sistolica_mm_Hg" })
                    @Html.ValidationMessageFor(m => m.FromPresion_sistolica_mm_Hg)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToPresion_sistolica_mm_Hg, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToPresion_sistolica_mm_Hg", @data_min = "txtAdvanceFromPresion_sistolica_mm_Hg" })
                    @Html.ValidationMessageFor(m => m.ToPresion_sistolica_mm_Hg)
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.Detalle_Horarios_ActividadResources.Presion_diastolica_mm_Hg</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromPresion_diastolica_mm_Hg, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromPresion_diastolica_mm_Hg" })
                    @Html.ValidationMessageFor(m => m.FromPresion_diastolica_mm_Hg)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToPresion_diastolica_mm_Hg, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToPresion_diastolica_mm_Hg", @data_min = "txtAdvanceFromPresion_diastolica_mm_Hg" })
                    @Html.ValidationMessageFor(m => m.ToPresion_diastolica_mm_Hg)
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.Detalle_Horarios_ActividadResources.Peso_actual_kg</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromPeso_actual_kg, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isDecimalKey(this, event);", @id = "txtAdvanceFromPeso_actual_kg" })
                    @Html.ValidationMessageFor(m => m.FromPeso_actual_kg)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToPeso_actual_kg, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isDecimalKey(this, event);", @id = "txtAdvanceToPeso_actual_kg", @data_min = "txtAdvanceFromPeso_actual_kg" })
                    @Html.ValidationMessageFor(m => m.ToPeso_actual_kg)
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.Detalle_Horarios_ActividadResources.Estatura_m</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromEstatura_m, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isDecimalKey(this, event);", @id = "txtAdvanceFromEstatura_m" })
                    @Html.ValidationMessageFor(m => m.FromEstatura_m)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToEstatura_m, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isDecimalKey(this, event);", @id = "txtAdvanceToEstatura_m", @data_min = "txtAdvanceFromEstatura_m" })
                    @Html.ValidationMessageFor(m => m.ToEstatura_m)
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.Detalle_Horarios_ActividadResources.Circunferencia_de_cintura_cm</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromCircunferencia_de_cintura_cm, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromCircunferencia_de_cintura_cm" })
                    @Html.ValidationMessageFor(m => m.FromCircunferencia_de_cintura_cm)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToCircunferencia_de_cintura_cm, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToCircunferencia_de_cintura_cm", @data_min = "txtAdvanceFromCircunferencia_de_cintura_cm" })
                    @Html.ValidationMessageFor(m => m.ToCircunferencia_de_cintura_cm)
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.Detalle_Horarios_ActividadResources.Circunferencia_de_cadera_cm</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromCircunferencia_de_cadera_cm, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromCircunferencia_de_cadera_cm" })
                    @Html.ValidationMessageFor(m => m.FromCircunferencia_de_cadera_cm)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToCircunferencia_de_cadera_cm, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToCircunferencia_de_cadera_cm", @data_min = "txtAdvanceFromCircunferencia_de_cadera_cm" })
                    @Html.ValidationMessageFor(m => m.ToCircunferencia_de_cadera_cm)
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Horarios_ActividadResources.Diagnostico</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.DiagnosticoFilter, filters, new { @class = "form-control", @id = "ddlDiagnosticoFilter" })
                    @Html.TextBoxFor(m => m.Diagnostico, new { @class = "form-control", @type = "text", @id = "txtDiagnostico" })
                </div>

                <div class="MarginBottom form-inline">
                    <input type="submit" class="btn btn-primary" value="@Resources.Resources.Search"><a class="btn btn-primary" href="@Url.Content("~/Frontal/Detalle_Horarios_Actividad/")" value=" ">@Resources.Resources.Cancelar</a>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function InitiateAdvanceSearch() {
        var advanceSearch = {}, hasParameter = false;
        if ($("#txtAdvanceFromFolio").val() != "" || $("#txtAdvanceToFolio").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadFolioFrom = $("#txtAdvanceFromFolio").val();
            advanceSearch.Detalle_Horarios_ActividadFolioTo = $("#txtAdvanceToFolio").val();
        }
        if ($("#ddlAdvanceReservada").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadReservada = $("#ddlAdvanceReservada").val();
        }
        if ($("#txtAdvanceFromNumero_de_Cita").val() != "" || $("#txtAdvanceToNumero_de_Cita").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadNumero_de_CitaFrom = $("#txtAdvanceFromNumero_de_Cita").val();
            advanceSearch.Detalle_Horarios_ActividadNumero_de_CitaTo = $("#txtAdvanceToNumero_de_Cita").val();
        }
        if ($("#txtAdvanceHora_inicio").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadHora_inicio = $("#txtAdvanceHora_inicio").val();
            advanceSearch.Detalle_Horarios_ActividadHora_inicioSearchType = $("#ddlAdvanceHora_inicioFilter").val();
        }
        if ($("#txtAdvanceHora_fin").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadHora_fin = $("#txtAdvanceHora_fin").val();
            advanceSearch.Detalle_Horarios_ActividadHora_finSearchType = $("#ddlAdvanceHora_finFilter").val();
        }
        if ($("#txtAdvanceHorario").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadHorario = $("#txtAdvanceHorario").val();
            advanceSearch.Detalle_Horarios_ActividadHorarioSearchType = $("#ddlAdvanceHorarioFilter").val();
        }
        advanceSearch.Codigo_de_ReservacionSearchType = 0;
        if ($('#ddlAdvanceCodigo_de_Reservacion').val().length > 0 || $("#txtAdvanceCodigo_de_Reservacion").val() == "") {


            if (isDetalle_Horarios_ActividadTextSearch) {
                advanceSearch.Codigo_de_ReservacionName = $("#txtAdvanceCodigo_de_Reservacion").val();
                advanceSearch.Codigo_de_ReservacionNameSearchType = $("#ddlAdvanceCodigo_de_Reservacion").val();
                advanceSearch.Codigo_de_ReservacionSearchType = 1;
            }
            else {

                advanceSearch.Codigo_de_ReservacionToSearch = $("#ddlAdvanceCodigo_de_Reservacion").val();
                advanceSearch.Codigo_de_ReservacionSearchType = 2;
            }
        }
        if ($("#txtAdvanceNumero_de_Empleado").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadNumero_de_Empleado = $("#txtAdvanceNumero_de_Empleado").val();
            advanceSearch.Detalle_Horarios_ActividadNumero_de_EmpleadoSearchType = $("#ddlAdvanceNumero_de_EmpleadoFilter").val();
        }
        if ($("#ddlAdvanceFamiliar_del_Empleado").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadFamiliar_del_Empleado = $("#ddlAdvanceFamiliar_del_Empleado").val();
        }
        if ($("#txtAdvanceNombre_Completo").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadNombre_Completo = $("#txtAdvanceNombre_Completo").val();
            advanceSearch.Detalle_Horarios_ActividadNombre_CompletoSearchType = $("#ddlAdvanceNombre_CompletoFilter").val();
        }
        advanceSearch.Parentesco_con_el_EmpleadoSearchType = 0;
        if ($('#ddlAdvanceParentesco_con_el_Empleado').val().length > 0 || $("#txtAdvanceParentesco_con_el_Empleado").val() == "") {


            if (isDetalle_Horarios_ActividadTextSearch) {
                advanceSearch.Parentesco_con_el_EmpleadoName = $("#txtAdvanceParentesco_con_el_Empleado").val();
                advanceSearch.Parentesco_con_el_EmpleadoNameSearchType = $("#ddlAdvanceParentesco_con_el_Empleado").val();
                advanceSearch.Parentesco_con_el_EmpleadoSearchType = 1;
            }
            else {

                advanceSearch.Parentesco_con_el_EmpleadoToSearch = $("#ddlAdvanceParentesco_con_el_Empleado").val();
                advanceSearch.Parentesco_con_el_EmpleadoSearchType = 2;
            }
        }
        advanceSearch.SexoSearchType = 0;
        if ($('#ddlAdvanceSexo').val().length > 0 || $("#txtAdvanceSexo").val() == "") {


            if (isDetalle_Horarios_ActividadTextSearch) {
                advanceSearch.SexoName = $("#txtAdvanceSexo").val();
                advanceSearch.SexoNameSearchType = $("#ddlAdvanceSexo").val();
                advanceSearch.SexoSearchType = 1;
            }
            else {

                advanceSearch.SexoToSearch = $("#ddlAdvanceSexo").val();
                advanceSearch.SexoSearchType = 2;
            }
        }
        if ($("#txtAdvanceFromEdad").val() != "" || $("#txtAdvanceToEdad").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadEdadFrom = $("#txtAdvanceFromEdad").val();
            advanceSearch.Detalle_Horarios_ActividadEdadTo = $("#txtAdvanceToEdad").val();
        }
        advanceSearch.Estatus_de_la_ReservacionSearchType = 0;
        if ($('#ddlAdvanceEstatus_de_la_Reservacion').val().length > 0 || $("#txtAdvanceEstatus_de_la_Reservacion").val() == "") {


            if (isDetalle_Horarios_ActividadTextSearch) {
                advanceSearch.Estatus_de_la_ReservacionName = $("#txtAdvanceEstatus_de_la_Reservacion").val();
                advanceSearch.Estatus_de_la_ReservacionNameSearchType = $("#ddlAdvanceEstatus_de_la_Reservacion").val();
                advanceSearch.Estatus_de_la_ReservacionSearchType = 1;
            }
            else {

                advanceSearch.Estatus_de_la_ReservacionToSearch = $("#ddlAdvanceEstatus_de_la_Reservacion").val();
                advanceSearch.Estatus_de_la_ReservacionSearchType = 2;
            }
        }
        if ($("#ddlAdvanceAsistio").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadAsistio = $("#ddlAdvanceAsistio").val();
        }
        if ($("#txtAdvanceFromFrecuencia_Cardiaca_ppm").val() != "" || $("#txtAdvanceToFrecuencia_Cardiaca_ppm").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadFrecuencia_Cardiaca_ppmFrom = $("#txtAdvanceFromFrecuencia_Cardiaca_ppm").val();
            advanceSearch.Detalle_Horarios_ActividadFrecuencia_Cardiaca_ppmTo = $("#txtAdvanceToFrecuencia_Cardiaca_ppm").val();
        }
        if ($("#txtAdvanceFromPresion_sistolica_mm_Hg").val() != "" || $("#txtAdvanceToPresion_sistolica_mm_Hg").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadPresion_sistolica_mm_HgFrom = $("#txtAdvanceFromPresion_sistolica_mm_Hg").val();
            advanceSearch.Detalle_Horarios_ActividadPresion_sistolica_mm_HgTo = $("#txtAdvanceToPresion_sistolica_mm_Hg").val();
        }
        if ($("#txtAdvanceFromPresion_diastolica_mm_Hg").val() != "" || $("#txtAdvanceToPresion_diastolica_mm_Hg").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadPresion_diastolica_mm_HgFrom = $("#txtAdvanceFromPresion_diastolica_mm_Hg").val();
            advanceSearch.Detalle_Horarios_ActividadPresion_diastolica_mm_HgTo = $("#txtAdvanceToPresion_diastolica_mm_Hg").val();
        }
        if ($("#txtAdvanceFromPeso_actual_kg").val() != "" || $("#txtAdvanceToPeso_actual_kg").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadPeso_actual_kgFrom = $("#txtAdvanceFromPeso_actual_kg").val();
            advanceSearch.Detalle_Horarios_ActividadPeso_actual_kgTo = $("#txtAdvanceToPeso_actual_kg").val();
        }
        if ($("#txtAdvanceFromEstatura_m").val() != "" || $("#txtAdvanceToEstatura_m").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadEstatura_mFrom = $("#txtAdvanceFromEstatura_m").val();
            advanceSearch.Detalle_Horarios_ActividadEstatura_mTo = $("#txtAdvanceToEstatura_m").val();
        }
        if ($("#txtAdvanceFromCircunferencia_de_cintura_cm").val() != "" || $("#txtAdvanceToCircunferencia_de_cintura_cm").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadCircunferencia_de_cintura_cmFrom = $("#txtAdvanceFromCircunferencia_de_cintura_cm").val();
            advanceSearch.Detalle_Horarios_ActividadCircunferencia_de_cintura_cmTo = $("#txtAdvanceToCircunferencia_de_cintura_cm").val();
        }
        if ($("#txtAdvanceFromCircunferencia_de_cadera_cm").val() != "" || $("#txtAdvanceToCircunferencia_de_cadera_cm").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadCircunferencia_de_cadera_cmFrom = $("#txtAdvanceFromCircunferencia_de_cadera_cm").val();
            advanceSearch.Detalle_Horarios_ActividadCircunferencia_de_cadera_cmTo = $("#txtAdvanceToCircunferencia_de_cadera_cm").val();
        }
        if ($("#txtAdvanceDiagnostico").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Horarios_ActividadDiagnostico = $("#txtAdvanceDiagnostico").val();
            advanceSearch.Detalle_Horarios_ActividadDiagnosticoSearchType = $("#ddlAdvanceDiagnosticoFilter").val();
        }

        advanceSearchQuery = hasParameter ? JSON.stringify(advanceSearch) : "";
        $('#tblDetalle_Horarios_Actividad').DataTable().draw();
        return false;
    }

    var advanceSearchQuery = "", isDetalle_Horarios_ActividadTextSearch = true;

    $(document).ready(function () {
        $('.clock').clockpicker();
		$('.date').datepicker({
			todayBtn: "linked",
			keyboardNavigation: false,
			forceParse: false,
			calendarWeeks: true,
			autoclose: true,
			format: "@ConfigurationProperty.DateFormatDatePicker"
		});
        $("#txtAdvanceCodigo_de_Reservacion").keypress(function () {
            isDetalle_Horarios_ActividadTextSearch = true;
            $("#ddlAdvanceCodigo_de_Reservacion").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceCodigo_de_Reservacion").change(function () {
            isDetalle_Horarios_ActividadTextSearch = false;
            $("#txtAdvanceCodigo_de_Reservacion").val('');
        });
        $("#txtAdvanceParentesco_con_el_Empleado").keypress(function () {
            isDetalle_Horarios_ActividadTextSearch = true;
            $("#ddlAdvanceParentesco_con_el_Empleado").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceParentesco_con_el_Empleado").change(function () {
            isDetalle_Horarios_ActividadTextSearch = false;
            $("#txtAdvanceParentesco_con_el_Empleado").val('');
        });
        $("#txtAdvanceSexo").keypress(function () {
            isDetalle_Horarios_ActividadTextSearch = true;
            $("#ddlAdvanceSexo").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceSexo").change(function () {
            isDetalle_Horarios_ActividadTextSearch = false;
            $("#txtAdvanceSexo").val('');
        });
        $("#txtAdvanceEstatus_de_la_Reservacion").keypress(function () {
            isDetalle_Horarios_ActividadTextSearch = true;
            $("#ddlAdvanceEstatus_de_la_Reservacion").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceEstatus_de_la_Reservacion").change(function () {
            isDetalle_Horarios_ActividadTextSearch = false;
            $("#txtAdvanceEstatus_de_la_Reservacion").val('');
        });

    });
</script>


@section Styles {
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/clockpickerStyles")

}

@section Scripts {
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/clockpicker")


    <script>
        //Adding Rules
        jQuery.validator.unobtrusive
      .adapters.addSingleVal("isnumberafter", "propertyname");
        jQuery.validator.unobtrusive
    .adapters.addSingleVal("isdateafter", "propertyname");

        //Number after method
        jQuery.validator.addMethod("isnumberafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {
                //if (Date.parse(val) <= Date.parse(otherVal)) {
                if (Number(val) < Number(otherVal)) {
                    return false;
                }
                        }
            return true;
        });

        //Date after after method
        jQuery.validator.addMethod("isdateafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {

                if (GetDateObject(val) < GetDateObject(otherVal)) {

                    return false;
                    }
                }
            return true;
            });


        function GetDateObject(value) {
            var delimiter = GetDelimiter(dateFormat);
            var dateCollection = value.split(delimiter);
            var formatCollection = dateFormat.split(delimiter);
            var dateModel = GetDateModel(dateCollection, formatCollection);
            return new Date(dateModel.Year, dateModel.Month - 1, dateModel.Day);
        }
        //Used to get the date model by parsing the date and the format
        function GetDateModel(dateCollection,formatCollection) {
            var day, month, year;
            for (var i = 0; i < formatCollection.length; i++) {
                switch (formatCollection[i][0].toUpperCase()) {
                
                    case "D":
                        day = dateCollection[i];
                        break;

                    case "Y":
                        year = dateCollection[i];
                        break;

                    case "M":
                        month = dateCollection[i];
                        break;
                }
            }

            return {
                Day:day,
                Month:month,
                Year:year
            };
        }

        function GetDelimiter(format) {

            for (var i = 0; i < format.length; i++) {
                if (/[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g.test(format[i])) {
                    return format[i];
                }
            }
            return null;
        }

        var dateFormat = "@ConfigurationProperty.DateFormatDatePicker";

        $(document).ready(function () {
            $('.input-daterange').datepicker({
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true,
                format: dateFormat,
                message: 'The date is not a valid'
            });

            $(".chosen-select").chosen({ width: "22%", no_results_text: "Oops, nothing found!" });
			if ($('#IsFilterModal').val() == 'true') {
                $('.ShowAdvanceFilter #right-sidebar').css('display', 'none');
                $('.ShowAdvanceFilter .navbar-default').css('display', 'none');
                $('.ShowAdvanceFilter .border-bottom').css('display', 'none');
                $('.ShowAdvanceFilter #page-wrapper').css('margin', '0 auto');
                $('.ShowAdvanceFilter .btn-save').val('@Resources.Resources.Filter');
                $('.ShowAdvanceFilter .btn-cancelar').attr('data-dismiss', 'modal');
                $('.ShowAdvanceFilter .btn-cancelar').removeAttr('href');
                $('#idFilter').val($('#IdReport').val());
            }
        });

    </script>
}


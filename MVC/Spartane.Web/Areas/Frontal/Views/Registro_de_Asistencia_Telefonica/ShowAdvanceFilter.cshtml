@using System.Collections.Generic
@using Spartane.Web.Areas.Frontal.Models
@using Spartane.Web.Helpers
@model Spartane.Web.Areas.Frontal.Models.Registro_de_Asistencia_TelefonicaAdvanceSearchModel
@{
    List<SelectListItem> varSpartan_User_Usuario_que_llama = null;
    if (ViewBag.Spartan_Users_Usuario_que_llama != null)
    { varSpartan_User_Usuario_que_llama = (List<SelectListItem>)ViewBag.Spartan_Users_Usuario_que_llama; }
    List<SelectListItem> varPacientes_Nombre_Paciente = null;
    if (ViewBag.Pacientess_Nombre_Paciente != null)
    { varPacientes_Nombre_Paciente = (List<SelectListItem>)ViewBag.Pacientess_Nombre_Paciente; }
 List<SelectListItem> varPlanes_de_Suscripcion_Suscripcion = null;
    if (ViewBag.Planes_de_Suscripcions_Suscripcion != null)
    { varPlanes_de_Suscripcion_Suscripcion = (List<SelectListItem>)ViewBag.Planes_de_Suscripcions_Suscripcion; }
    List<SelectListItem> varAsuntos_Asistencia_Telefonica_Asunto_de_la_Llamada = null;
    if (ViewBag.Asuntos_Asistencia_Telefonicas_Asunto_de_la_Llamada != null)
    { varAsuntos_Asistencia_Telefonica_Asunto_de_la_Llamada = (List<SelectListItem>)ViewBag.Asuntos_Asistencia_Telefonicas_Asunto_de_la_Llamada; }
    List<SelectListItem> varSpartan_User_Atendio = null;
    if (ViewBag.Spartan_Users_Atendio != null)
    { varSpartan_User_Atendio = (List<SelectListItem>)ViewBag.Spartan_Users_Atendio; }
    List<SelectListItem> varEstatus_Llamadas_Estatus = null;
    if (ViewBag.Estatus_Llamadass_Estatus != null)
    { varEstatus_Llamadas_Estatus = (List<SelectListItem>)ViewBag.Estatus_Llamadass_Estatus; }

    var filters = (List<SelectListItem>)ViewBag.Filter;
}
<style>
    .input-validation-error {
        background: rgb(251, 227, 228);
        border: 1px solid #fbc2c4;
        color: #8a1f11;
    }

    .MarginBottom {
        margin-bottom: 1%;
    }

    #divAdvanceSearch input {
        margin-right: 2%;
    }

    #divAdvanceSearch button {
        margin-right: 2%;
    }

    #divAdvanceSearch select {
        margin-right: 2%;
    }

    #divAdvanceSearch h3 {
        margin-top: 2%;
    }

</style>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox float-e-margins" id="divAdvanceSearch">
        <div class="ibox-content">
            @using (Html.BeginForm("ShowAdvanceFilter", "Registro_de_Asistencia_Telefonica", FormMethod.Post, new { @id = "frmAdvanceSearch", @role = "form" }))
            {
				<input type="hidden" value="-1" name="idFilter" id="idFilter" />
                <div class="MarginBottom ">
                    <h3>@Resources.Registro_de_Asistencia_TelefonicaResources.Folio</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromFolio, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromFolio" })
                    @Html.ValidationMessageFor(m => m.FromFolio)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToFolio, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToFolio", @data_min = "txtAdvanceFromFolio" })
                    @Html.ValidationMessageFor(m => m.ToFolio)
                </div>
        <div class="MarginBottom ">
            <h3>@Resources.Registro_de_Asistencia_TelefonicaResources.Fecha_de_llamada</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceFromFecha_de_llamada" name="FromFecha_de_llamada" type="text" value="@Model.FromFecha_de_llamada" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceToFecha_de_llamada" name="ToFecha_de_llamada" type="text" value="@Model.ToFecha_de_llamada" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
        <div class="MarginBottom ">
            <h3>@Resources.Registro_de_Asistencia_TelefonicaResources.Hora_de_llamada</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceFromHora_de_llamada" name="FromHora_de_llamada" type="text" value="@Model.FromHora_de_llamada" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceToHora_de_llamada" name="ToHora_de_llamada" type="text" value="@Model.ToHora_de_llamada" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
        </div>
                <div class="MarginBottom">
                    <h3>@Resources.Registro_de_Asistencia_TelefonicaResources.Usuario_que_llama</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Usuario_que_llamaFilter, filters, new { @class = "form-control", @id = "ddlUsuario_que_llamaFilter" })
                    @Html.TextBoxFor(m => m.AdvanceUsuario_que_llama, new { @class = "form-control", @type = "text", @id = "txtAdvanceUsuario_que_llama" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varSpartan_User_Usuario_que_llama!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceUsuario_que_llamaMultiple, varSpartan_User_Usuario_que_llama,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceUsuario_que_llama"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Registro_de_Asistencia_TelefonicaResources.Dispositivo</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.DispositivoFilter, filters, new { @class = "form-control", @id = "ddlDispositivoFilter" })
                    @Html.TextBoxFor(m => m.Dispositivo, new { @class = "form-control", @type = "text", @id = "txtDispositivo" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Registro_de_Asistencia_TelefonicaResources.Nombre_Paciente</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Nombre_PacienteFilter, filters, new { @class = "form-control", @id = "ddlNombre_PacienteFilter" })
                    @Html.TextBoxFor(m => m.AdvanceNombre_Paciente, new { @class = "form-control", @type = "text", @id = "txtAdvanceNombre_Paciente" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varPacientes_Nombre_Paciente!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceNombre_PacienteMultiple, varPacientes_Nombre_Paciente,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceNombre_Paciente"
                        });
                    }
                </div>
 List<SelectListItem> varPlanes_de_Suscripcion_Suscripcion = null;
    if (ViewBag.Planes_de_Suscripcions_Suscripcion != null)
    { varPlanes_de_Suscripcion_Suscripcion = (List<SelectListItem>)ViewBag.Planes_de_Suscripcions_Suscripcion; }
                <div class="MarginBottom">
                    <h3>@Resources.Registro_de_Asistencia_TelefonicaResources.Numero_telefonico_del_Paciente</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Numero_telefonico_del_PacienteFilter, filters, new { @class = "form-control", @id = "ddlNumero_telefonico_del_PacienteFilter" })
                    @Html.TextBoxFor(m => m.Numero_telefonico_del_Paciente, new { @class = "form-control", @type = "text", @id = "txtNumero_telefonico_del_Paciente" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Registro_de_Asistencia_TelefonicaResources.Correo_del_Paciente</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Correo_del_PacienteFilter, filters, new { @class = "form-control", @id = "ddlCorreo_del_PacienteFilter" })
                    @Html.TextBoxFor(m => m.Correo_del_Paciente, new { @class = "form-control", @type = "text", @id = "txtCorreo_del_Paciente" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Registro_de_Asistencia_TelefonicaResources.Telefono_de_Asistencia_marcado</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Telefono_de_Asistencia_marcadoFilter, filters, new { @class = "form-control", @id = "ddlTelefono_de_Asistencia_marcadoFilter" })
                    @Html.TextBoxFor(m => m.Telefono_de_Asistencia_marcado, new { @class = "form-control", @type = "text", @id = "txtTelefono_de_Asistencia_marcado" })
                </div>
        <div class="MarginBottom ">
            <h3>@Resources.Registro_de_Asistencia_TelefonicaResources.Hora_inicio_de_la_Llamada</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceFromHora_inicio_de_la_Llamada" name="FromHora_inicio_de_la_Llamada" type="text" value="@Model.FromHora_inicio_de_la_Llamada" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceToHora_inicio_de_la_Llamada" name="ToHora_inicio_de_la_Llamada" type="text" value="@Model.ToHora_inicio_de_la_Llamada" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
        </div>
        <div class="MarginBottom ">
            <h3>@Resources.Registro_de_Asistencia_TelefonicaResources.Hora_fin_de_la_Llamada</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceFromHora_fin_de_la_Llamada" name="FromHora_fin_de_la_Llamada" type="text" value="@Model.FromHora_fin_de_la_Llamada" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceToHora_fin_de_la_Llamada" name="ToHora_fin_de_la_Llamada" type="text" value="@Model.ToHora_fin_de_la_Llamada" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
        </div>
                <div class="MarginBottom ">
                    <h3>@Resources.Registro_de_Asistencia_TelefonicaResources.Duracion_minutos</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromDuracion_minutos, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isDecimalKey(this, event);", @id = "txtAdvanceFromDuracion_minutos" })
                    @Html.ValidationMessageFor(m => m.FromDuracion_minutos)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToDuracion_minutos, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isDecimalKey(this, event);", @id = "txtAdvanceToDuracion_minutos", @data_min = "txtAdvanceFromDuracion_minutos" })
                    @Html.ValidationMessageFor(m => m.ToDuracion_minutos)
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Registro_de_Asistencia_TelefonicaResources.Asunto_de_la_Llamada</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Asunto_de_la_LlamadaFilter, filters, new { @class = "form-control", @id = "ddlAsunto_de_la_LlamadaFilter" })
                    @Html.TextBoxFor(m => m.AdvanceAsunto_de_la_Llamada, new { @class = "form-control", @type = "text", @id = "txtAdvanceAsunto_de_la_Llamada" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varAsuntos_Asistencia_Telefonica_Asunto_de_la_Llamada!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceAsunto_de_la_LlamadaMultiple, varAsuntos_Asistencia_Telefonica_Asunto_de_la_Llamada,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceAsunto_de_la_Llamada"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Registro_de_Asistencia_TelefonicaResources.Atendio</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.AtendioFilter, filters, new { @class = "form-control", @id = "ddlAtendioFilter" })
                    @Html.TextBoxFor(m => m.AdvanceAtendio, new { @class = "form-control", @type = "text", @id = "txtAdvanceAtendio" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varSpartan_User_Atendio!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceAtendioMultiple, varSpartan_User_Atendio,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceAtendio"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Registro_de_Asistencia_TelefonicaResources.Comentarios</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.ComentariosFilter, filters, new { @class = "form-control", @id = "ddlComentariosFilter" })
                    @Html.TextBoxFor(m => m.Comentarios, new { @class = "form-control", @type = "text", @id = "txtComentarios" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Registro_de_Asistencia_TelefonicaResources.Estatus</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.EstatusFilter, filters, new { @class = "form-control", @id = "ddlEstatusFilter" })
                    @Html.TextBoxFor(m => m.AdvanceEstatus, new { @class = "form-control", @type = "text", @id = "txtAdvanceEstatus" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varEstatus_Llamadas_Estatus!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceEstatusMultiple, varEstatus_Llamadas_Estatus,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceEstatus"
                        });
                    }
                </div>

                <div class="MarginBottom form-inline">
                    <input type="submit" class="btn btn-primary" value="@Resources.Resources.Search"><a class="btn btn-primary" href="@Url.Content("~/Frontal/Registro_de_Asistencia_Telefonica/")" value=" ">@Resources.Resources.Cancelar</a>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function InitiateAdvanceSearch() {
        var advanceSearch = {}, hasParameter = false;
        if ($("#txtAdvanceFromFolio").val() != "" || $("#txtAdvanceToFolio").val() != "") {
            hasParameter = true;
            advanceSearch.Registro_de_Asistencia_TelefonicaFolioFrom = $("#txtAdvanceFromFolio").val();
            advanceSearch.Registro_de_Asistencia_TelefonicaFolioTo = $("#txtAdvanceToFolio").val();
        }
        if ($("#txtAdvanceFromFecha_de_llamada").val() != "" || $("#txtAdvanceToFecha_de_llamada").val() != "") {
            hasParameter = true;
            advanceSearch.Registro_de_Asistencia_TelefonicaFecha_de_llamadaFrom = $("#txtAdvanceFromFecha_de_llamada").val();
            advanceSearch.Registro_de_Asistencia_TelefonicaFecha_de_llamadaTo = $("#txtAdvanceToFecha_de_llamada").val();
        }
        if ($("#txtAdvanceHora_de_llamada").val() != "") {
            hasParameter = true;
            advanceSearch.Registro_de_Asistencia_TelefonicaHora_de_llamada = $("#txtAdvanceHora_de_llamada").val();
            advanceSearch.Registro_de_Asistencia_TelefonicaHora_de_llamadaSearchType = $("#ddlAdvanceHora_de_llamadaFilter").val();
        }
        advanceSearch.Usuario_que_llamaSearchType = 0;
        if ($('#ddlAdvanceUsuario_que_llama').val().length > 0 || $("#txtAdvanceUsuario_que_llama").val() == "") {


            if (isRegistro_de_Asistencia_TelefonicaTextSearch) {
                advanceSearch.Usuario_que_llamaName = $("#txtAdvanceUsuario_que_llama").val();
                advanceSearch.Usuario_que_llamaNameSearchType = $("#ddlAdvanceUsuario_que_llama").val();
                advanceSearch.Usuario_que_llamaSearchType = 1;
            }
            else {

                advanceSearch.Usuario_que_llamaToSearch = $("#ddlAdvanceUsuario_que_llama").val();
                advanceSearch.Usuario_que_llamaSearchType = 2;
            }
        }
        if ($("#txtAdvanceDispositivo").val() != "") {
            hasParameter = true;
            advanceSearch.Registro_de_Asistencia_TelefonicaDispositivo = $("#txtAdvanceDispositivo").val();
            advanceSearch.Registro_de_Asistencia_TelefonicaDispositivoSearchType = $("#ddlAdvanceDispositivoFilter").val();
        }
        advanceSearch.Nombre_PacienteSearchType = 0;
        if ($('#ddlAdvanceNombre_Paciente').val().length > 0 || $("#txtAdvanceNombre_Paciente").val() == "") {


            if (isRegistro_de_Asistencia_TelefonicaTextSearch) {
                advanceSearch.Nombre_PacienteName = $("#txtAdvanceNombre_Paciente").val();
                advanceSearch.Nombre_PacienteNameSearchType = $("#ddlAdvanceNombre_Paciente").val();
                advanceSearch.Nombre_PacienteSearchType = 1;
            }
            else {

                advanceSearch.Nombre_PacienteToSearch = $("#ddlAdvanceNombre_Paciente").val();
                advanceSearch.Nombre_PacienteSearchType = 2;
            }
        }
        advanceSearch.SuscripcionSearchType = 0;
        if ($('#ddlAdvanceSuscripcion').val().length > 0 || $("#txtAdvanceSuscripcion").val() == "") {


            if (isRegistro_de_Asistencia_TelefonicaTextSearch) {
                advanceSearch.SuscripcionName = $("#txtAdvanceSuscripcion").val();
                advanceSearch.SuscripcionNameSearchType = $("#ddlAdvanceSuscripcion").val();
                advanceSearch.SuscripcionSearchType = 1;
            }
            else {

                advanceSearch.SuscripcionToSearch = $("#ddlAdvanceSuscripcion").val();
                advanceSearch.SuscripcionSearchType = 2;
            }
        }
        if ($("#txtAdvanceNumero_telefonico_del_Paciente").val() != "") {
            hasParameter = true;
            advanceSearch.Registro_de_Asistencia_TelefonicaNumero_telefonico_del_Paciente = $("#txtAdvanceNumero_telefonico_del_Paciente").val();
            advanceSearch.Registro_de_Asistencia_TelefonicaNumero_telefonico_del_PacienteSearchType = $("#ddlAdvanceNumero_telefonico_del_PacienteFilter").val();
        }
        if ($("#txtAdvanceCorreo_del_Paciente").val() != "") {
            hasParameter = true;
            advanceSearch.Registro_de_Asistencia_TelefonicaCorreo_del_Paciente = $("#txtAdvanceCorreo_del_Paciente").val();
            advanceSearch.Registro_de_Asistencia_TelefonicaCorreo_del_PacienteSearchType = $("#ddlAdvanceCorreo_del_PacienteFilter").val();
        }
        if ($("#txtAdvanceTelefono_de_Asistencia_marcado").val() != "") {
            hasParameter = true;
            advanceSearch.Registro_de_Asistencia_TelefonicaTelefono_de_Asistencia_marcado = $("#txtAdvanceTelefono_de_Asistencia_marcado").val();
            advanceSearch.Registro_de_Asistencia_TelefonicaTelefono_de_Asistencia_marcadoSearchType = $("#ddlAdvanceTelefono_de_Asistencia_marcadoFilter").val();
        }
        if ($("#txtAdvanceHora_inicio_de_la_Llamada").val() != "") {
            hasParameter = true;
            advanceSearch.Registro_de_Asistencia_TelefonicaHora_inicio_de_la_Llamada = $("#txtAdvanceHora_inicio_de_la_Llamada").val();
            advanceSearch.Registro_de_Asistencia_TelefonicaHora_inicio_de_la_LlamadaSearchType = $("#ddlAdvanceHora_inicio_de_la_LlamadaFilter").val();
        }
        if ($("#txtAdvanceHora_fin_de_la_Llamada").val() != "") {
            hasParameter = true;
            advanceSearch.Registro_de_Asistencia_TelefonicaHora_fin_de_la_Llamada = $("#txtAdvanceHora_fin_de_la_Llamada").val();
            advanceSearch.Registro_de_Asistencia_TelefonicaHora_fin_de_la_LlamadaSearchType = $("#ddlAdvanceHora_fin_de_la_LlamadaFilter").val();
        }
        if ($("#txtAdvanceFromDuracion_minutos").val() != "" || $("#txtAdvanceToDuracion_minutos").val() != "") {
            hasParameter = true;
            advanceSearch.Registro_de_Asistencia_TelefonicaDuracion_minutosFrom = $("#txtAdvanceFromDuracion_minutos").val();
            advanceSearch.Registro_de_Asistencia_TelefonicaDuracion_minutosTo = $("#txtAdvanceToDuracion_minutos").val();
        }
        advanceSearch.Asunto_de_la_LlamadaSearchType = 0;
        if ($('#ddlAdvanceAsunto_de_la_Llamada').val().length > 0 || $("#txtAdvanceAsunto_de_la_Llamada").val() == "") {


            if (isRegistro_de_Asistencia_TelefonicaTextSearch) {
                advanceSearch.Asunto_de_la_LlamadaName = $("#txtAdvanceAsunto_de_la_Llamada").val();
                advanceSearch.Asunto_de_la_LlamadaNameSearchType = $("#ddlAdvanceAsunto_de_la_Llamada").val();
                advanceSearch.Asunto_de_la_LlamadaSearchType = 1;
            }
            else {

                advanceSearch.Asunto_de_la_LlamadaToSearch = $("#ddlAdvanceAsunto_de_la_Llamada").val();
                advanceSearch.Asunto_de_la_LlamadaSearchType = 2;
            }
        }
        advanceSearch.AtendioSearchType = 0;
        if ($('#ddlAdvanceAtendio').val().length > 0 || $("#txtAdvanceAtendio").val() == "") {


            if (isRegistro_de_Asistencia_TelefonicaTextSearch) {
                advanceSearch.AtendioName = $("#txtAdvanceAtendio").val();
                advanceSearch.AtendioNameSearchType = $("#ddlAdvanceAtendio").val();
                advanceSearch.AtendioSearchType = 1;
            }
            else {

                advanceSearch.AtendioToSearch = $("#ddlAdvanceAtendio").val();
                advanceSearch.AtendioSearchType = 2;
            }
        }
        if ($("#txtAdvanceComentarios").val() != "") {
            hasParameter = true;
            advanceSearch.Registro_de_Asistencia_TelefonicaComentarios = $("#txtAdvanceComentarios").val();
            advanceSearch.Registro_de_Asistencia_TelefonicaComentariosSearchType = $("#ddlAdvanceComentariosFilter").val();
        }
        advanceSearch.EstatusSearchType = 0;
        if ($('#ddlAdvanceEstatus').val().length > 0 || $("#txtAdvanceEstatus").val() == "") {


            if (isRegistro_de_Asistencia_TelefonicaTextSearch) {
                advanceSearch.EstatusName = $("#txtAdvanceEstatus").val();
                advanceSearch.EstatusNameSearchType = $("#ddlAdvanceEstatus").val();
                advanceSearch.EstatusSearchType = 1;
            }
            else {

                advanceSearch.EstatusToSearch = $("#ddlAdvanceEstatus").val();
                advanceSearch.EstatusSearchType = 2;
            }
        }

        advanceSearchQuery = hasParameter ? JSON.stringify(advanceSearch) : "";
        $('#tblRegistro_de_Asistencia_Telefonica').DataTable().draw();
        return false;
    }

    var advanceSearchQuery = "", isRegistro_de_Asistencia_TelefonicaTextSearch = true;

    $(document).ready(function () {
        $('.clock').clockpicker();
		$('.date').datepicker({
			todayBtn: "linked",
			keyboardNavigation: false,
			forceParse: false,
			calendarWeeks: true,
			autoclose: true,
			format: "@ConfigurationProperty.DateFormatDatePicker"
		});
        $("#txtAdvanceUsuario_que_llama").keypress(function () {
            isRegistro_de_Asistencia_TelefonicaTextSearch = true;
            $("#ddlAdvanceUsuario_que_llama").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceUsuario_que_llama").change(function () {
            isRegistro_de_Asistencia_TelefonicaTextSearch = false;
            $("#txtAdvanceUsuario_que_llama").val('');
        });
        $("#txtAdvanceNombre_Paciente").keypress(function () {
            isRegistro_de_Asistencia_TelefonicaTextSearch = true;
            $("#ddlAdvanceNombre_Paciente").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceNombre_Paciente").change(function () {
            isRegistro_de_Asistencia_TelefonicaTextSearch = false;
            $("#txtAdvanceNombre_Paciente").val('');
        });
        $("#txtAdvanceSuscripcion").keypress(function () {
            isRegistro_de_Asistencia_TelefonicaTextSearch = true;
            $("#ddlAdvanceSuscripcion").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceSuscripcion").change(function () {
            isRegistro_de_Asistencia_TelefonicaTextSearch = false;
            $("#txtAdvanceSuscripcion").val('');
        });
        $("#txtAdvanceAsunto_de_la_Llamada").keypress(function () {
            isRegistro_de_Asistencia_TelefonicaTextSearch = true;
            $("#ddlAdvanceAsunto_de_la_Llamada").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceAsunto_de_la_Llamada").change(function () {
            isRegistro_de_Asistencia_TelefonicaTextSearch = false;
            $("#txtAdvanceAsunto_de_la_Llamada").val('');
        });
        $("#txtAdvanceAtendio").keypress(function () {
            isRegistro_de_Asistencia_TelefonicaTextSearch = true;
            $("#ddlAdvanceAtendio").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceAtendio").change(function () {
            isRegistro_de_Asistencia_TelefonicaTextSearch = false;
            $("#txtAdvanceAtendio").val('');
        });
        $("#txtAdvanceEstatus").keypress(function () {
            isRegistro_de_Asistencia_TelefonicaTextSearch = true;
            $("#ddlAdvanceEstatus").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceEstatus").change(function () {
            isRegistro_de_Asistencia_TelefonicaTextSearch = false;
            $("#txtAdvanceEstatus").val('');
        });

    });
</script>


@section Styles {
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/clockpickerStyles")

}

@section Scripts {
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/clockpicker")


    <script>
        //Adding Rules
        jQuery.validator.unobtrusive
      .adapters.addSingleVal("isnumberafter", "propertyname");
        jQuery.validator.unobtrusive
    .adapters.addSingleVal("isdateafter", "propertyname");

        //Number after method
        jQuery.validator.addMethod("isnumberafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {
                //if (Date.parse(val) <= Date.parse(otherVal)) {
                if (Number(val) < Number(otherVal)) {
                    return false;
                }
                        }
            return true;
        });

        //Date after after method
        jQuery.validator.addMethod("isdateafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {

                if (GetDateObject(val) < GetDateObject(otherVal)) {

                    return false;
                    }
                }
            return true;
            });


        function GetDateObject(value) {
            var delimiter = GetDelimiter(dateFormat);
            var dateCollection = value.split(delimiter);
            var formatCollection = dateFormat.split(delimiter);
            var dateModel = GetDateModel(dateCollection, formatCollection);
            return new Date(dateModel.Year, dateModel.Month - 1, dateModel.Day);
        }
        //Used to get the date model by parsing the date and the format
        function GetDateModel(dateCollection,formatCollection) {
            var day, month, year;
            for (var i = 0; i < formatCollection.length; i++) {
                switch (formatCollection[i][0].toUpperCase()) {
                
                    case "D":
                        day = dateCollection[i];
                        break;

                    case "Y":
                        year = dateCollection[i];
                        break;

                    case "M":
                        month = dateCollection[i];
                        break;
                }
            }

            return {
                Day:day,
                Month:month,
                Year:year
            };
        }

        function GetDelimiter(format) {

            for (var i = 0; i < format.length; i++) {
                if (/[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g.test(format[i])) {
                    return format[i];
                }
            }
            return null;
        }

        var dateFormat = "@ConfigurationProperty.DateFormatDatePicker";

        $(document).ready(function () {
            $('.input-daterange').datepicker({
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true,
                format: dateFormat,
                message: 'The date is not a valid'
            });

            $(".chosen-select").chosen({ width: "22%", no_results_text: "Oops, nothing found!" });
			if ($('#IsFilterModal').val() == 'true') {
                $('.ShowAdvanceFilter #right-sidebar').css('display', 'none');
                $('.ShowAdvanceFilter .navbar-default').css('display', 'none');
                $('.ShowAdvanceFilter .border-bottom').css('display', 'none');
                $('.ShowAdvanceFilter #page-wrapper').css('margin', '0 auto');
                $('.ShowAdvanceFilter .btn-save').val('@Resources.Resources.Filter');
                $('.ShowAdvanceFilter .btn-cancelar').attr('data-dismiss', 'modal');
                $('.ShowAdvanceFilter .btn-cancelar').removeAttr('href');
                $('#idFilter').val($('#IdReport').val());
            }
        });

    </script>
}


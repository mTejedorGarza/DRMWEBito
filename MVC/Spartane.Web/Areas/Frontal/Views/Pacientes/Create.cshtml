@using System
@using System.Collections.Generic
@using System.Globalization
@using Spartane.Core.Domain.Permission
@using Spartane.Core.Domain.Spartane_File
@using Spartane.Web.Helpers
@model Spartane.Web.Areas.Frontal.Models.PacientesModel
@{

/*
    string Fecha_de_Registro = "";
    if (Model.Fecha_de_Registro == "")
    { Model.Fecha_de_Registro = DateTime.Now.ToString(ConfigurationProperty.DateFormat); }
    string Fecha_de_nacimiento = "";
    if (Model.Fecha_de_nacimiento == "")
    { Model.Fecha_de_nacimiento = DateTime.Now.ToString(ConfigurationProperty.DateFormat); }
    string Fecha_Climaterio = "";
    if (Model.Fecha_Climaterio == "")
    { Model.Fecha_Climaterio = DateTime.Now.ToString(ConfigurationProperty.DateFormat); }

*/
    List<SelectListItem> varSpartan_User_Usuario_que_Registra = null;
    if (ViewBag.Spartan_Users_Usuario_que_Registra != null)
    { varSpartan_User_Usuario_que_Registra = (List<SelectListItem>)ViewBag.Spartan_Users_Usuario_que_Registra; }
    List<SelectListItem> varTipo_de_Registro_Tipo_de_Registro = null;
    if (ViewBag.Tipo_de_Registros_Tipo_de_Registro != null)
    { varTipo_de_Registro_Tipo_de_Registro = (List<SelectListItem>)ViewBag.Tipo_de_Registros_Tipo_de_Registro; }
    List<SelectListItem> varTipo_Paciente_Tipo_de_Paciente = null;
    if (ViewBag.Tipo_Pacientes_Tipo_de_Paciente != null)
    { varTipo_Paciente_Tipo_de_Paciente = (List<SelectListItem>)ViewBag.Tipo_Pacientes_Tipo_de_Paciente; }
    List<SelectListItem> varSpartan_User_Usuario_Registrado = null;
    if (ViewBag.Spartan_Users_Usuario_Registrado != null)
    { varSpartan_User_Usuario_Registrado = (List<SelectListItem>)ViewBag.Spartan_Users_Usuario_Registrado; }
    List<SelectListItem> varEmpresas_Empresa = null;
    if (ViewBag.Empresass_Empresa != null)
    { varEmpresas_Empresa = (List<SelectListItem>)ViewBag.Empresass_Empresa; }
    List<SelectListItem> varPais_Pais_de_nacimiento = null;
    if (ViewBag.Paiss_Pais_de_nacimiento != null)
    { varPais_Pais_de_nacimiento = (List<SelectListItem>)ViewBag.Paiss_Pais_de_nacimiento; }
    List<SelectListItem> varEstado_Lugar_de_nacimiento = null;
    if (ViewBag.Estados_Lugar_de_nacimiento != null)
    { varEstado_Lugar_de_nacimiento = (List<SelectListItem>)ViewBag.Estados_Lugar_de_nacimiento; }
    List<SelectListItem> varSexo_Sexo = null;
    if (ViewBag.Sexos_Sexo != null)
    { varSexo_Sexo = (List<SelectListItem>)ViewBag.Sexos_Sexo; }
    List<SelectListItem> varEstado_Civil_Estado_Civil = null;
    if (ViewBag.Estado_Civils_Estado_Civil != null)
    { varEstado_Civil_Estado_Civil = (List<SelectListItem>)ViewBag.Estado_Civils_Estado_Civil; }
    List<SelectListItem> varPais_Pais = null;
    if (ViewBag.Paiss_Pais != null)
    { varPais_Pais = (List<SelectListItem>)ViewBag.Paiss_Pais; }
    List<SelectListItem> varEstado_Estado = null;
    if (ViewBag.Estados_Estado != null)
    { varEstado_Estado = (List<SelectListItem>)ViewBag.Estados_Estado; }
    List<SelectListItem> varObjetivos_Objetivo = null;
    if (ViewBag.Objetivoss_Objetivo != null)
    { varObjetivos_Objetivo = (List<SelectListItem>)ViewBag.Objetivoss_Objetivo; }
    List<SelectListItem> varEstatus_por_Suscripcion_Estatus_Paciente = null;
    if (ViewBag.Estatus_por_Suscripcions_Estatus_Paciente != null)
    { varEstatus_por_Suscripcion_Estatus_Paciente = (List<SelectListItem>)ViewBag.Estatus_por_Suscripcions_Estatus_Paciente; }
    List<SelectListItem> varRespuesta_Logica_Cuenta_con_padecimientos = null;
    if (ViewBag.Respuesta_Logicas_Cuenta_con_padecimientos != null)
    { varRespuesta_Logica_Cuenta_con_padecimientos = (List<SelectListItem>)ViewBag.Respuesta_Logicas_Cuenta_con_padecimientos; }
    List<SelectListItem> varRespuesta_Logica_Esta_embarazada = null;
    if (ViewBag.Respuesta_Logicas_Esta_embarazada != null)
    { varRespuesta_Logica_Esta_embarazada = (List<SelectListItem>)ViewBag.Respuesta_Logicas_Esta_embarazada; }
    List<SelectListItem> varRespuesta_Logica_Tu_embarazo_es_multiple = null;
    if (ViewBag.Respuesta_Logicas_Tu_embarazo_es_multiple != null)
    { varRespuesta_Logica_Tu_embarazo_es_multiple = (List<SelectListItem>)ViewBag.Respuesta_Logicas_Tu_embarazo_es_multiple; }
    List<SelectListItem> varRespuesta_Logica_Toma_anticonceptivos = null;
    if (ViewBag.Respuesta_Logicas_Toma_anticonceptivos != null)
    { varRespuesta_Logica_Toma_anticonceptivos = (List<SelectListItem>)ViewBag.Respuesta_Logicas_Toma_anticonceptivos; }
    List<SelectListItem> varRespuesta_Logica_Climaterio = null;
    if (ViewBag.Respuesta_Logicas_Climaterio != null)
    { varRespuesta_Logica_Climaterio = (List<SelectListItem>)ViewBag.Respuesta_Logicas_Climaterio; }
    List<SelectListItem> varRespuesta_Logica_Terapia_reemplazo_hormonal = null;
    if (ViewBag.Respuesta_Logicas_Terapia_reemplazo_hormonal != null)
    { varRespuesta_Logica_Terapia_reemplazo_hormonal = (List<SelectListItem>)ViewBag.Respuesta_Logicas_Terapia_reemplazo_hormonal; }
    List<SelectListItem> varTipo_de_Dieta_Tipo_Dieta = null;
    if (ViewBag.Tipo_de_Dietas_Tipo_Dieta != null)
    { varTipo_de_Dieta_Tipo_Dieta = (List<SelectListItem>)ViewBag.Tipo_de_Dietas_Tipo_Dieta; }
    List<SelectListItem> varSuplementos_Suplementos = null;
    if (ViewBag.Suplementoss_Suplementos != null)
    { varSuplementos_Suplementos = (List<SelectListItem>)ViewBag.Suplementoss_Suplementos; }
    List<SelectListItem> varPreferencias_Sal_Consumo_de_sal = null;
    if (ViewBag.Preferencias_Sals_Consumo_de_sal != null)
    { varPreferencias_Sal_Consumo_de_sal = (List<SelectListItem>)ViewBag.Preferencias_Sals_Consumo_de_sal; }
    List<SelectListItem> varPreferencias_Grasas_Grasas_Preferencias = null;
    if (ViewBag.Preferencias_Grasass_Grasas_Preferencias != null)
    { varPreferencias_Grasas_Grasas_Preferencias = (List<SelectListItem>)ViewBag.Preferencias_Grasass_Grasas_Preferencias; }
    List<SelectListItem> varCantidad_Comidas_Comidas_cantidad = null;
    if (ViewBag.Cantidad_Comidass_Comidas_cantidad != null)
    { varCantidad_Comidas_Comidas_cantidad = (List<SelectListItem>)ViewBag.Cantidad_Comidass_Comidas_cantidad; }
    List<SelectListItem> varPreferencias_Preparacion_Preparacion_Preferencias = null;
    if (ViewBag.Preferencias_Preparacions_Preparacion_Preferencias != null)
    { varPreferencias_Preparacion_Preparacion_Preferencias = (List<SelectListItem>)ViewBag.Preferencias_Preparacions_Preparacion_Preferencias; }
    List<SelectListItem> varPreferencias_Entrecomidas_Entre_comidas = null;
    if (ViewBag.Preferencias_Entrecomidass_Entre_comidas != null)
    { varPreferencias_Entrecomidas_Entre_comidas = (List<SelectListItem>)ViewBag.Preferencias_Entrecomidass_Entre_comidas; }
    List<SelectListItem> varNivel_de_Satisfaccion_Apetito = null;
    if (ViewBag.Nivel_de_Satisfaccions_Apetito != null)
    { varNivel_de_Satisfaccion_Apetito = (List<SelectListItem>)ViewBag.Nivel_de_Satisfaccions_Apetito; }
    List<SelectListItem> varTipo_Modificacion_Alimentos_Habitos_Modificacion = null;
    if (ViewBag.Tipo_Modificacion_Alimentoss_Habitos_Modificacion != null)
    { varTipo_Modificacion_Alimentos_Habitos_Modificacion = (List<SelectListItem>)ViewBag.Tipo_Modificacion_Alimentoss_Habitos_Modificacion; }
    List<SelectListItem> varPeriodo_del_dia_Horario_hambre = null;
    if (ViewBag.Periodo_del_dias_Horario_hambre != null)
    { varPeriodo_del_dia_Horario_hambre = (List<SelectListItem>)ViewBag.Periodo_del_dias_Horario_hambre; }
    List<SelectListItem> varEstado_de_Animo_Cuando_cambia_mi_estado_de_animo = null;
    if (ViewBag.Estado_de_Animos_Cuando_cambia_mi_estado_de_animo != null)
    { varEstado_de_Animo_Cuando_cambia_mi_estado_de_animo = (List<SelectListItem>)ViewBag.Estado_de_Animos_Cuando_cambia_mi_estado_de_animo; }
    List<SelectListItem> varRespuesta_Logica_Medicamentos_bajar_peso = null;
    if (ViewBag.Respuesta_Logicas_Medicamentos_bajar_peso != null)
    { varRespuesta_Logica_Medicamentos_bajar_peso = (List<SelectListItem>)ViewBag.Respuesta_Logicas_Medicamentos_bajar_peso; }
    List<SelectListItem> varFrecuencia_Ejercicio_Frecuencia_Ejercicio = null;
    if (ViewBag.Frecuencia_Ejercicios_Frecuencia_Ejercicio != null)
    { varFrecuencia_Ejercicio_Frecuencia_Ejercicio = (List<SelectListItem>)ViewBag.Frecuencia_Ejercicios_Frecuencia_Ejercicio; }
    List<SelectListItem> varDuracion_Ejercicio_Duracion_Ejercicio = null;
    if (ViewBag.Duracion_Ejercicios_Duracion_Ejercicio != null)
    { varDuracion_Ejercicio_Duracion_Ejercicio = (List<SelectListItem>)ViewBag.Duracion_Ejercicios_Duracion_Ejercicio; }
    List<SelectListItem> varTipo_Ejercicio_Tipo_Ejercicio = null;
    if (ViewBag.Tipo_Ejercicios_Tipo_Ejercicio != null)
    { varTipo_Ejercicio_Tipo_Ejercicio = (List<SelectListItem>)ViewBag.Tipo_Ejercicios_Tipo_Ejercicio; }
    List<SelectListItem> varAntiguedad_Ejercicios_Antiguedad_Ejercicio = null;
    if (ViewBag.Antiguedad_Ejercicioss_Antiguedad_Ejercicio != null)
    { varAntiguedad_Ejercicios_Antiguedad_Ejercicio = (List<SelectListItem>)ViewBag.Antiguedad_Ejercicioss_Antiguedad_Ejercicio; }
    List<SelectListItem> varInterpretacion_IMC_Interpretacion_IMC = null;
    if (ViewBag.Interpretacion_IMCs_Interpretacion_IMC != null)
    { varInterpretacion_IMC_Interpretacion_IMC = (List<SelectListItem>)ViewBag.Interpretacion_IMCs_Interpretacion_IMC; }
    List<SelectListItem> varInterpretacion_IMC_IMC_Pediatria = null;
    if (ViewBag.Interpretacion_IMCs_IMC_Pediatria != null)
    { varInterpretacion_IMC_IMC_Pediatria = (List<SelectListItem>)ViewBag.Interpretacion_IMCs_IMC_Pediatria; }
    List<SelectListItem> varInterpretacion_corporal_Interpretacion_complexion_corporal = null;
    if (ViewBag.Interpretacion_corporals_Interpretacion_complexion_corporal != null)
    { varInterpretacion_corporal_Interpretacion_complexion_corporal = (List<SelectListItem>)ViewBag.Interpretacion_corporals_Interpretacion_complexion_corporal; }
    List<SelectListItem> varInterpretacion_distribucion_grasa_corporal_Interpretacion_grasa_corporal = null;
    if (ViewBag.Interpretacion_distribucion_grasa_corporals_Interpretacion_grasa_corporal != null)
    { varInterpretacion_distribucion_grasa_corporal_Interpretacion_grasa_corporal = (List<SelectListItem>)ViewBag.Interpretacion_distribucion_grasa_corporals_Interpretacion_grasa_corporal; }
    List<SelectListItem> varInterpretacion_indice_cintura__cadera_Interpretacion_indice = null;
    if (ViewBag.Interpretacion_indice_cintura__caderas_Interpretacion_indice != null)
    { varInterpretacion_indice_cintura__cadera_Interpretacion_indice = (List<SelectListItem>)ViewBag.Interpretacion_indice_cintura__caderas_Interpretacion_indice; }
    List<SelectListItem> varInterpretacion_consumo_de_agua_Interpretacion_agua = null;
    if (ViewBag.Interpretacion_consumo_de_aguas_Interpretacion_agua != null)
    { varInterpretacion_consumo_de_agua_Interpretacion_agua = (List<SelectListItem>)ViewBag.Interpretacion_consumo_de_aguas_Interpretacion_agua; }
    List<SelectListItem> varInterpretacion_Frecuencia_cardiaca_en_Esfuerzo_Interpretacion_frecuencia = null;
    if (ViewBag.Interpretacion_Frecuencia_cardiaca_en_Esfuerzos_Interpretacion_frecuencia != null)
    { varInterpretacion_Frecuencia_cardiaca_en_Esfuerzo_Interpretacion_frecuencia = (List<SelectListItem>)ViewBag.Interpretacion_Frecuencia_cardiaca_en_Esfuerzos_Interpretacion_frecuencia; }
    List<SelectListItem> varNivel_de_dificultad_Dificultad_de_Rutina_de_Ejercicios = null;
    if (ViewBag.Nivel_de_dificultads_Dificultad_de_Rutina_de_Ejercicios != null)
    { varNivel_de_dificultad_Dificultad_de_Rutina_de_Ejercicios = (List<SelectListItem>)ViewBag.Nivel_de_dificultads_Dificultad_de_Rutina_de_Ejercicios; }
    List<SelectListItem> varInterpretacion_Dificultad_de_Rutina_de_Ejercicios_Interpretacion_dificultad = null;
    if (ViewBag.Interpretacion_Dificultad_de_Rutina_de_Ejercicioss_Interpretacion_dificultad != null)
    { varInterpretacion_Dificultad_de_Rutina_de_Ejercicios_Interpretacion_dificultad = (List<SelectListItem>)ViewBag.Interpretacion_Dificultad_de_Rutina_de_Ejercicioss_Interpretacion_dificultad; }
    List<SelectListItem> varInterpretacion_Calorias_Interpretacion_calorias = null;
    if (ViewBag.Interpretacion_Caloriass_Interpretacion_calorias != null)
    { varInterpretacion_Calorias_Interpretacion_calorias = (List<SelectListItem>)ViewBag.Interpretacion_Caloriass_Interpretacion_calorias; }

    Permission permissionDetalle_de_Padecimientos = ViewBag.PermissionDetalle_de_Padecimientos;
    Permission permissionDetalle_Antecedentes_Familiares = ViewBag.PermissionDetalle_Antecedentes_Familiares;
    Permission permissionDetalle_Antecedentes_No_Patologicos = ViewBag.PermissionDetalle_Antecedentes_No_Patologicos;
    Permission permissionDetalle_Examenes_Laboratorio = ViewBag.PermissionDetalle_Examenes_Laboratorio;
    Permission permissionDetalle_Terapia_Hormonal = ViewBag.PermissionDetalle_Terapia_Hormonal;
    Permission permissionMS_Exclusion_Ingredientes_Paciente = ViewBag.PermissionMS_Exclusion_Ingredientes_Paciente;
    Permission permissionDetalle_Preferencia_Bebidas = ViewBag.PermissionDetalle_Preferencia_Bebidas;
    Permission permissionDetalle_Suscripciones_Paciente = ViewBag.PermissionDetalle_Suscripciones_Paciente;
    Permission permissionDetalle_Pagos_Paciente = ViewBag.PermissionDetalle_Pagos_Paciente;
    Permission permissionDetalle_Pagos_Pacientes_OpenPay = ViewBag.PermissionDetalle_Pagos_Pacientes_OpenPay;

    Permission permission = ViewBag.Permission;
	
	if (ViewBag.IsPartial)
   { 
       Layout = "~/Areas/Frontal/Views/Shared/_LayoutPopup.cshtml";
   }
}
<!-- CODMANINI-ADD -->
<style>
    body {
        float: left;
        margin: 0;
        padding: 0;
        width: 100%;
    }

    strong {
        font-weight: 700;
    }

    a {
        cursor: pointer;
        display: block;
        text-decoration: none;
    }

        a.button {
            border-radius: 5px 5px 5px 5px;
            -webkit-border-radius: 5px 5px 5px 5px;
            -moz-border-radius: 5px 5px 5px 5px;
            text-align: center;
            font-size: 21px;
            font-weight: 400;
            padding: 12px 0;
            width: 100%;
            display: table;
            background: #E51F04;
            background: -moz-linear-gradient(top, #E51F04 0%, #A60000 100%);
            background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#E51F04), color-stop(100%,#A60000));
            background: -webkit-linear-gradient(top, #E51F04 0%,#A60000 100%);
            background: -o-linear-gradient(top, #E51F04 0%,#A60000 100%);
            background: -ms-linear-gradient(top, #E51F04 0%,#A60000 100%);
            background: linear-gradient(top, #E51F04 0%,#A60000 100%);
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#E51F04', endColorstr='#A60000',GradientType=0 );
        }

            a.button i {
                margin-right: 10px;
            }

            a.button.disabled {
                background: none repeat scroll 0 0 #ccc;
                cursor: default;
            }

    .bkng-tb-cntnt {
        float: left;
        width: 800px;
    }

        .bkng-tb-cntnt a.button {
            color: #fff;
            float: right;
            font-size: 18px;
            padding: 5px 20px;
            width: auto;
        }

            .bkng-tb-cntnt a.button.o {
                background: none repeat scroll 0 0 rgba(0, 0, 0, 0);
                color: #e51f04;
                border: 1px solid #e51f04;
            }

            .bkng-tb-cntnt a.button i {
                color: #fff;
            }

            .bkng-tb-cntnt a.button.o i {
                color: #e51f04;
            }

            .bkng-tb-cntnt a.button.right i {
                float: right;
                margin: 2px 0 0 10px;
            }

            .bkng-tb-cntnt a.button.left {
                float: left;
            }

            .bkng-tb-cntnt a.button.disabled.o {
                border-color: #ccc;
                color: #ccc;
            }

                .bkng-tb-cntnt a.button.disabled.o i {
                    color: #ccc;
                }

    .pymnts {
        float: left;
        width: 800px;
    }

        .pymnts * {
            float: left;
        }

    .sctn-row {
        margin-bottom: 35px;
        width: 800px;
    }

    .sctn-col {
        width: 375px;
    }

        .sctn-col.l {
            width: 425px;
        }

        .sctn-col input {
            border: 1px solid #ccc;
            font-size: 18px;
            line-height: 24px;
            padding: 10px 12px;
            width: 333px;
        }

        .sctn-col label {
            font-size: 24px;
            line-height: 24px;
            margin-bottom: 10px;
            width: 100%;
        }

        .sctn-col.x3 {
            width: 300px;
        }

            .sctn-col.x3.last {
                width: 200px;
            }

            .sctn-col.x3 input {
                width: 210px;
            }

            .sctn-col.x3 a {
                float: right;
            }

    .pymnts-sctn {
        width: 800px;
    }

    .pymnt-itm {
        margin: 0 0 3px;
        width: 800px;
    }

        .pymnt-itm h2 {
            background-color: #e9e9e9;
            font-size: 24px;
            line-height: 24px;
            margin: 0;
            padding: 28px 0 28px 20px;
            width: 780px;
        }

        .pymnt-itm.active h2 {
            background-color: #e51f04;
            color: #fff;
            cursor: default;
        }

        .pymnt-itm div.pymnt-cntnt {
            display: none;
        }

        .pymnt-itm.active div.pymnt-cntnt {
            background-color: #f7f7f7;
            display: block;
            padding: 0 0 30px;
            width: 100%;
        }

    .pymnt-cntnt div.sctn-row {
        margin: 20px 30px 0;
        width: 740px;
    }

        .pymnt-cntnt div.sctn-row div.sctn-col {
            width: 345px;
        }

            .pymnt-cntnt div.sctn-row div.sctn-col.l {
                width: 395px;
            }

            .pymnt-cntnt div.sctn-row div.sctn-col input {
                width: 303px;
            }

            .pymnt-cntnt div.sctn-row div.sctn-col.half {
                width: 155px;
            }

                .pymnt-cntnt div.sctn-row div.sctn-col.half.l {
                    float: left;
                    width: 190px;
                }

                .pymnt-cntnt div.sctn-row div.sctn-col.half input {
                    width: 113px;
                }

            .pymnt-cntnt div.sctn-row div.sctn-col.cvv {
                background-image: url("../../Images/cvv.png");
                background-position: 156px center;
                background-repeat: no-repeat;
                padding-bottom: 30px;
            }

                .pymnt-cntnt div.sctn-row div.sctn-col.cvv div.sctn-col.half input {
                    width: 110px;
                }

    .openpay {
        float: right;
        height: 60px;
        margin: 10px 30px 0 0;
        width: 435px;
    }

        .openpay div.logo {
            background-image: url("../../Images/openpay.png");
            background-position: left bottom;
            background-repeat: no-repeat;
            border-right: 1px solid #ccc;
            font-size: 12px;
            font-weight: 400;
            height: 45px;
            padding: 15px 20px 0 0;
        }

        .openpay div.shield {
            background-image: url("../../Images/security.png");
            background-position: left bottom;
            background-repeat: no-repeat;
            font-size: 12px;
            font-weight: 400;
            margin-left: 20px;
            padding: 20px 0 0 40px;
            width: 200px;
        }

    .card-expl {
        float: left;
        height: 80px;
        margin: 20px 0;
        width: 800px;
    }

        .card-expl div {
            background-position: left 45px;
            background-repeat: no-repeat;
            height: 70px;
            padding-top: 10px;
        }

            .card-expl div.debit {
                background-image: url("../../Images/cards2.png");
                margin-left: 20px;
                width: 540px;
            }

            .card-expl div.credit {
                background-image: url("../../Images/cards1.png");
                border-right: 1px solid #ccc;
                margin-left: 30px;
                width: 209px;
            }

        .card-expl h4 {
            font-weight: 400;
            margin: 0;
        }
</style>
<div class="modal fade" id="idOpenPayForm" tabindex="-1" style="align-content: center;display: none; background-color: rgba(0, 0, 0, 0.7);">
    <div class="bkng-tb-cntnt">
        <div class="pymnts">
            <form action="#" method="POST" id="payment-form">
                <input type="hidden" name="token_id" id="token_id">
                <div class="pymnt-itm card active" style="position:relative;left:300px;top:50px;">
                    <h2 style="width:800px;">Tarjeta de crédito o débito</h2>
                    <div class="pymnt-cntnt">
                        <div class="card-expl">
                            <div class="credit"><h4>Tarjetas de crédito</h4></div>
                            <div class="debit"><h4>Tarjetas de débito</h4></div>
                        </div>
                        <div class="sctn-row">
                            <div class="sctn-col l">
                                <label>Nombre del titular</label><input id="NombreOP" type="text" placeholder="Como aparece en la tarjeta" autocomplete="off" data-openpay-card="holder_name">
                            </div>
                            <div class="sctn-col">
                                <label>Número de tarjeta</label><input type="text" autocomplete="off" data-openpay-card="card_number">
                            </div>
                        </div>
                        <div class="sctn-row">
                            <div class="sctn-col l">
                                <label>Fecha de expiración</label>
                                <div class="sctn-col half l"><input type="text" placeholder="Mes" data-openpay-card="expiration_month"></div>
                                <div class="sctn-col half l"><input type="text" placeholder="Año" data-openpay-card="expiration_year"></div>
                            </div>
                            <div class="sctn-col cvv">
                                <label>Código de seguridad</label>
                                <div class="sctn-col half l"><input type="text" placeholder="3 dígitos" autocomplete="off" data-openpay-card="cvv2"></div>
                            </div>
                        </div>
                        <div class="openpay">
                            <div class="logo">Transacciones realizadas vía:</div>
                            <div class="shield">Tus pagos se realizan de forma segura con encriptación de 256 bits</div>
                        </div>
                        <div class="sctn-row">
                            <a class="button rght" id="pay-button">Pagar</a>
                            <a class="button rght" id="btnCancelar" onclick="CancelarOpenPay();">Cancelar</a>
                        </div>
                        <div>
                            <input type="hidden" id="CasillaOP" />
                            <input type="hidden" id="DeviceOP" />
                            <input type="hidden" id="RowOP" />
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- CODMANFIN-ADD -->

<div class="loading style-2"><div class="loading-wheel"></div></div>
<div class="modal fade in" id="dvAttributeValue" style="background-color:rgba(0, 0, 0, 0.7);">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <div class="form-group">
                    <label class="col-sm-3 control-label" id="lblAttributeType">@Resources.Resources.Value</label>
                    <div class="col-sm-7">
                        <input type="text" title="Value" class="form-control" id="txtAttributeValue" />
                    </div>
                    <div class="col-sm-2">
                        <a class="btn btn-primary" onclick="SaveValue()">@Resources.Resources.Submit</a>
                    </div>
                    <input type="hidden" id="hdnAttributType" />
                    <input type="hidden" id="hdnAttributElement" />
                    <input type="hidden" id="hdnAttributNumber" />
                    <input type="hidden" id="hdnElementType" />
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row wrapper border-bottom white-bg page-heading">

    <div class="row">
        <div class="col-lg-10">
            <h2>
                @Resources.PacientesResources.Pacientes
                <button onclick="PacientesGetBusinessRule('', 'Al Abrir Pantalla', '0')" type="button" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton" data-toggle="modal" data-target="#PacientesBusinessRule-form">
                    <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleToBegin">
                        <i class="fa fa-cogs fa-spin"></i>
                    </a>
                </button>
            </h2>
            <ol class="breadcrumb">
                <li>
                    <a href="@Url.Action("Index", "Home")">@Resources.Resources.Home</a>
                </li>
                <li class="active">
                @if (Session["PhaseName"] != null)
                {
                    <strong>@Session["PhaseName"].ToString()</strong>
                }
                else
                {
                    <strong>@Resources.PacientesResources.Pacientes</strong>
                }
                
            </li>
                <li class="active">
                    <strong>@Resources.Resources.Create</strong>
                </li>
            </ol>
        </div>
        <div class="col-lg-2">

            @{
                if (Convert.ToInt32(Spartane.Web.SessionHelper.Role) == (int)Spartane.Core.Enums.SpartanRoleEnum.Admin)
                {
                    <h2>&nbsp;</h2>
                    <button onclick="PacientesDisplayBusinessRule()" type="button" class="btn btn-info btn-lg displayBusinessProperyButton">
                        <i class="fa fa-cogs fa-spin"></i>
                    </button>

                    <div aria-hidden="true" class="modal fade in PacientesPropertyBusinessModal" id="PacientesPropertyBusinessModal-form" style="display: none; background-color:rgba(0, 0, 0, 0.7);">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="modal-title">
                                          @Resources.Resources.titleBussinesRules
                                        <button data-dismiss="modal" class="close" type="button"><span aria-hidden="true">×</span><span class="sr-only">@Resources.Resources.Close</span></button>
                                    </h4>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <a class="btn btn-primary full-width" data-dismiss="modal" data-toggle="modal" data-target="#PropertyModal-form" onclick="GetPropertyBag()">@Resources.Resources.Property</a>
                                        </div>
                                        <div class="clearfix col-sm-12">&nbsp;</div>
                                        <div class="col-sm-12">
                                            <a class="btn btn-primary full-width" data-dismiss="modal" data-toggle="modal" data-target="#PacientesBusinessRule-form" onclick="PacientesGetBusinessRule()">Business Rule</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                     <div aria-hidden="true" data-backdrop="static" class="modal fade in PropertyModal" id="PropertyModal-form" style="display: none; background-color:rgba(0, 0, 0, 0.7);">
					</div>
					<div aria-hidden="true" data-backdrop="static" class="modal fade in PacientesBusinessRuleModal" id="PacientesBusinessRule-form" style="display: none; background-color:rgba(0, 0, 0, 0.7);">
					</div>


                }
            }
                    <div aria-hidden="true" class="modal fade in AddDetalle_de_PadecimientosModal" id="AddDetalle_de_Padecimientos-form" style="display: none; background-color:rgba(0, 0, 0, 0.7);">
                    </div>

                    <div aria-hidden="true" class="modal fade in AddDetalle_Antecedentes_FamiliaresModal" id="AddDetalle_Antecedentes_Familiares-form" style="display: none; background-color:rgba(0, 0, 0, 0.7);">
                    </div>

                    <div aria-hidden="true" class="modal fade in AddDetalle_Antecedentes_No_PatologicosModal" id="AddDetalle_Antecedentes_No_Patologicos-form" style="display: none; background-color:rgba(0, 0, 0, 0.7);">
                    </div>

                    <div aria-hidden="true" class="modal fade in AddDetalle_Examenes_LaboratorioModal" id="AddDetalle_Examenes_Laboratorio-form" style="display: none; background-color:rgba(0, 0, 0, 0.7);">
                    </div>

                    <div aria-hidden="true" class="modal fade in AddDetalle_Terapia_HormonalModal" id="AddDetalle_Terapia_Hormonal-form" style="display: none; background-color:rgba(0, 0, 0, 0.7);">
                    </div>

                    <div aria-hidden="true" class="modal fade in AddMS_Exclusion_Ingredientes_PacienteModal" id="AddMS_Exclusion_Ingredientes_Paciente-form" style="display: none; background-color:rgba(0, 0, 0, 0.7);">
                    </div>

                    <div aria-hidden="true" class="modal fade in AddDetalle_Preferencia_BebidasModal" id="AddDetalle_Preferencia_Bebidas-form" style="display: none; background-color:rgba(0, 0, 0, 0.7);">
                    </div>

                    <div aria-hidden="true" class="modal fade in AddDetalle_Suscripciones_PacienteModal" id="AddDetalle_Suscripciones_Paciente-form" style="display: none; background-color:rgba(0, 0, 0, 0.7);">
                    </div>

                    <div aria-hidden="true" class="modal fade in AddDetalle_Pagos_PacienteModal" id="AddDetalle_Pagos_Paciente-form" style="display: none; background-color:rgba(0, 0, 0, 0.7);">
                    </div>

                    <div aria-hidden="true" class="modal fade in AddDetalle_Pagos_Pacientes_OpenPayModal" id="AddDetalle_Pagos_Pacientes_OpenPay-form" style="display: none; background-color:rgba(0, 0, 0, 0.7);">
                    </div>


        </div>
    </div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox float-e-margins">
        <div class="ibox-content">
            @using (Html.BeginForm("Post", "Pacientes", FormMethod.Post, new { id = "CreatePacientes", @readonly = "true", @class = "form-horizontal", enctype = "multipart/form-data" }))
            {
                                <input type="hidden" id="hdnIsNew" name="hdnIsNew" value="@ViewBag.IsNew.ToString()" />
                <span id="popupNotification"></span>
                <div class="container-fluid PacientesCreateForm" id="viewmodeledit">
				 <div class="alert alert-warning" id="controlsRequerid" style="display:none">
                        <a href="#" class="close" onclick="$('#controlsRequerid').hide();">&times;</a>
                        <span id="textRequired"></span>
                 </div>
			<div class="tabs-container">
                        	<ul class="nav nav-tabs">
<li class="active"><a data-toggle="tab" href="#tabDatos_Generales"> @Resources.PacientesResources.TabDatos_Generales</a></li>
<li class=""><a data-toggle="tab" href="#tabPadecimientos"> @Resources.PacientesResources.TabPadecimientos</a></li>
<li class=""><a data-toggle="tab" href="#tabAntecedentes"> @Resources.PacientesResources.TabAntecedentes</a></li>
<li class=""><a data-toggle="tab" href="#tabMediciones_Iniciales"> @Resources.PacientesResources.TabMediciones_Iniciales</a></li>
<li class=""><a data-toggle="tab" href="#tabDatos_Ginecologicos"> @Resources.PacientesResources.TabDatos_Ginecologicos</a></li>
<li class=""><a data-toggle="tab" href="#tabHistoria_Nutricional"> @Resources.PacientesResources.TabHistoria_Nutricional</a></li>
<li class=""><a data-toggle="tab" href="#tabEstilo_de_Vida"> @Resources.PacientesResources.TabEstilo_de_Vida</a></li>
<li class=""><a data-toggle="tab" href="#tabResultados"> @Resources.PacientesResources.TabResultados</a></li>
<li class=""><a data-toggle="tab" href="#tabSuscripcion"> @Resources.PacientesResources.TabSuscripcion</a></li>

                        	</ul>
	                	<div class="tab-content">
                            <div id="tabDatos_Generales" class="tab-pane active">
                                <div class="panel-body">
                            <div class="form-group" id="divFolio">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Folio</label>
                                <div class="col-sm-8" data-field-id="Folio" data-attribute="257700" data-field-name="@Resources.PacientesResources.Folio">
                                    <label class="form-control" for="Folio" id="lblFolio">
                                    @if (Model.Folio== 0)
                                        {
                                            <text>@Resources.Resources.ClaveDefault</text>
                                        }
                                        else
                                        { 
                                            <text>@Model.Folio</text>
                                        }
                                    </label>
                                </div>
                            </div>
                            <div class="form-group" id="divFecha_de_Registro">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Fecha_de_Registro</label>
                                <div class="col-sm-8" data-field-id="Fecha_de_Registro" data-attribute="257701" data-field-name="@Resources.PacientesResources.Fecha_de_Registro">
                                    <div class='input-group date' id='datetimepicker1'>
                                        <input class="form-control col-md-12 Datos_Generales" id="Fecha_de_Registro"  name="Fecha_de_Registro" type="text" value="@Model.Fecha_de_Registro">
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="divHora_de_Registro">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Hora_de_Registro</label>
                                <div class="col-sm-8" data-field-id="Hora_de_Registro" data-attribute="257703" data-field-name="@Resources.PacientesResources.Hora_de_Registro">
                                    <div class='input-group date' id='timePicker'>
                                        <input class="form-control col-md-12 Datos_Generales" id="Hora_de_Registro"  name="Hora_de_Registro" type="text" data-autoclose="true" value="@Model.Hora_de_Registro">
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-time"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="divUsuario_que_Registra">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Usuario_que_Registra</label>
                                <div class="col-sm-8" data-field-id="Usuario_que_Registra" data-attribute="257704" data-field-name="@Resources.PacientesResources.Usuario_que_Registra">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field Usuario que Registra must be a number." data-val-required="The Usuario que Registra field is required." id="Usuario_que_Registra" name="Usuario_que_Registra">
                                        <option value=""></option>
                                        @if (varSpartan_User_Usuario_que_Registra != null){ 
                                            foreach (var itemUsuario_que_Registra in varSpartan_User_Usuario_que_Registra)
                                            {
                                                if (itemUsuario_que_Registra.Value == Convert.ToString(Model.Usuario_que_Registra))
                                                {
                                                    <option value="@itemUsuario_que_Registra.Value" selected>@itemUsuario_que_Registra.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemUsuario_que_Registra.Value">@itemUsuario_que_Registra.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Usuario_que_Registra" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257704).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Spartan_User', 'Usuario_que_Registra');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divEs_nuevo_registro">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Es_nuevo_registro</label>
                                <div class="col-sm-8" data-field-id="Es_nuevo_registro" data-attribute="260092" data-field-name="@Resources.PacientesResources.Es_nuevo_registro">
                                    @Html.CheckBoxFor(m => m.Es_nuevo_registro, new { @class = "i-checks Datos_Generales" })
                                </div>
                            </div>
                            <div class="form-group" id="divTipo_de_Registro">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Tipo_de_Registro</label>
                                <div class="col-sm-8" data-field-id="Tipo_de_Registro" data-attribute="257709" data-field-name="@Resources.PacientesResources.Tipo_de_Registro">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field Tipo de Registro must be a number." data-val-required="The Tipo de Registro field is required." id="Tipo_de_Registro" name="Tipo_de_Registro">
                                        <option value=""></option>
                                        @if (varTipo_de_Registro_Tipo_de_Registro != null){ 
                                            foreach (var itemTipo_de_Registro in varTipo_de_Registro_Tipo_de_Registro)
                                            {
                                                if (itemTipo_de_Registro.Value == Convert.ToString(Model.Tipo_de_Registro))
                                                {
                                                    <option value="@itemTipo_de_Registro.Value" selected>@itemTipo_de_Registro.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemTipo_de_Registro.Value">@itemTipo_de_Registro.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Tipo_de_Registro" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257709).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Tipo_de_Registro', 'Tipo_de_Registro');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divTipo_de_Paciente">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Tipo_de_Paciente</label>
                                <div class="col-sm-8" data-field-id="Tipo_de_Paciente" data-attribute="258975" data-field-name="@Resources.PacientesResources.Tipo_de_Paciente">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field Tipo de Paciente must be a number." data-val-required="The Tipo de Paciente field is required." id="Tipo_de_Paciente" name="Tipo_de_Paciente">
                                        <option value=""></option>
                                        @if (varTipo_Paciente_Tipo_de_Paciente != null){ 
                                            foreach (var itemTipo_de_Paciente in varTipo_Paciente_Tipo_de_Paciente)
                                            {
                                                if (itemTipo_de_Paciente.Value == Convert.ToString(Model.Tipo_de_Paciente))
                                                {
                                                    <option value="@itemTipo_de_Paciente.Value" selected>@itemTipo_de_Paciente.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemTipo_de_Paciente.Value">@itemTipo_de_Paciente.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Tipo_de_Paciente" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 258975).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Tipo_Paciente', 'Tipo_de_Paciente');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divUsuario_Registrado">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Usuario_Registrado</label>
                                <div class="col-sm-8" data-field-id="Usuario_Registrado" data-attribute="258976" data-field-name="@Resources.PacientesResources.Usuario_Registrado">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field Usuario Registrado must be a number." data-val-required="The Usuario Registrado field is required." id="Usuario_Registrado" name="Usuario_Registrado">
                                        <option value=""></option>
                                        @if (varSpartan_User_Usuario_Registrado != null){ 
                                            foreach (var itemUsuario_Registrado in varSpartan_User_Usuario_Registrado)
                                            {
                                                if (itemUsuario_Registrado.Value == Convert.ToString(Model.Usuario_Registrado))
                                                {
                                                    <option value="@itemUsuario_Registrado.Value" selected>@itemUsuario_Registrado.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemUsuario_Registrado.Value">@itemUsuario_Registrado.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Usuario_Registrado" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 258976).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Spartan_User', 'Usuario_Registrado');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divEmpresa">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Empresa</label>
                                <div class="col-sm-8" data-field-id="Empresa" data-attribute="257711" data-field-name="@Resources.PacientesResources.Empresa">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field Empresa must be a number." data-val-required="The Empresa field is required." id="Empresa" name="Empresa">
                                        <option value=""></option>
                                        @if (varEmpresas_Empresa != null){ 
                                            foreach (var itemEmpresa in varEmpresas_Empresa)
                                            {
                                                if (itemEmpresa.Value == Convert.ToString(Model.Empresa))
                                                {
                                                    <option value="@itemEmpresa.Value" selected>@itemEmpresa.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemEmpresa.Value">@itemEmpresa.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Empresa" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257711).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Empresas', 'Empresa');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divNumero_de_Empleado">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Numero_de_Empleado</label>
                                <div class="col-sm-8" data-field-id="Numero_de_Empleado" data-attribute="258678" data-field-name="@Resources.PacientesResources.Numero_de_Empleado">
                                    <input class="form-control Datos_Generales" id="Numero_de_Empleado" name="Numero_de_Empleado" type="text" value="@Model.Numero_de_Empleado">
                                    @*<span class="field-validation-valid" data-valmsg-for="Numero_de_Empleado" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divNombres">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Nombres</label>
                                <div class="col-sm-8" data-field-id="Nombres" data-attribute="257705" data-field-name="@Resources.PacientesResources.Nombres">
                                    <input class="form-control Datos_Generales" id="Nombres" name="Nombres" type="text" value="@Model.Nombres">
                                    @*<span class="field-validation-valid" data-valmsg-for="Nombres" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divApellido_Paterno">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Apellido_Paterno</label>
                                <div class="col-sm-8" data-field-id="Apellido_Paterno" data-attribute="257706" data-field-name="@Resources.PacientesResources.Apellido_Paterno">
                                    <input class="form-control Datos_Generales" id="Apellido_Paterno" name="Apellido_Paterno" type="text" value="@Model.Apellido_Paterno">
                                    @*<span class="field-validation-valid" data-valmsg-for="Apellido_Paterno" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divApellido_Materno">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Apellido_Materno</label>
                                <div class="col-sm-8" data-field-id="Apellido_Materno" data-attribute="257707" data-field-name="@Resources.PacientesResources.Apellido_Materno">
                                    <input class="form-control Datos_Generales" id="Apellido_Materno" name="Apellido_Materno" type="text" value="@Model.Apellido_Materno">
                                    @*<span class="field-validation-valid" data-valmsg-for="Apellido_Materno" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divNombre_Completo">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Nombre_Completo</label>
                                <div class="col-sm-8" data-field-id="Nombre_Completo" data-attribute="257708" data-field-name="@Resources.PacientesResources.Nombre_Completo">
                                    <textarea id="Nombre_Completo" name="Nombre_Completo" class="form-control Datos_Generales" rows="4" cols="50">@Model.Nombre_Completo</textarea>
                                    @*<span class="field-validation-valid" data-valmsg-for="Nombre_Completo" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divCelular">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Celular</label>
                                <div class="col-sm-8" data-field-id="Celular" data-attribute="257716" data-field-name="@Resources.PacientesResources.Celular">
                                    <input class="form-control Datos_Generales" id="Celular" name="Celular" type="text" value="@Model.Celular">
                                    @*<span class="field-validation-valid" data-valmsg-for="Celular" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divEmail">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Email</label>
                                <div class="col-sm-8" data-field-id="Email" data-attribute="257717" data-field-name="@Resources.PacientesResources.Email">
                                    <input class="form-control Datos_Generales" id="Email" name="Email" type="text" value="@Model.Email">
                                    @*<span class="field-validation-valid" data-valmsg-for="Email" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divFecha_de_nacimiento">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Fecha_de_nacimiento</label>
                                <div class="col-sm-8" data-field-id="Fecha_de_nacimiento" data-attribute="257713" data-field-name="@Resources.PacientesResources.Fecha_de_nacimiento">
                                    <div class='input-group date' id='datetimepicker1'>
                                        <input class="form-control col-md-12 Datos_Generales" id="Fecha_de_nacimiento"  name="Fecha_de_nacimiento" type="text" value="@Model.Fecha_de_nacimiento">
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="divNombre_del_Padre_o_Tutor">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Nombre_del_Padre_o_Tutor</label>
                                <div class="col-sm-8" data-field-id="Nombre_del_Padre_o_Tutor" data-attribute="257714" data-field-name="@Resources.PacientesResources.Nombre_del_Padre_o_Tutor">
                                    <input class="form-control Datos_Generales" id="Nombre_del_Padre_o_Tutor" name="Nombre_del_Padre_o_Tutor" type="text" value="@Model.Nombre_del_Padre_o_Tutor">
                                    @*<span class="field-validation-valid" data-valmsg-for="Nombre_del_Padre_o_Tutor" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divPais_de_nacimiento">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Pais_de_nacimiento</label>
                                <div class="col-sm-8" data-field-id="Pais_de_nacimiento" data-attribute="257740" data-field-name="@Resources.PacientesResources.Pais_de_nacimiento">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field País de nacimiento must be a number." data-val-required="The País de nacimiento field is required." id="Pais_de_nacimiento" name="Pais_de_nacimiento">
                                        <option value=""></option>
                                        @if (varPais_Pais_de_nacimiento != null){ 
                                            foreach (var itemPais_de_nacimiento in varPais_Pais_de_nacimiento)
                                            {
                                                if (itemPais_de_nacimiento.Value == Convert.ToString(Model.Pais_de_nacimiento))
                                                {
                                                    <option value="@itemPais_de_nacimiento.Value" selected>@itemPais_de_nacimiento.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemPais_de_nacimiento.Value">@itemPais_de_nacimiento.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Pais_de_nacimiento" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257740).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Pais', 'Pais_de_nacimiento');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divLugar_de_nacimiento">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Lugar_de_nacimiento</label>
                                <div class="col-sm-8" data-field-id="Lugar_de_nacimiento" data-attribute="257741" data-field-name="@Resources.PacientesResources.Lugar_de_nacimiento">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field Lugar de nacimiento must be a number." data-val-required="The Lugar de nacimiento field is required." id="Lugar_de_nacimiento" name="Lugar_de_nacimiento">
                                        <option value=""></option>
                                        @if (varEstado_Lugar_de_nacimiento != null){ 
                                            foreach (var itemLugar_de_nacimiento in varEstado_Lugar_de_nacimiento)
                                            {
                                                if (itemLugar_de_nacimiento.Value == Convert.ToString(Model.Lugar_de_nacimiento))
                                                {
                                                    <option value="@itemLugar_de_nacimiento.Value" selected>@itemLugar_de_nacimiento.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemLugar_de_nacimiento.Value">@itemLugar_de_nacimiento.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Lugar_de_nacimiento" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257741).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Estado', 'Lugar_de_nacimiento');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divSexo">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Sexo</label>
                                <div class="col-sm-8" data-field-id="Sexo" data-attribute="257715" data-field-name="@Resources.PacientesResources.Sexo">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field Sexo must be a number." data-val-required="The Sexo field is required." id="Sexo" name="Sexo">
                                        <option value=""></option>
                                        @if (varSexo_Sexo != null){ 
                                            foreach (var itemSexo in varSexo_Sexo)
                                            {
                                                if (itemSexo.Value == Convert.ToString(Model.Sexo))
                                                {
                                                    <option value="@itemSexo.Value" selected>@itemSexo.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemSexo.Value">@itemSexo.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Sexo" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257715).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Sexo', 'Sexo');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divEstado_Civil">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Estado_Civil</label>
                                <div class="col-sm-8" data-field-id="Estado_Civil" data-attribute="257742" data-field-name="@Resources.PacientesResources.Estado_Civil">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field Estado Civil must be a number." data-val-required="The Estado Civil field is required." id="Estado_Civil" name="Estado_Civil">
                                        <option value=""></option>
                                        @if (varEstado_Civil_Estado_Civil != null){ 
                                            foreach (var itemEstado_Civil in varEstado_Civil_Estado_Civil)
                                            {
                                                if (itemEstado_Civil.Value == Convert.ToString(Model.Estado_Civil))
                                                {
                                                    <option value="@itemEstado_Civil.Value" selected>@itemEstado_Civil.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemEstado_Civil.Value">@itemEstado_Civil.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Estado_Civil" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257742).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Estado_Civil', 'Estado_Civil');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divCalle">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Calle</label>
                                <div class="col-sm-8" data-field-id="Calle" data-attribute="257743" data-field-name="@Resources.PacientesResources.Calle">
                                    <input class="form-control Datos_Generales" id="Calle" name="Calle" type="text" value="@Model.Calle">
                                    @*<span class="field-validation-valid" data-valmsg-for="Calle" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divNumero_exterior">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Numero_exterior</label>
                                <div class="col-sm-8" data-field-id="Numero_exterior" data-attribute="257744" data-field-name="@Resources.PacientesResources.Numero_exterior">
                                    <input class="form-control Datos_Generales" id="Numero_exterior" name="Numero_exterior" type="text" value="@Model.Numero_exterior">
                                    @*<span class="field-validation-valid" data-valmsg-for="Numero_exterior" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divNumero_interior">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Numero_interior</label>
                                <div class="col-sm-8" data-field-id="Numero_interior" data-attribute="257745" data-field-name="@Resources.PacientesResources.Numero_interior">
                                    <input class="form-control Datos_Generales" id="Numero_interior" name="Numero_interior" type="text" value="@Model.Numero_interior">
                                    @*<span class="field-validation-valid" data-valmsg-for="Numero_interior" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divColonia">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Colonia</label>
                                <div class="col-sm-8" data-field-id="Colonia" data-attribute="257746" data-field-name="@Resources.PacientesResources.Colonia">
                                    <input class="form-control Datos_Generales" id="Colonia" name="Colonia" type="text" value="@Model.Colonia">
                                    @*<span class="field-validation-valid" data-valmsg-for="Colonia" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divCP">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.CP</label>
                                <div class="col-sm-8" data-field-id="CP" data-attribute="257747" data-field-name="@Resources.PacientesResources.CP">
                                    <input class="form-control inputNumber Datos_Generales" id="CP" name="CP" type="text" value="@Model.CP">
                                    @*<span class="field-validation-valid" data-valmsg-for="CP" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divCiudad">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Ciudad</label>
                                <div class="col-sm-8" data-field-id="Ciudad" data-attribute="257720" data-field-name="@Resources.PacientesResources.Ciudad">
                                    <input class="form-control Datos_Generales" id="Ciudad" name="Ciudad" type="text" value="@Model.Ciudad">
                                    @*<span class="field-validation-valid" data-valmsg-for="Ciudad" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divPais">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Pais</label>
                                <div class="col-sm-8" data-field-id="Pais" data-attribute="257718" data-field-name="@Resources.PacientesResources.Pais">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field País must be a number." data-val-required="The País field is required." id="Pais" name="Pais">
                                        <option value=""></option>
                                        @if (varPais_Pais != null){ 
                                            foreach (var itemPais in varPais_Pais)
                                            {
                                                if (itemPais.Value == Convert.ToString(Model.Pais))
                                                {
                                                    <option value="@itemPais.Value" selected>@itemPais.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemPais.Value">@itemPais.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Pais" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257718).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Pais', 'Pais');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divEstado">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Estado</label>
                                <div class="col-sm-8" data-field-id="Estado" data-attribute="257719" data-field-name="@Resources.PacientesResources.Estado">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field Estado must be a number." data-val-required="The Estado field is required." id="Estado" name="Estado">
                                        <option value=""></option>
                                        @if (varEstado_Estado != null){ 
                                            foreach (var itemEstado in varEstado_Estado)
                                            {
                                                if (itemEstado.Value == Convert.ToString(Model.Estado))
                                                {
                                                    <option value="@itemEstado.Value" selected>@itemEstado.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemEstado.Value">@itemEstado.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Estado" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257719).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Estado', 'Estado');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divOcupacion">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Ocupacion</label>
                                <div class="col-sm-8" data-field-id="Ocupacion" data-attribute="257748" data-field-name="@Resources.PacientesResources.Ocupacion">
                                    <input class="form-control Datos_Generales" id="Ocupacion" name="Ocupacion" type="text" value="@Model.Ocupacion">
                                    @*<span class="field-validation-valid" data-valmsg-for="Ocupacion" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divCantidad_hijos">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Cantidad_hijos</label>
                                <div class="col-sm-8" data-field-id="Cantidad_hijos" data-attribute="257749" data-field-name="@Resources.PacientesResources.Cantidad_hijos">
                                    <input class="form-control inputNumber Datos_Generales" id="Cantidad_hijos" name="Cantidad_hijos" type="text" value="@Model.Cantidad_hijos">
                                    @*<span class="field-validation-valid" data-valmsg-for="Cantidad_hijos" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divObjetivo">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Objetivo</label>
                                <div class="col-sm-8" data-field-id="Objetivo" data-attribute="257710" data-field-name="@Resources.PacientesResources.Objetivo">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field Objetivo must be a number." data-val-required="The Objetivo field is required." id="Objetivo" name="Objetivo">
                                        <option value=""></option>
                                        @if (varObjetivos_Objetivo != null){ 
                                            foreach (var itemObjetivo in varObjetivos_Objetivo)
                                            {
                                                if (itemObjetivo.Value == Convert.ToString(Model.Objetivo))
                                                {
                                                    <option value="@itemObjetivo.Value" selected>@itemObjetivo.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemObjetivo.Value">@itemObjetivo.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Objetivo" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257710).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Objetivos', 'Objetivo');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divEstatus_Paciente">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Estatus_Paciente</label>
                                <div class="col-sm-8" data-field-id="Estatus_Paciente" data-attribute="258442" data-field-name="@Resources.PacientesResources.Estatus_Paciente">
                                    <select class="form-control Datos_Generales" data-val="true" data-val-number="The field Estatus Paciente must be a number." data-val-required="The Estatus Paciente field is required." id="Estatus_Paciente" name="Estatus_Paciente">
                                        <option value=""></option>
                                        @if (varEstatus_por_Suscripcion_Estatus_Paciente != null){ 
                                            foreach (var itemEstatus_Paciente in varEstatus_por_Suscripcion_Estatus_Paciente)
                                            {
                                                if (itemEstatus_Paciente.Value == Convert.ToString(Model.Estatus_Paciente))
                                                {
                                                    <option value="@itemEstatus_Paciente.Value" selected>@itemEstatus_Paciente.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemEstatus_Paciente.Value">@itemEstatus_Paciente.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Estatus_Paciente" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 258442).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Estatus_por_Suscripcion', 'Estatus_Paciente');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divPlan_Alimenticio_Completo">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Plan_Alimenticio_Completo</label>
                                <div class="col-sm-8" data-field-id="Plan_Alimenticio_Completo" data-attribute="260365" data-field-name="@Resources.PacientesResources.Plan_Alimenticio_Completo">
                                    @Html.CheckBoxFor(m => m.Plan_Alimenticio_Completo, new { @class = "i-checks Datos_Generales" })
                                </div>
                            </div>
                            <div class="form-group" id="divPlan_Rutina_Completa">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Plan_Rutina_Completa</label>
                                <div class="col-sm-8" data-field-id="Plan_Rutina_Completa" data-attribute="260366" data-field-name="@Resources.PacientesResources.Plan_Rutina_Completa">
                                    @Html.CheckBoxFor(m => m.Plan_Rutina_Completa, new { @class = "i-checks Datos_Generales" })
                                </div>
                            </div>
                            </div>
                                </div>


                            <div id="tabPadecimientos" class="tab-pane">
                                <div class="panel-body">
                            <div class="form-group" id="divCuenta_con_padecimientos">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Cuenta_con_padecimientos</label>
                                <div class="col-sm-8" data-field-id="Cuenta_con_padecimientos" data-attribute="258855" data-field-name="@Resources.PacientesResources.Cuenta_con_padecimientos">
                                    <select class="form-control Padecimientos" data-val="true" data-val-number="The field ¿Cuenta con alguna enfermedad o padecimiento diagnosticado? must be a number." data-val-required="The ¿Cuenta con alguna enfermedad o padecimiento diagnosticado? field is required." id="Cuenta_con_padecimientos" name="Cuenta_con_padecimientos">
                                        <option value=""></option>
                                        @if (varRespuesta_Logica_Cuenta_con_padecimientos != null){ 
                                            foreach (var itemCuenta_con_padecimientos in varRespuesta_Logica_Cuenta_con_padecimientos)
                                            {
                                                if (itemCuenta_con_padecimientos.Value == Convert.ToString(Model.Cuenta_con_padecimientos))
                                                {
                                                    <option value="@itemCuenta_con_padecimientos.Value" selected>@itemCuenta_con_padecimientos.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemCuenta_con_padecimientos.Value">@itemCuenta_con_padecimientos.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Cuenta_con_padecimientos" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 258855).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Respuesta_Logica', 'Cuenta_con_padecimientos');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div id="divDetalle_del_padecimiento">
                            <div class="ibox-title">
                                <h5>@Resources.PacientesResources.Detalle_del_padecimiento</h5>
                                <div class="ibox-tools">
                                </div>
                            </div>
                            <div class="ibox-content">
                                <div class="">
									@if (permissionDetalle_de_Padecimientos.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_de_PadecimientosfnClickAddRow();" href="javascript:void(0);" title="@Resources.Resources.AddNewRow" class="Detalle_de_PadecimientosAddRow btn btn-primary">
                                            <i class="glyphicon glyphicon-plus"></i>
                                        </a>
                                    }
                                    <button onclick="PacientesGetBusinessRule('', 'Al Guardar o al Eliminar una Row', '257725')" type="button" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton" data-toggle="modal" data-target="#PacientesBusinessRule-form">
                                        <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleToCreateGrid">
                                            <i class="fa fa-cogs fa-spin"></i>
                                        </a>
                                    </button>
									@if (permissionDetalle_de_Padecimientos.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_de_PadecimientosfnOpenAddRowPopUp();" data-toggle="modal" title="@Resources.Resources.AddNewRow" data-target="#AddDetalle_de_Padecimientos-form" data-backdrop="static" data-keyboard="false" class="btn_mrpopup btn btn-primary">
                                            <i class="glyphicon glyphicon-new-window"></i>
                                        </a>
                                    }  
                                </div>

                                <br />

                                <div style='overflow-x: auto;'>
                                    <table class="table table-striped table-bordered table-hover childValidateTable" id="Detalle_de_PadecimientosGrid">
                                        <thead>
                                            <tr>
                                                <th class="ActionHeader"><span>@Resources.Resources.Actions</span></th>


                                                <th class="PadecimientoHeader"><span>
<button type="button" data-attribute="257617" data-field-id="Detalle_de_PadecimientosPadecimiento" data-field-name="@Resources.Detalle_de_PadecimientosResources.Padecimiento" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_de_PadecimientosResources.Padecimiento">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_de_PadecimientosResources.Padecimiento</span></th>
                                                <th class="Tiempo_con_el_diagnosticoHeader"><span>
<button type="button" data-attribute="257618" data-field-id="Detalle_de_PadecimientosTiempo_con_el_diagnostico" data-field-name="@Resources.Detalle_de_PadecimientosResources.Tiempo_con_el_diagnostico" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_de_PadecimientosResources.Tiempo_con_el_diagnostico">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_de_PadecimientosResources.Tiempo_con_el_diagnostico</span></th>
                                                <th class="Intervencion_quirurgicaHeader"><span>
<button type="button" data-attribute="259119" data-field-id="Detalle_de_PadecimientosIntervencion_quirurgica" data-field-name="@Resources.Detalle_de_PadecimientosResources.Intervencion_quirurgica" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_de_PadecimientosResources.Intervencion_quirurgica">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_de_PadecimientosResources.Intervencion_quirurgica</span></th>
                                                <th class="TratamientoHeader"><span>
<button type="button" data-attribute="257619" data-field-id="Detalle_de_PadecimientosTratamiento" data-field-name="@Resources.Detalle_de_PadecimientosResources.Tratamiento" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_de_PadecimientosResources.Tratamiento">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_de_PadecimientosResources.Tratamiento</span></th>
                                                <th class="Estado_actualHeader"><span>
<button type="button" data-attribute="257620" data-field-id="Detalle_de_PadecimientosEstado_actual" data-field-name="@Resources.Detalle_de_PadecimientosResources.Estado_actual" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_de_PadecimientosResources.Estado_actual">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_de_PadecimientosResources.Estado_actual</span></th>

                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                            </div>
                            </div>
                                </div>


                            <div id="tabAntecedentes" class="tab-pane">
                                <div class="panel-body">
                            <div id="divAntecedentes_Familiares">
                            <div class="ibox-title">
                                <h5>@Resources.PacientesResources.Antecedentes_Familiares</h5>
                                <div class="ibox-tools">
                                </div>
                            </div>
                            <div class="ibox-content">
                                <div class="">
									@if (permissionDetalle_Antecedentes_Familiares.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_Antecedentes_FamiliaresfnClickAddRow();" href="javascript:void(0);" title="@Resources.Resources.AddNewRow" class="Detalle_Antecedentes_FamiliaresAddRow btn btn-primary">
                                            <i class="glyphicon glyphicon-plus"></i>
                                        </a>
                                    }
                                    <button onclick="PacientesGetBusinessRule('', 'Al Guardar o al Eliminar una Row', '257788')" type="button" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton" data-toggle="modal" data-target="#PacientesBusinessRule-form">
                                        <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleToCreateGrid">
                                            <i class="fa fa-cogs fa-spin"></i>
                                        </a>
                                    </button>
									@if (permissionDetalle_Antecedentes_Familiares.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_Antecedentes_FamiliaresfnOpenAddRowPopUp();" data-toggle="modal" title="@Resources.Resources.AddNewRow" data-target="#AddDetalle_Antecedentes_Familiares-form" data-backdrop="static" data-keyboard="false" class="btn_mrpopup btn btn-primary">
                                            <i class="glyphicon glyphicon-new-window"></i>
                                        </a>
                                    }  
                                </div>

                                <br />

                                <div style='overflow-x: auto;'>
                                    <table class="table table-striped table-bordered table-hover childValidateTable" id="Detalle_Antecedentes_FamiliaresGrid">
                                        <thead>
                                            <tr>
                                                <th class="ActionHeader"><span>@Resources.Resources.Actions</span></th>


                                                <th class="EnfermedadHeader"><span>
<button type="button" data-attribute="257759" data-field-id="Detalle_Antecedentes_FamiliaresEnfermedad" data-field-name="@Resources.Detalle_Antecedentes_FamiliaresResources.Enfermedad" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Antecedentes_FamiliaresResources.Enfermedad">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Antecedentes_FamiliaresResources.Enfermedad</span></th>
                                                <th class="ParentescoHeader"><span>
<button type="button" data-attribute="257760" data-field-id="Detalle_Antecedentes_FamiliaresParentesco" data-field-name="@Resources.Detalle_Antecedentes_FamiliaresResources.Parentesco" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Antecedentes_FamiliaresResources.Parentesco">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Antecedentes_FamiliaresResources.Parentesco</span></th>

                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                            </div>
                            <div id="divAntecedentes_personales_no_patologicos">
                            <div class="ibox-title">
                                <h5>@Resources.PacientesResources.Antecedentes_personales_no_patologicos</h5>
                                <div class="ibox-tools">
                                </div>
                            </div>
                            <div class="ibox-content">
                                <div class="">
									@if (permissionDetalle_Antecedentes_No_Patologicos.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_Antecedentes_No_PatologicosfnClickAddRow();" href="javascript:void(0);" title="@Resources.Resources.AddNewRow" class="Detalle_Antecedentes_No_PatologicosAddRow btn btn-primary">
                                            <i class="glyphicon glyphicon-plus"></i>
                                        </a>
                                    }
                                    <button onclick="PacientesGetBusinessRule('', 'Al Guardar o al Eliminar una Row', '257789')" type="button" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton" data-toggle="modal" data-target="#PacientesBusinessRule-form">
                                        <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleToCreateGrid">
                                            <i class="fa fa-cogs fa-spin"></i>
                                        </a>
                                    </button>
									@if (permissionDetalle_Antecedentes_No_Patologicos.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_Antecedentes_No_PatologicosfnOpenAddRowPopUp();" data-toggle="modal" title="@Resources.Resources.AddNewRow" data-target="#AddDetalle_Antecedentes_No_Patologicos-form" data-backdrop="static" data-keyboard="false" class="btn_mrpopup btn btn-primary">
                                            <i class="glyphicon glyphicon-new-window"></i>
                                        </a>
                                    }  
                                </div>

                                <br />

                                <div style='overflow-x: auto;'>
                                    <table class="table table-striped table-bordered table-hover childValidateTable" id="Detalle_Antecedentes_No_PatologicosGrid">
                                        <thead>
                                            <tr>
                                                <th class="ActionHeader"><span>@Resources.Resources.Actions</span></th>


                                                <th class="SustanciaHeader"><span>
<button type="button" data-attribute="257763" data-field-id="Detalle_Antecedentes_No_PatologicosSustancia" data-field-name="@Resources.Detalle_Antecedentes_No_PatologicosResources.Sustancia" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Antecedentes_No_PatologicosResources.Sustancia">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Antecedentes_No_PatologicosResources.Sustancia</span></th>
                                                <th class="FrecuenciaHeader"><span>
<button type="button" data-attribute="257764" data-field-id="Detalle_Antecedentes_No_PatologicosFrecuencia" data-field-name="@Resources.Detalle_Antecedentes_No_PatologicosResources.Frecuencia" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Antecedentes_No_PatologicosResources.Frecuencia">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Antecedentes_No_PatologicosResources.Frecuencia</span></th>
                                                <th class="CantidadHeader"><span>
<button type="button" data-attribute="257765" data-field-id="Detalle_Antecedentes_No_PatologicosCantidad" data-field-name="@Resources.Detalle_Antecedentes_No_PatologicosResources.Cantidad" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Antecedentes_No_PatologicosResources.Cantidad">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>
@Resources.Detalle_Antecedentes_No_PatologicosResources.Cantidad</span></th>

                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                            </div>
                            </div>
                                </div>


                            <div id="tabMediciones_Iniciales" class="tab-pane">
                                <div class="panel-body">
                            <div class="form-group" id="divFrecuencia_Cardiaca">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Frecuencia_Cardiaca</label>
                                <div class="col-sm-8" data-field-id="Frecuencia_Cardiaca" data-attribute="257791" data-field-name="@Resources.PacientesResources.Frecuencia_Cardiaca">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Frecuencia_Cardiaca" name="Frecuencia_Cardiaca" type="text" value="@Model.Frecuencia_Cardiaca">
                                    @*<span class="field-validation-valid" data-valmsg-for="Frecuencia_Cardiaca" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divFrecuencia_Respiratoria">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Frecuencia_Respiratoria</label>
                                <div class="col-sm-8" data-field-id="Frecuencia_Respiratoria" data-attribute="257792" data-field-name="@Resources.PacientesResources.Frecuencia_Respiratoria">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Frecuencia_Respiratoria" name="Frecuencia_Respiratoria" type="text" value="@Model.Frecuencia_Respiratoria">
                                    @*<span class="field-validation-valid" data-valmsg-for="Frecuencia_Respiratoria" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divPresion_sistolica">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Presion_sistolica</label>
                                <div class="col-sm-8" data-field-id="Presion_sistolica" data-attribute="257793" data-field-name="@Resources.PacientesResources.Presion_sistolica">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Presion_sistolica" name="Presion_sistolica" type="text" value="@Model.Presion_sistolica">
                                    @*<span class="field-validation-valid" data-valmsg-for="Presion_sistolica" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divPresion_diastolica">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Presion_diastolica</label>
                                <div class="col-sm-8" data-field-id="Presion_diastolica" data-attribute="257794" data-field-name="@Resources.PacientesResources.Presion_diastolica">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Presion_diastolica" name="Presion_diastolica" type="text" value="@Model.Presion_diastolica">
                                    @*<span class="field-validation-valid" data-valmsg-for="Presion_diastolica" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divPeso_actual">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Peso_actual</label>
                                <div class="col-sm-8" data-field-id="Peso_actual" data-attribute="257795" data-field-name="@Resources.PacientesResources.Peso_actual">
									@if(Model.Peso_actual.HasValue)
									{
										<input class="form-control col-md-12 inputNumber Mediciones_Iniciales" id="Peso_actual" name="Peso_actual" type="text" min="0.00" max="999999.99" value="@Model.Peso_actual.Value.ToString(new CultureInfo("en-US"))">
									}
									else
									{
										<input class="form-control col-md-12 inputNumber Mediciones_Iniciales" id="Peso_actual" name="Peso_actual" type="text" min="0.00" max="999999.99" value="">
									}                                    
                                </div>
                            </div>
                            <div class="form-group" id="divEstatura">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Estatura</label>
                                <div class="col-sm-8" data-field-id="Estatura" data-attribute="257796" data-field-name="@Resources.PacientesResources.Estatura">
									@if(Model.Estatura.HasValue)
									{
										<input class="form-control col-md-12 inputNumber Mediciones_Iniciales" id="Estatura" name="Estatura" type="text" min="0.00" max="999999.99" value="@Model.Estatura.Value.ToString(new CultureInfo("en-US"))">
									}
									else
									{
										<input class="form-control col-md-12 inputNumber Mediciones_Iniciales" id="Estatura" name="Estatura" type="text" min="0.00" max="999999.99" value="">
									}                                    
                                </div>
                            </div>
                            <div class="form-group" id="divPeso_habitual">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Peso_habitual</label>
                                <div class="col-sm-8" data-field-id="Peso_habitual" data-attribute="257797" data-field-name="@Resources.PacientesResources.Peso_habitual">
									@if(Model.Peso_habitual.HasValue)
									{
										<input class="form-control col-md-12 inputNumber Mediciones_Iniciales" id="Peso_habitual" name="Peso_habitual" type="text" min="0.00" max="999999.99" value="@Model.Peso_habitual.Value.ToString(new CultureInfo("en-US"))">
									}
									else
									{
										<input class="form-control col-md-12 inputNumber Mediciones_Iniciales" id="Peso_habitual" name="Peso_habitual" type="text" min="0.00" max="999999.99" value="">
									}                                    
                                </div>
                            </div>
                            <div class="form-group" id="divCircunferencia_de_cintura_cm">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Circunferencia_de_cintura_cm</label>
                                <div class="col-sm-8" data-field-id="Circunferencia_de_cintura_cm" data-attribute="257798" data-field-name="@Resources.PacientesResources.Circunferencia_de_cintura_cm">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Circunferencia_de_cintura_cm" name="Circunferencia_de_cintura_cm" type="text" value="@Model.Circunferencia_de_cintura_cm">
                                    @*<span class="field-validation-valid" data-valmsg-for="Circunferencia_de_cintura_cm" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divCircunferencia_de_cadera_cm">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Circunferencia_de_cadera_cm</label>
                                <div class="col-sm-8" data-field-id="Circunferencia_de_cadera_cm" data-attribute="257800" data-field-name="@Resources.PacientesResources.Circunferencia_de_cadera_cm">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Circunferencia_de_cadera_cm" name="Circunferencia_de_cadera_cm" type="text" value="@Model.Circunferencia_de_cadera_cm">
                                    @*<span class="field-validation-valid" data-valmsg-for="Circunferencia_de_cadera_cm" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divAnchura_de_muneca_mm">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Anchura_de_muneca_mm</label>
                                <div class="col-sm-8" data-field-id="Anchura_de_muneca_mm" data-attribute="257801" data-field-name="@Resources.PacientesResources.Anchura_de_muneca_mm">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Anchura_de_muneca_mm" name="Anchura_de_muneca_mm" type="text" value="@Model.Anchura_de_muneca_mm">
                                    @*<span class="field-validation-valid" data-valmsg-for="Anchura_de_muneca_mm" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divCircunferencia_de_brazo_cm">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Circunferencia_de_brazo_cm</label>
                                <div class="col-sm-8" data-field-id="Circunferencia_de_brazo_cm" data-attribute="257802" data-field-name="@Resources.PacientesResources.Circunferencia_de_brazo_cm">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Circunferencia_de_brazo_cm" name="Circunferencia_de_brazo_cm" type="text" value="@Model.Circunferencia_de_brazo_cm">
                                    @*<span class="field-validation-valid" data-valmsg-for="Circunferencia_de_brazo_cm" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divPliegue_cutaneo_tricipital_mm">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Pliegue_cutaneo_tricipital_mm</label>
                                <div class="col-sm-8" data-field-id="Pliegue_cutaneo_tricipital_mm" data-attribute="257803" data-field-name="@Resources.PacientesResources.Pliegue_cutaneo_tricipital_mm">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Pliegue_cutaneo_tricipital_mm" name="Pliegue_cutaneo_tricipital_mm" type="text" value="@Model.Pliegue_cutaneo_tricipital_mm">
                                    @*<span class="field-validation-valid" data-valmsg-for="Pliegue_cutaneo_tricipital_mm" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divPliegue_cutaneo_bicipital_mm">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Pliegue_cutaneo_bicipital_mm</label>
                                <div class="col-sm-8" data-field-id="Pliegue_cutaneo_bicipital_mm" data-attribute="257804" data-field-name="@Resources.PacientesResources.Pliegue_cutaneo_bicipital_mm">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Pliegue_cutaneo_bicipital_mm" name="Pliegue_cutaneo_bicipital_mm" type="text" value="@Model.Pliegue_cutaneo_bicipital_mm">
                                    @*<span class="field-validation-valid" data-valmsg-for="Pliegue_cutaneo_bicipital_mm" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divPliegue_cutaneo_subescapular_mm">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Pliegue_cutaneo_subescapular_mm</label>
                                <div class="col-sm-8" data-field-id="Pliegue_cutaneo_subescapular_mm" data-attribute="257805" data-field-name="@Resources.PacientesResources.Pliegue_cutaneo_subescapular_mm">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Pliegue_cutaneo_subescapular_mm" name="Pliegue_cutaneo_subescapular_mm" type="text" value="@Model.Pliegue_cutaneo_subescapular_mm">
                                    @*<span class="field-validation-valid" data-valmsg-for="Pliegue_cutaneo_subescapular_mm" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divPliegue_cutaneo_supraespinal_mm">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Pliegue_cutaneo_supraespinal_mm</label>
                                <div class="col-sm-8" data-field-id="Pliegue_cutaneo_supraespinal_mm" data-attribute="257806" data-field-name="@Resources.PacientesResources.Pliegue_cutaneo_supraespinal_mm">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Pliegue_cutaneo_supraespinal_mm" name="Pliegue_cutaneo_supraespinal_mm" type="text" value="@Model.Pliegue_cutaneo_supraespinal_mm">
                                    @*<span class="field-validation-valid" data-valmsg-for="Pliegue_cutaneo_supraespinal_mm" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divEdad_Metabolica">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Edad_Metabolica</label>
                                <div class="col-sm-8" data-field-id="Edad_Metabolica" data-attribute="257808" data-field-name="@Resources.PacientesResources.Edad_Metabolica">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Edad_Metabolica" name="Edad_Metabolica" type="text" value="@Model.Edad_Metabolica">
                                    @*<span class="field-validation-valid" data-valmsg-for="Edad_Metabolica" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divAgua_corporal">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Agua_corporal</label>
                                <div class="col-sm-8" data-field-id="Agua_corporal" data-attribute="257809" data-field-name="@Resources.PacientesResources.Agua_corporal">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Agua_corporal" name="Agua_corporal" type="text" value="@Model.Agua_corporal">
                                    @*<span class="field-validation-valid" data-valmsg-for="Agua_corporal" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divGrasa_Visceral">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Grasa_Visceral</label>
                                <div class="col-sm-8" data-field-id="Grasa_Visceral" data-attribute="257810" data-field-name="@Resources.PacientesResources.Grasa_Visceral">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Grasa_Visceral" name="Grasa_Visceral" type="text" value="@Model.Grasa_Visceral">
                                    @*<span class="field-validation-valid" data-valmsg-for="Grasa_Visceral" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divGrasa_Corporal">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Grasa_Corporal</label>
                                <div class="col-sm-8" data-field-id="Grasa_Corporal" data-attribute="257811" data-field-name="@Resources.PacientesResources.Grasa_Corporal">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Grasa_Corporal" name="Grasa_Corporal" type="text" value="@Model.Grasa_Corporal">
                                    @*<span class="field-validation-valid" data-valmsg-for="Grasa_Corporal" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divGrasa_Corporal_kg">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Grasa_Corporal_kg</label>
                                <div class="col-sm-8" data-field-id="Grasa_Corporal_kg" data-attribute="257812" data-field-name="@Resources.PacientesResources.Grasa_Corporal_kg">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Grasa_Corporal_kg" name="Grasa_Corporal_kg" type="text" value="@Model.Grasa_Corporal_kg">
                                    @*<span class="field-validation-valid" data-valmsg-for="Grasa_Corporal_kg" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divMasa_Muscular_kg">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Masa_Muscular_kg</label>
                                <div class="col-sm-8" data-field-id="Masa_Muscular_kg" data-attribute="257813" data-field-name="@Resources.PacientesResources.Masa_Muscular_kg">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Masa_Muscular_kg" name="Masa_Muscular_kg" type="text" value="@Model.Masa_Muscular_kg">
                                    @*<span class="field-validation-valid" data-valmsg-for="Masa_Muscular_kg" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divMasa_Muscular_">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Masa_Muscular_</label>
                                <div class="col-sm-8" data-field-id="Masa_Muscular_" data-attribute="257814" data-field-name="@Resources.PacientesResources.Masa_Muscular_">
                                    <input class="form-control inputNumber Mediciones_Iniciales" id="Masa_Muscular_" name="Masa_Muscular_" type="text" value="@Model.Masa_Muscular_">
                                    @*<span class="field-validation-valid" data-valmsg-for="Masa_Muscular_" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div id="divExamenes_de_Laboratorio">
                            <div class="ibox-title">
                                <h5>@Resources.PacientesResources.Examenes_de_Laboratorio</h5>
                                <div class="ibox-tools">
                                </div>
                            </div>
                            <div class="ibox-content">
                                <div class="">
									@if (permissionDetalle_Examenes_Laboratorio.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_Examenes_LaboratoriofnClickAddRow();" href="javascript:void(0);" title="@Resources.Resources.AddNewRow" class="Detalle_Examenes_LaboratorioAddRow btn btn-primary">
                                            <i class="glyphicon glyphicon-plus"></i>
                                        </a>
                                    }
                                    <button onclick="PacientesGetBusinessRule('', 'Al Guardar o al Eliminar una Row', '257815')" type="button" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton" data-toggle="modal" data-target="#PacientesBusinessRule-form">
                                        <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleToCreateGrid">
                                            <i class="fa fa-cogs fa-spin"></i>
                                        </a>
                                    </button>
									@if (permissionDetalle_Examenes_Laboratorio.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_Examenes_LaboratoriofnOpenAddRowPopUp();" data-toggle="modal" title="@Resources.Resources.AddNewRow" data-target="#AddDetalle_Examenes_Laboratorio-form" data-backdrop="static" data-keyboard="false" class="btn_mrpopup btn btn-primary">
                                            <i class="glyphicon glyphicon-new-window"></i>
                                        </a>
                                    }  
                                </div>

                                <br />

                                <div style='overflow-x: auto;'>
                                    <table class="table table-striped table-bordered table-hover childValidateTable" id="Detalle_Examenes_LaboratorioGrid">
                                        <thead>
                                            <tr>
                                                <th class="ActionHeader"><span>@Resources.Resources.Actions</span></th>


                                                <th class="IndicadorHeader"><span>
<button type="button" data-attribute="257773" data-field-id="Detalle_Examenes_LaboratorioIndicador" data-field-name="@Resources.Detalle_Examenes_LaboratorioResources.Indicador" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Examenes_LaboratorioResources.Indicador">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Examenes_LaboratorioResources.Indicador</span></th>
                                                <th class="ResultadoHeader"><span>
<button type="button" data-attribute="257774" data-field-id="Detalle_Examenes_LaboratorioResultado" data-field-name="@Resources.Detalle_Examenes_LaboratorioResources.Resultado" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Examenes_LaboratorioResources.Resultado">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>
@Resources.Detalle_Examenes_LaboratorioResources.Resultado</span></th>
                                                <th class="UnidadHeader"><span>
<button type="button" data-attribute="257775" data-field-id="Detalle_Examenes_LaboratorioUnidad" data-field-name="@Resources.Detalle_Examenes_LaboratorioResources.Unidad" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Examenes_LaboratorioResources.Unidad">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Examenes_LaboratorioResources.Unidad</span></th>
                                                <th class="Intervalo_de_ReferenciaHeader"><span>
<button type="button" data-attribute="257776" data-field-id="Detalle_Examenes_LaboratorioIntervalo_de_Referencia" data-field-name="@Resources.Detalle_Examenes_LaboratorioResources.Intervalo_de_Referencia" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Examenes_LaboratorioResources.Intervalo_de_Referencia">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Examenes_LaboratorioResources.Intervalo_de_Referencia</span></th>
                                                <th class="Fecha_de_ResultadoHeader"><span>
<button type="button" data-attribute="257777" data-field-id="Detalle_Examenes_LaboratorioFecha_de_Resultado" data-field-name="@Resources.Detalle_Examenes_LaboratorioResources.Fecha_de_Resultado" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Examenes_LaboratorioResources.Fecha_de_Resultado">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Examenes_LaboratorioResources.Fecha_de_Resultado</span></th>
                                                <th class="Estatus_IndicadorHeader"><span>
<button type="button" data-attribute="257778" data-field-id="Detalle_Examenes_LaboratorioEstatus_Indicador" data-field-name="@Resources.Detalle_Examenes_LaboratorioResources.Estatus_Indicador" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Examenes_LaboratorioResources.Estatus_Indicador">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Examenes_LaboratorioResources.Estatus_Indicador</span></th>

                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                            </div>
                            </div>
                                </div>


                            <div id="tabDatos_Ginecologicos" class="tab-pane">
                                <div class="panel-body">
                            <div class="form-group" id="divEsta_embarazada">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Esta_embarazada</label>
                                <div class="col-sm-8" data-field-id="Esta_embarazada" data-attribute="257816" data-field-name="@Resources.PacientesResources.Esta_embarazada">
                                    <select class="form-control Datos_Ginecologicos" data-val="true" data-val-number="The field ¿Está embarazada? must be a number." data-val-required="The ¿Está embarazada? field is required." id="Esta_embarazada" name="Esta_embarazada">
                                        <option value=""></option>
                                        @if (varRespuesta_Logica_Esta_embarazada != null){ 
                                            foreach (var itemEsta_embarazada in varRespuesta_Logica_Esta_embarazada)
                                            {
                                                if (itemEsta_embarazada.Value == Convert.ToString(Model.Esta_embarazada))
                                                {
                                                    <option value="@itemEsta_embarazada.Value" selected>@itemEsta_embarazada.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemEsta_embarazada.Value">@itemEsta_embarazada.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Esta_embarazada" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257816).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Respuesta_Logica', 'Esta_embarazada');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divTu_embarazo_es_multiple">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Tu_embarazo_es_multiple</label>
                                <div class="col-sm-8" data-field-id="Tu_embarazo_es_multiple" data-attribute="260102" data-field-name="@Resources.PacientesResources.Tu_embarazo_es_multiple">
                                    <select class="form-control Datos_Ginecologicos" data-val="true" data-val-number="The field ¿Tu embarazo es múltiple? must be a number." data-val-required="The ¿Tu embarazo es múltiple? field is required." id="Tu_embarazo_es_multiple" name="Tu_embarazo_es_multiple">
                                        <option value=""></option>
                                        @if (varRespuesta_Logica_Tu_embarazo_es_multiple != null){ 
                                            foreach (var itemTu_embarazo_es_multiple in varRespuesta_Logica_Tu_embarazo_es_multiple)
                                            {
                                                if (itemTu_embarazo_es_multiple.Value == Convert.ToString(Model.Tu_embarazo_es_multiple))
                                                {
                                                    <option value="@itemTu_embarazo_es_multiple.Value" selected>@itemTu_embarazo_es_multiple.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemTu_embarazo_es_multiple.Value">@itemTu_embarazo_es_multiple.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Tu_embarazo_es_multiple" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 260102).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Respuesta_Logica', 'Tu_embarazo_es_multiple');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divSemana_de_gestacion">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Semana_de_gestacion</label>
                                <div class="col-sm-8" data-field-id="Semana_de_gestacion" data-attribute="257817" data-field-name="@Resources.PacientesResources.Semana_de_gestacion">
                                    <input class="form-control inputNumber Datos_Ginecologicos" id="Semana_de_gestacion" name="Semana_de_gestacion" type="text" value="@Model.Semana_de_gestacion">
                                    @*<span class="field-validation-valid" data-valmsg-for="Semana_de_gestacion" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divPeso_pregestacional">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Peso_pregestacional</label>
                                <div class="col-sm-8" data-field-id="Peso_pregestacional" data-attribute="257818" data-field-name="@Resources.PacientesResources.Peso_pregestacional">
                                    <input class="form-control inputNumber Datos_Ginecologicos" id="Peso_pregestacional" name="Peso_pregestacional" type="text" value="@Model.Peso_pregestacional">
                                    @*<span class="field-validation-valid" data-valmsg-for="Peso_pregestacional" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divToma_anticonceptivos">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Toma_anticonceptivos</label>
                                <div class="col-sm-8" data-field-id="Toma_anticonceptivos" data-attribute="257819" data-field-name="@Resources.PacientesResources.Toma_anticonceptivos">
                                    <select class="form-control Datos_Ginecologicos" data-val="true" data-val-number="The field Toma anticonceptivos must be a number." data-val-required="The Toma anticonceptivos field is required." id="Toma_anticonceptivos" name="Toma_anticonceptivos">
                                        <option value=""></option>
                                        @if (varRespuesta_Logica_Toma_anticonceptivos != null){ 
                                            foreach (var itemToma_anticonceptivos in varRespuesta_Logica_Toma_anticonceptivos)
                                            {
                                                if (itemToma_anticonceptivos.Value == Convert.ToString(Model.Toma_anticonceptivos))
                                                {
                                                    <option value="@itemToma_anticonceptivos.Value" selected>@itemToma_anticonceptivos.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemToma_anticonceptivos.Value">@itemToma_anticonceptivos.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Toma_anticonceptivos" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257819).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Respuesta_Logica', 'Toma_anticonceptivos');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divNombre_del_Anticonceptivo">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Nombre_del_Anticonceptivo</label>
                                <div class="col-sm-8" data-field-id="Nombre_del_Anticonceptivo" data-attribute="257820" data-field-name="@Resources.PacientesResources.Nombre_del_Anticonceptivo">
                                    <input class="form-control Datos_Ginecologicos" id="Nombre_del_Anticonceptivo" name="Nombre_del_Anticonceptivo" type="text" value="@Model.Nombre_del_Anticonceptivo">
                                    @*<span class="field-validation-valid" data-valmsg-for="Nombre_del_Anticonceptivo" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divDosis">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Dosis</label>
                                <div class="col-sm-8" data-field-id="Dosis" data-attribute="257821" data-field-name="@Resources.PacientesResources.Dosis">
                                    <textarea id="Dosis" name="Dosis" class="form-control Datos_Ginecologicos" rows="4" cols="50">@Model.Dosis</textarea>
                                    @*<span class="field-validation-valid" data-valmsg-for="Dosis" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divClimaterio">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Climaterio</label>
                                <div class="col-sm-8" data-field-id="Climaterio" data-attribute="257822" data-field-name="@Resources.PacientesResources.Climaterio">
                                    <select class="form-control Datos_Ginecologicos" data-val="true" data-val-number="The field Climaterio must be a number." data-val-required="The Climaterio field is required." id="Climaterio" name="Climaterio">
                                        <option value=""></option>
                                        @if (varRespuesta_Logica_Climaterio != null){ 
                                            foreach (var itemClimaterio in varRespuesta_Logica_Climaterio)
                                            {
                                                if (itemClimaterio.Value == Convert.ToString(Model.Climaterio))
                                                {
                                                    <option value="@itemClimaterio.Value" selected>@itemClimaterio.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemClimaterio.Value">@itemClimaterio.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Climaterio" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257822).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Respuesta_Logica', 'Climaterio');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divFecha_Climaterio">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Fecha_Climaterio</label>
                                <div class="col-sm-8" data-field-id="Fecha_Climaterio" data-attribute="257823" data-field-name="@Resources.PacientesResources.Fecha_Climaterio">
                                    <div class='input-group date' id='datetimepicker1'>
                                        <input class="form-control col-md-12 Datos_Ginecologicos" id="Fecha_Climaterio"  name="Fecha_Climaterio" type="text" value="@Model.Fecha_Climaterio">
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="divTerapia_reemplazo_hormonal">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Terapia_reemplazo_hormonal</label>
                                <div class="col-sm-8" data-field-id="Terapia_reemplazo_hormonal" data-attribute="257824" data-field-name="@Resources.PacientesResources.Terapia_reemplazo_hormonal">
                                    <select class="form-control Datos_Ginecologicos" data-val="true" data-val-number="The field ¿Se encuentra en terapia de reemplazo hormonal? must be a number." data-val-required="The ¿Se encuentra en terapia de reemplazo hormonal? field is required." id="Terapia_reemplazo_hormonal" name="Terapia_reemplazo_hormonal">
                                        <option value=""></option>
                                        @if (varRespuesta_Logica_Terapia_reemplazo_hormonal != null){ 
                                            foreach (var itemTerapia_reemplazo_hormonal in varRespuesta_Logica_Terapia_reemplazo_hormonal)
                                            {
                                                if (itemTerapia_reemplazo_hormonal.Value == Convert.ToString(Model.Terapia_reemplazo_hormonal))
                                                {
                                                    <option value="@itemTerapia_reemplazo_hormonal.Value" selected>@itemTerapia_reemplazo_hormonal.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemTerapia_reemplazo_hormonal.Value">@itemTerapia_reemplazo_hormonal.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Terapia_reemplazo_hormonal" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257824).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Respuesta_Logica', 'Terapia_reemplazo_hormonal');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div id="divDetalle_de_Terapia_Hormonal">
                            <div class="ibox-title">
                                <h5>@Resources.PacientesResources.Detalle_de_Terapia_Hormonal</h5>
                                <div class="ibox-tools">
                                </div>
                            </div>
                            <div class="ibox-content">
                                <div class="">
									@if (permissionDetalle_Terapia_Hormonal.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_Terapia_HormonalfnClickAddRow();" href="javascript:void(0);" title="@Resources.Resources.AddNewRow" class="Detalle_Terapia_HormonalAddRow btn btn-primary">
                                            <i class="glyphicon glyphicon-plus"></i>
                                        </a>
                                    }
                                    <button onclick="PacientesGetBusinessRule('', 'Al Guardar o al Eliminar una Row', '257825')" type="button" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton" data-toggle="modal" data-target="#PacientesBusinessRule-form">
                                        <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleToCreateGrid">
                                            <i class="fa fa-cogs fa-spin"></i>
                                        </a>
                                    </button>
									@if (permissionDetalle_Terapia_Hormonal.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_Terapia_HormonalfnOpenAddRowPopUp();" data-toggle="modal" title="@Resources.Resources.AddNewRow" data-target="#AddDetalle_Terapia_Hormonal-form" data-backdrop="static" data-keyboard="false" class="btn_mrpopup btn btn-primary">
                                            <i class="glyphicon glyphicon-new-window"></i>
                                        </a>
                                    }  
                                </div>

                                <br />

                                <div style='overflow-x: auto;'>
                                    <table class="table table-striped table-bordered table-hover childValidateTable" id="Detalle_Terapia_HormonalGrid">
                                        <thead>
                                            <tr>
                                                <th class="ActionHeader"><span>@Resources.Resources.Actions</span></th>


                                                <th class="NombreHeader"><span>
<button type="button" data-attribute="257781" data-field-id="Detalle_Terapia_HormonalNombre" data-field-name="@Resources.Detalle_Terapia_HormonalResources.Nombre" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Terapia_HormonalResources.Nombre">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Terapia_HormonalResources.Nombre</span></th>
                                                <th class="DosisHeader"><span>
<button type="button" data-attribute="257782" data-field-id="Detalle_Terapia_HormonalDosis" data-field-name="@Resources.Detalle_Terapia_HormonalResources.Dosis" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Terapia_HormonalResources.Dosis">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Terapia_HormonalResources.Dosis</span></th>

                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                            </div>
                            </div>
                                </div>


                            <div id="tabHistoria_Nutricional" class="tab-pane">
                                <div class="panel-body">
                            <div class="form-group" id="divTipo_Dieta">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Tipo_Dieta</label>
                                <div class="col-sm-8" data-field-id="Tipo_Dieta" data-attribute="257726" data-field-name="@Resources.PacientesResources.Tipo_Dieta">
                                    <select class="form-control Historia_Nutricional" data-val="true" data-val-number="The field Mi tipo de dieta actual es must be a number." data-val-required="The Mi tipo de dieta actual es field is required." id="Tipo_Dieta" name="Tipo_Dieta">
                                        <option value=""></option>
                                        @if (varTipo_de_Dieta_Tipo_Dieta != null){ 
                                            foreach (var itemTipo_Dieta in varTipo_de_Dieta_Tipo_Dieta)
                                            {
                                                if (itemTipo_Dieta.Value == Convert.ToString(Model.Tipo_Dieta))
                                                {
                                                    <option value="@itemTipo_Dieta.Value" selected>@itemTipo_Dieta.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemTipo_Dieta.Value">@itemTipo_Dieta.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Tipo_Dieta" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257726).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Tipo_de_Dieta', 'Tipo_Dieta');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                        <div class="form-group" id="divAlergias">
	                     <label class="col-sm-2 control-label">@Resources.PacientesResources.Alergias</label>
	                     <div class="col-sm-8" data-field-id="Alergias" data-attribute="257727" data-field-name="@Resources.PacientesResources.Alergias">
		                  <select id="ddlAlergiasMult" name="ddlAlergiasMult" class="form-control chosen-select" multiple="multiple">
		                  </select>
	                     </div>
                        </div>
                            <div id="divDetalle_Bebidas_Paciente">
                            <div class="ibox-title">
                                <h5>@Resources.PacientesResources.Detalle_Bebidas_Paciente</h5>
                                <div class="ibox-tools">
                                </div>
                            </div>
                            <div class="ibox-content">
                                <div class="">
									@if (permissionDetalle_Preferencia_Bebidas.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_Preferencia_BebidasfnClickAddRow();" href="javascript:void(0);" title="@Resources.Resources.AddNewRow" class="Detalle_Preferencia_BebidasAddRow btn btn-primary">
                                            <i class="glyphicon glyphicon-plus"></i>
                                        </a>
                                    }
                                    <button onclick="PacientesGetBusinessRule('', 'Al Guardar o al Eliminar una Row', '257728')" type="button" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton" data-toggle="modal" data-target="#PacientesBusinessRule-form">
                                        <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleToCreateGrid">
                                            <i class="fa fa-cogs fa-spin"></i>
                                        </a>
                                    </button>
									@if (permissionDetalle_Preferencia_Bebidas.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_Preferencia_BebidasfnOpenAddRowPopUp();" data-toggle="modal" title="@Resources.Resources.AddNewRow" data-target="#AddDetalle_Preferencia_Bebidas-form" data-backdrop="static" data-keyboard="false" class="btn_mrpopup btn btn-primary">
                                            <i class="glyphicon glyphicon-new-window"></i>
                                        </a>
                                    }  
                                </div>

                                <br />

                                <div style='overflow-x: auto;'>
                                    <table class="table table-striped table-bordered table-hover childValidateTable" id="Detalle_Preferencia_BebidasGrid">
                                        <thead>
                                            <tr>
                                                <th class="ActionHeader"><span>@Resources.Resources.Actions</span></th>


                                                <th class="BebidaHeader"><span>
<button type="button" data-attribute="257698" data-field-id="Detalle_Preferencia_BebidasBebida" data-field-name="@Resources.Detalle_Preferencia_BebidasResources.Bebida" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Preferencia_BebidasResources.Bebida">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Preferencia_BebidasResources.Bebida</span></th>
                                                <th class="CantidadHeader"><span>
<button type="button" data-attribute="257699" data-field-id="Detalle_Preferencia_BebidasCantidad" data-field-name="@Resources.Detalle_Preferencia_BebidasResources.Cantidad" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Preferencia_BebidasResources.Cantidad">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Preferencia_BebidasResources.Cantidad</span></th>

                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                            </div>
                            <div class="form-group" id="divSuplementos">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Suplementos</label>
                                <div class="col-sm-8" data-field-id="Suplementos" data-attribute="257729" data-field-name="@Resources.PacientesResources.Suplementos">
                                    <select class="form-control Historia_Nutricional" data-val="true" data-val-number="The field Suplementos que consumo al día must be a number." data-val-required="The Suplementos que consumo al día field is required." id="Suplementos" name="Suplementos">
                                        <option value=""></option>
                                        @if (varSuplementos_Suplementos != null){ 
                                            foreach (var itemSuplementos in varSuplementos_Suplementos)
                                            {
                                                if (itemSuplementos.Value == Convert.ToString(Model.Suplementos))
                                                {
                                                    <option value="@itemSuplementos.Value" selected>@itemSuplementos.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemSuplementos.Value">@itemSuplementos.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Suplementos" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257729).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Suplementos', 'Suplementos');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divConsumo_de_sal">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Consumo_de_sal</label>
                                <div class="col-sm-8" data-field-id="Consumo_de_sal" data-attribute="257730" data-field-name="@Resources.PacientesResources.Consumo_de_sal">
                                    <select class="form-control Historia_Nutricional" data-val="true" data-val-number="The field Consumo de sal must be a number." data-val-required="The Consumo de sal field is required." id="Consumo_de_sal" name="Consumo_de_sal">
                                        <option value=""></option>
                                        @if (varPreferencias_Sal_Consumo_de_sal != null){ 
                                            foreach (var itemConsumo_de_sal in varPreferencias_Sal_Consumo_de_sal)
                                            {
                                                if (itemConsumo_de_sal.Value == Convert.ToString(Model.Consumo_de_sal))
                                                {
                                                    <option value="@itemConsumo_de_sal.Value" selected>@itemConsumo_de_sal.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemConsumo_de_sal.Value">@itemConsumo_de_sal.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Consumo_de_sal" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257730).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Preferencias_Sal', 'Consumo_de_sal');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divGrasas_Preferencias">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Grasas_Preferencias</label>
                                <div class="col-sm-8" data-field-id="Grasas_Preferencias" data-attribute="257731" data-field-name="@Resources.PacientesResources.Grasas_Preferencias">
                                    <select class="form-control Historia_Nutricional" data-val="true" data-val-number="The field Qué grasa utilizas para preparar tu comida must be a number." data-val-required="The Qué grasa utilizas para preparar tu comida field is required." id="Grasas_Preferencias" name="Grasas_Preferencias">
                                        <option value=""></option>
                                        @if (varPreferencias_Grasas_Grasas_Preferencias != null){ 
                                            foreach (var itemGrasas_Preferencias in varPreferencias_Grasas_Grasas_Preferencias)
                                            {
                                                if (itemGrasas_Preferencias.Value == Convert.ToString(Model.Grasas_Preferencias))
                                                {
                                                    <option value="@itemGrasas_Preferencias.Value" selected>@itemGrasas_Preferencias.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemGrasas_Preferencias.Value">@itemGrasas_Preferencias.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Grasas_Preferencias" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257731).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Preferencias_Grasas', 'Grasas_Preferencias');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divComidas_cantidad">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Comidas_cantidad</label>
                                <div class="col-sm-8" data-field-id="Comidas_cantidad" data-attribute="257732" data-field-name="@Resources.PacientesResources.Comidas_cantidad">
                                    <select class="form-control Historia_Nutricional" data-val="true" data-val-number="The field Cuántas comidas haces al día must be a number." data-val-required="The Cuántas comidas haces al día field is required." id="Comidas_cantidad" name="Comidas_cantidad">
                                        <option value=""></option>
                                        @if (varCantidad_Comidas_Comidas_cantidad != null){ 
                                            foreach (var itemComidas_cantidad in varCantidad_Comidas_Comidas_cantidad)
                                            {
                                                if (itemComidas_cantidad.Value == Convert.ToString(Model.Comidas_cantidad))
                                                {
                                                    <option value="@itemComidas_cantidad.Value" selected>@itemComidas_cantidad.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemComidas_cantidad.Value">@itemComidas_cantidad.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Comidas_cantidad" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257732).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Cantidad_Comidas', 'Comidas_cantidad');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divPreparacion_Preferencias">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Preparacion_Preferencias</label>
                                <div class="col-sm-8" data-field-id="Preparacion_Preferencias" data-attribute="257733" data-field-name="@Resources.PacientesResources.Preparacion_Preferencias">
                                    <select class="form-control Historia_Nutricional" data-val="true" data-val-number="The field Quién prepara tus alimentos must be a number." data-val-required="The Quién prepara tus alimentos field is required." id="Preparacion_Preferencias" name="Preparacion_Preferencias">
                                        <option value=""></option>
                                        @if (varPreferencias_Preparacion_Preparacion_Preferencias != null){ 
                                            foreach (var itemPreparacion_Preferencias in varPreferencias_Preparacion_Preparacion_Preferencias)
                                            {
                                                if (itemPreparacion_Preferencias.Value == Convert.ToString(Model.Preparacion_Preferencias))
                                                {
                                                    <option value="@itemPreparacion_Preferencias.Value" selected>@itemPreparacion_Preferencias.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemPreparacion_Preferencias.Value">@itemPreparacion_Preferencias.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Preparacion_Preferencias" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257733).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Preferencias_Preparacion', 'Preparacion_Preferencias');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divEntre_comidas">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Entre_comidas</label>
                                <div class="col-sm-8" data-field-id="Entre_comidas" data-attribute="257734" data-field-name="@Resources.PacientesResources.Entre_comidas">
                                    <select class="form-control Historia_Nutricional" data-val="true" data-val-number="The field Comes entre comidas must be a number." data-val-required="The Comes entre comidas field is required." id="Entre_comidas" name="Entre_comidas">
                                        <option value=""></option>
                                        @if (varPreferencias_Entrecomidas_Entre_comidas != null){ 
                                            foreach (var itemEntre_comidas in varPreferencias_Entrecomidas_Entre_comidas)
                                            {
                                                if (itemEntre_comidas.Value == Convert.ToString(Model.Entre_comidas))
                                                {
                                                    <option value="@itemEntre_comidas.Value" selected>@itemEntre_comidas.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemEntre_comidas.Value">@itemEntre_comidas.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Entre_comidas" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257734).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Preferencias_Entrecomidas', 'Entre_comidas');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divApetito">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Apetito</label>
                                <div class="col-sm-8" data-field-id="Apetito" data-attribute="257735" data-field-name="@Resources.PacientesResources.Apetito">
                                    <select class="form-control Historia_Nutricional" data-val="true" data-val-number="The field Considero que mi apetito es must be a number." data-val-required="The Considero que mi apetito es field is required." id="Apetito" name="Apetito">
                                        <option value=""></option>
                                        @if (varNivel_de_Satisfaccion_Apetito != null){ 
                                            foreach (var itemApetito in varNivel_de_Satisfaccion_Apetito)
                                            {
                                                if (itemApetito.Value == Convert.ToString(Model.Apetito))
                                                {
                                                    <option value="@itemApetito.Value" selected>@itemApetito.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemApetito.Value">@itemApetito.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Apetito" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257735).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Nivel_de_Satisfaccion', 'Apetito');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divHabitos_Modificacion">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Habitos_Modificacion</label>
                                <div class="col-sm-8" data-field-id="Habitos_Modificacion" data-attribute="257736" data-field-name="@Resources.PacientesResources.Habitos_Modificacion">
                                    <select class="form-control Historia_Nutricional" data-val="true" data-val-number="The field He modificado mi alimentación en los últimos 6 meses must be a number." data-val-required="The He modificado mi alimentación en los últimos 6 meses field is required." id="Habitos_Modificacion" name="Habitos_Modificacion">
                                        <option value=""></option>
                                        @if (varTipo_Modificacion_Alimentos_Habitos_Modificacion != null){ 
                                            foreach (var itemHabitos_Modificacion in varTipo_Modificacion_Alimentos_Habitos_Modificacion)
                                            {
                                                if (itemHabitos_Modificacion.Value == Convert.ToString(Model.Habitos_Modificacion))
                                                {
                                                    <option value="@itemHabitos_Modificacion.Value" selected>@itemHabitos_Modificacion.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemHabitos_Modificacion.Value">@itemHabitos_Modificacion.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Habitos_Modificacion" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257736).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Tipo_Modificacion_Alimentos', 'Habitos_Modificacion');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divHorario_hambre">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Horario_hambre</label>
                                <div class="col-sm-8" data-field-id="Horario_hambre" data-attribute="257737" data-field-name="@Resources.PacientesResources.Horario_hambre">
                                    <select class="form-control Historia_Nutricional" data-val="true" data-val-number="The field ¿A qué hora tienes más hambre? must be a number." data-val-required="The ¿A qué hora tienes más hambre? field is required." id="Horario_hambre" name="Horario_hambre">
                                        <option value=""></option>
                                        @if (varPeriodo_del_dia_Horario_hambre != null){ 
                                            foreach (var itemHorario_hambre in varPeriodo_del_dia_Horario_hambre)
                                            {
                                                if (itemHorario_hambre.Value == Convert.ToString(Model.Horario_hambre))
                                                {
                                                    <option value="@itemHorario_hambre.Value" selected>@itemHorario_hambre.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemHorario_hambre.Value">@itemHorario_hambre.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Horario_hambre" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257737).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Periodo_del_dia', 'Horario_hambre');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divCuando_cambia_mi_estado_de_animo">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Cuando_cambia_mi_estado_de_animo</label>
                                <div class="col-sm-8" data-field-id="Cuando_cambia_mi_estado_de_animo" data-attribute="257738" data-field-name="@Resources.PacientesResources.Cuando_cambia_mi_estado_de_animo">
                                    <select class="form-control Historia_Nutricional" data-val="true" data-val-number="The field Cuando cambia mi estado de ánimo must be a number." data-val-required="The Cuando cambia mi estado de ánimo field is required." id="Cuando_cambia_mi_estado_de_animo" name="Cuando_cambia_mi_estado_de_animo">
                                        <option value=""></option>
                                        @if (varEstado_de_Animo_Cuando_cambia_mi_estado_de_animo != null){ 
                                            foreach (var itemCuando_cambia_mi_estado_de_animo in varEstado_de_Animo_Cuando_cambia_mi_estado_de_animo)
                                            {
                                                if (itemCuando_cambia_mi_estado_de_animo.Value == Convert.ToString(Model.Cuando_cambia_mi_estado_de_animo))
                                                {
                                                    <option value="@itemCuando_cambia_mi_estado_de_animo.Value" selected>@itemCuando_cambia_mi_estado_de_animo.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemCuando_cambia_mi_estado_de_animo.Value">@itemCuando_cambia_mi_estado_de_animo.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Cuando_cambia_mi_estado_de_animo" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257738).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Estado_de_Animo', 'Cuando_cambia_mi_estado_de_animo');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divMedicamentos_bajar_peso">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Medicamentos_bajar_peso</label>
                                <div class="col-sm-8" data-field-id="Medicamentos_bajar_peso" data-attribute="257739" data-field-name="@Resources.PacientesResources.Medicamentos_bajar_peso">
                                    <select class="form-control Historia_Nutricional" data-val="true" data-val-number="The field Has utilizado medicamentos para bajar de peso must be a number." data-val-required="The Has utilizado medicamentos para bajar de peso field is required." id="Medicamentos_bajar_peso" name="Medicamentos_bajar_peso">
                                        <option value=""></option>
                                        @if (varRespuesta_Logica_Medicamentos_bajar_peso != null){ 
                                            foreach (var itemMedicamentos_bajar_peso in varRespuesta_Logica_Medicamentos_bajar_peso)
                                            {
                                                if (itemMedicamentos_bajar_peso.Value == Convert.ToString(Model.Medicamentos_bajar_peso))
                                                {
                                                    <option value="@itemMedicamentos_bajar_peso.Value" selected>@itemMedicamentos_bajar_peso.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemMedicamentos_bajar_peso.Value">@itemMedicamentos_bajar_peso.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Medicamentos_bajar_peso" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257739).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Respuesta_Logica', 'Medicamentos_bajar_peso');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divCual_medicamento">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Cual_medicamento</label>
                                <div class="col-sm-8" data-field-id="Cual_medicamento" data-attribute="257834" data-field-name="@Resources.PacientesResources.Cual_medicamento">
                                    <input class="form-control Historia_Nutricional" id="Cual_medicamento" name="Cual_medicamento" type="text" value="@Model.Cual_medicamento">
                                    @*<span class="field-validation-valid" data-valmsg-for="Cual_medicamento" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            </div>
                                </div>


                            <div id="tabEstilo_de_Vida" class="tab-pane">
                                <div class="panel-body">
                            <div class="form-group" id="divFrecuencia_Ejercicio">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Frecuencia_Ejercicio</label>
                                <div class="col-sm-8" data-field-id="Frecuencia_Ejercicio" data-attribute="257721" data-field-name="@Resources.PacientesResources.Frecuencia_Ejercicio">
                                    <select class="form-control Estilo_de_Vida" data-val="true" data-val-number="The field ¿Con qué frecuencia realizas ejercicio? must be a number." data-val-required="The ¿Con qué frecuencia realizas ejercicio? field is required." id="Frecuencia_Ejercicio" name="Frecuencia_Ejercicio">
                                        <option value=""></option>
                                        @if (varFrecuencia_Ejercicio_Frecuencia_Ejercicio != null){ 
                                            foreach (var itemFrecuencia_Ejercicio in varFrecuencia_Ejercicio_Frecuencia_Ejercicio)
                                            {
                                                if (itemFrecuencia_Ejercicio.Value == Convert.ToString(Model.Frecuencia_Ejercicio))
                                                {
                                                    <option value="@itemFrecuencia_Ejercicio.Value" selected>@itemFrecuencia_Ejercicio.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemFrecuencia_Ejercicio.Value">@itemFrecuencia_Ejercicio.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Frecuencia_Ejercicio" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257721).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Frecuencia_Ejercicio', 'Frecuencia_Ejercicio');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divDuracion_Ejercicio">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Duracion_Ejercicio</label>
                                <div class="col-sm-8" data-field-id="Duracion_Ejercicio" data-attribute="257722" data-field-name="@Resources.PacientesResources.Duracion_Ejercicio">
                                    <select class="form-control Estilo_de_Vida" data-val="true" data-val-number="The field ¿Cuántas horas te ejercitas al día? must be a number." data-val-required="The ¿Cuántas horas te ejercitas al día? field is required." id="Duracion_Ejercicio" name="Duracion_Ejercicio">
                                        <option value=""></option>
                                        @if (varDuracion_Ejercicio_Duracion_Ejercicio != null){ 
                                            foreach (var itemDuracion_Ejercicio in varDuracion_Ejercicio_Duracion_Ejercicio)
                                            {
                                                if (itemDuracion_Ejercicio.Value == Convert.ToString(Model.Duracion_Ejercicio))
                                                {
                                                    <option value="@itemDuracion_Ejercicio.Value" selected>@itemDuracion_Ejercicio.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemDuracion_Ejercicio.Value">@itemDuracion_Ejercicio.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Duracion_Ejercicio" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257722).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Duracion_Ejercicio', 'Duracion_Ejercicio');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divTipo_Ejercicio">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Tipo_Ejercicio</label>
                                <div class="col-sm-8" data-field-id="Tipo_Ejercicio" data-attribute="257723" data-field-name="@Resources.PacientesResources.Tipo_Ejercicio">
                                    <select class="form-control Estilo_de_Vida" data-val="true" data-val-number="The field ¿Que tipo de ejercicio realizas?  must be a number." data-val-required="The ¿Que tipo de ejercicio realizas?  field is required." id="Tipo_Ejercicio" name="Tipo_Ejercicio">
                                        <option value=""></option>
                                        @if (varTipo_Ejercicio_Tipo_Ejercicio != null){ 
                                            foreach (var itemTipo_Ejercicio in varTipo_Ejercicio_Tipo_Ejercicio)
                                            {
                                                if (itemTipo_Ejercicio.Value == Convert.ToString(Model.Tipo_Ejercicio))
                                                {
                                                    <option value="@itemTipo_Ejercicio.Value" selected>@itemTipo_Ejercicio.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemTipo_Ejercicio.Value">@itemTipo_Ejercicio.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Tipo_Ejercicio" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257723).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Tipo_Ejercicio', 'Tipo_Ejercicio');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divAntiguedad_Ejercicio">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Antiguedad_Ejercicio</label>
                                <div class="col-sm-8" data-field-id="Antiguedad_Ejercicio" data-attribute="257724" data-field-name="@Resources.PacientesResources.Antiguedad_Ejercicio">
                                    <select class="form-control Estilo_de_Vida" data-val="true" data-val-number="The field ¿Desde hace cuánto tiempo realizas ejercicio? must be a number." data-val-required="The ¿Desde hace cuánto tiempo realizas ejercicio? field is required." id="Antiguedad_Ejercicio" name="Antiguedad_Ejercicio">
                                        <option value=""></option>
                                        @if (varAntiguedad_Ejercicios_Antiguedad_Ejercicio != null){ 
                                            foreach (var itemAntiguedad_Ejercicio in varAntiguedad_Ejercicios_Antiguedad_Ejercicio)
                                            {
                                                if (itemAntiguedad_Ejercicio.Value == Convert.ToString(Model.Antiguedad_Ejercicio))
                                                {
                                                    <option value="@itemAntiguedad_Ejercicio.Value" selected>@itemAntiguedad_Ejercicio.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemAntiguedad_Ejercicio.Value">@itemAntiguedad_Ejercicio.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Antiguedad_Ejercicio" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257724).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Antiguedad_Ejercicios', 'Antiguedad_Ejercicio');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            </div>
                                </div>


                            <div id="tabResultados" class="tab-pane">
                                <div class="panel-body">
                            <div class="form-group" id="divIMC">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.IMC</label>
                                <div class="col-sm-8" data-field-id="IMC" data-attribute="257826" data-field-name="@Resources.PacientesResources.IMC">
                                    <input class="form-control inputNumber Resultados" id="IMC" name="IMC" type="text" value="@Model.IMC">
                                    @*<span class="field-validation-valid" data-valmsg-for="IMC" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divInterpretacion_IMC">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Interpretacion_IMC</label>
                                <div class="col-sm-8" data-field-id="Interpretacion_IMC" data-attribute="258374" data-field-name="@Resources.PacientesResources.Interpretacion_IMC">
                                    <select class="form-control Resultados" data-val="true" data-val-number="The field Interpretación must be a number." data-val-required="The Interpretación field is required." id="Interpretacion_IMC" name="Interpretacion_IMC">
                                        <option value=""></option>
                                        @if (varInterpretacion_IMC_Interpretacion_IMC != null){ 
                                            foreach (var itemInterpretacion_IMC in varInterpretacion_IMC_Interpretacion_IMC)
                                            {
                                                if (itemInterpretacion_IMC.Value == Convert.ToString(Model.Interpretacion_IMC))
                                                {
                                                    <option value="@itemInterpretacion_IMC.Value" selected>@itemInterpretacion_IMC.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemInterpretacion_IMC.Value">@itemInterpretacion_IMC.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Interpretacion_IMC" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 258374).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Interpretacion_IMC', 'Interpretacion_IMC');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divIMC_Pediatria">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.IMC_Pediatria</label>
                                <div class="col-sm-8" data-field-id="IMC_Pediatria" data-attribute="258443" data-field-name="@Resources.PacientesResources.IMC_Pediatria">
                                    <select class="form-control Resultados" data-val="true" data-val-number="The field IMC Pediatría must be a number." data-val-required="The IMC Pediatría field is required." id="IMC_Pediatria" name="IMC_Pediatria">
                                        <option value=""></option>
                                        @if (varInterpretacion_IMC_IMC_Pediatria != null){ 
                                            foreach (var itemIMC_Pediatria in varInterpretacion_IMC_IMC_Pediatria)
                                            {
                                                if (itemIMC_Pediatria.Value == Convert.ToString(Model.IMC_Pediatria))
                                                {
                                                    <option value="@itemIMC_Pediatria.Value" selected>@itemIMC_Pediatria.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemIMC_Pediatria.Value">@itemIMC_Pediatria.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="IMC_Pediatria" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 258443).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Interpretacion_IMC', 'IMC_Pediatria');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divComplexion_corporal">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Complexion_corporal</label>
                                <div class="col-sm-8" data-field-id="Complexion_corporal" data-attribute="257827" data-field-name="@Resources.PacientesResources.Complexion_corporal">
                                    <input class="form-control Resultados" id="Complexion_corporal" name="Complexion_corporal" type="text" value="@Model.Complexion_corporal">
                                    @*<span class="field-validation-valid" data-valmsg-for="Complexion_corporal" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divInterpretacion_complexion_corporal">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Interpretacion_complexion_corporal</label>
                                <div class="col-sm-8" data-field-id="Interpretacion_complexion_corporal" data-attribute="258375" data-field-name="@Resources.PacientesResources.Interpretacion_complexion_corporal">
                                    <select class="form-control Resultados" data-val="true" data-val-number="The field Interpretación must be a number." data-val-required="The Interpretación field is required." id="Interpretacion_complexion_corporal" name="Interpretacion_complexion_corporal">
                                        <option value=""></option>
                                        @if (varInterpretacion_corporal_Interpretacion_complexion_corporal != null){ 
                                            foreach (var itemInterpretacion_complexion_corporal in varInterpretacion_corporal_Interpretacion_complexion_corporal)
                                            {
                                                if (itemInterpretacion_complexion_corporal.Value == Convert.ToString(Model.Interpretacion_complexion_corporal))
                                                {
                                                    <option value="@itemInterpretacion_complexion_corporal.Value" selected>@itemInterpretacion_complexion_corporal.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemInterpretacion_complexion_corporal.Value">@itemInterpretacion_complexion_corporal.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Interpretacion_complexion_corporal" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 258375).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Interpretacion_corporal', 'Interpretacion_complexion_corporal');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divDistribucion_de_grasa_corporal">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Distribucion_de_grasa_corporal</label>
                                <div class="col-sm-8" data-field-id="Distribucion_de_grasa_corporal" data-attribute="257828" data-field-name="@Resources.PacientesResources.Distribucion_de_grasa_corporal">
                                    <input class="form-control Resultados" id="Distribucion_de_grasa_corporal" name="Distribucion_de_grasa_corporal" type="text" value="@Model.Distribucion_de_grasa_corporal">
                                    @*<span class="field-validation-valid" data-valmsg-for="Distribucion_de_grasa_corporal" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divInterpretacion_grasa_corporal">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Interpretacion_grasa_corporal</label>
                                <div class="col-sm-8" data-field-id="Interpretacion_grasa_corporal" data-attribute="258376" data-field-name="@Resources.PacientesResources.Interpretacion_grasa_corporal">
                                    <select class="form-control Resultados" data-val="true" data-val-number="The field Interpretación must be a number." data-val-required="The Interpretación field is required." id="Interpretacion_grasa_corporal" name="Interpretacion_grasa_corporal">
                                        <option value=""></option>
                                        @if (varInterpretacion_distribucion_grasa_corporal_Interpretacion_grasa_corporal != null){ 
                                            foreach (var itemInterpretacion_grasa_corporal in varInterpretacion_distribucion_grasa_corporal_Interpretacion_grasa_corporal)
                                            {
                                                if (itemInterpretacion_grasa_corporal.Value == Convert.ToString(Model.Interpretacion_grasa_corporal))
                                                {
                                                    <option value="@itemInterpretacion_grasa_corporal.Value" selected>@itemInterpretacion_grasa_corporal.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemInterpretacion_grasa_corporal.Value">@itemInterpretacion_grasa_corporal.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Interpretacion_grasa_corporal" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 258376).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Interpretacion_distribucion_grasa_corporal', 'Interpretacion_grasa_corporal');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divIndice_cintura_cadera">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Indice_cintura_cadera</label>
                                <div class="col-sm-8" data-field-id="Indice_cintura_cadera" data-attribute="258228" data-field-name="@Resources.PacientesResources.Indice_cintura_cadera">
                                    <input class="form-control Resultados" id="Indice_cintura_cadera" name="Indice_cintura_cadera" type="text" value="@Model.Indice_cintura_cadera">
                                    @*<span class="field-validation-valid" data-valmsg-for="Indice_cintura_cadera" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divInterpretacion_indice">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Interpretacion_indice</label>
                                <div class="col-sm-8" data-field-id="Interpretacion_indice" data-attribute="258377" data-field-name="@Resources.PacientesResources.Interpretacion_indice">
                                    <select class="form-control Resultados" data-val="true" data-val-number="The field Interpretación must be a number." data-val-required="The Interpretación field is required." id="Interpretacion_indice" name="Interpretacion_indice">
                                        <option value=""></option>
                                        @if (varInterpretacion_indice_cintura__cadera_Interpretacion_indice != null){ 
                                            foreach (var itemInterpretacion_indice in varInterpretacion_indice_cintura__cadera_Interpretacion_indice)
                                            {
                                                if (itemInterpretacion_indice.Value == Convert.ToString(Model.Interpretacion_indice))
                                                {
                                                    <option value="@itemInterpretacion_indice.Value" selected>@itemInterpretacion_indice.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemInterpretacion_indice.Value">@itemInterpretacion_indice.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Interpretacion_indice" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 258377).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Interpretacion_indice_cintura__cadera', 'Interpretacion_indice');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divConsumo_de_agua_resultado">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Consumo_de_agua_resultado</label>
                                <div class="col-sm-8" data-field-id="Consumo_de_agua_resultado" data-attribute="257829" data-field-name="@Resources.PacientesResources.Consumo_de_agua_resultado">
                                    <input class="form-control Resultados" id="Consumo_de_agua_resultado" name="Consumo_de_agua_resultado" type="text" value="@Model.Consumo_de_agua_resultado">
                                    @*<span class="field-validation-valid" data-valmsg-for="Consumo_de_agua_resultado" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divInterpretacion_agua">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Interpretacion_agua</label>
                                <div class="col-sm-8" data-field-id="Interpretacion_agua" data-attribute="258378" data-field-name="@Resources.PacientesResources.Interpretacion_agua">
                                    <select class="form-control Resultados" data-val="true" data-val-number="The field Interpretación must be a number." data-val-required="The Interpretación field is required." id="Interpretacion_agua" name="Interpretacion_agua">
                                        <option value=""></option>
                                        @if (varInterpretacion_consumo_de_agua_Interpretacion_agua != null){ 
                                            foreach (var itemInterpretacion_agua in varInterpretacion_consumo_de_agua_Interpretacion_agua)
                                            {
                                                if (itemInterpretacion_agua.Value == Convert.ToString(Model.Interpretacion_agua))
                                                {
                                                    <option value="@itemInterpretacion_agua.Value" selected>@itemInterpretacion_agua.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemInterpretacion_agua.Value">@itemInterpretacion_agua.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Interpretacion_agua" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 258378).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Interpretacion_consumo_de_agua', 'Interpretacion_agua');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divFrecuencia_cardiaca_en_Esfuerzo">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Frecuencia_cardiaca_en_Esfuerzo</label>
                                <div class="col-sm-8" data-field-id="Frecuencia_cardiaca_en_Esfuerzo" data-attribute="257830" data-field-name="@Resources.PacientesResources.Frecuencia_cardiaca_en_Esfuerzo">
                                    <input class="form-control inputNumber Resultados" id="Frecuencia_cardiaca_en_Esfuerzo" name="Frecuencia_cardiaca_en_Esfuerzo" type="text" value="@Model.Frecuencia_cardiaca_en_Esfuerzo">
                                    @*<span class="field-validation-valid" data-valmsg-for="Frecuencia_cardiaca_en_Esfuerzo" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divInterpretacion_frecuencia">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Interpretacion_frecuencia</label>
                                <div class="col-sm-8" data-field-id="Interpretacion_frecuencia" data-attribute="258379" data-field-name="@Resources.PacientesResources.Interpretacion_frecuencia">
                                    <select class="form-control Resultados" data-val="true" data-val-number="The field Interpretación must be a number." data-val-required="The Interpretación field is required." id="Interpretacion_frecuencia" name="Interpretacion_frecuencia">
                                        <option value=""></option>
                                        @if (varInterpretacion_Frecuencia_cardiaca_en_Esfuerzo_Interpretacion_frecuencia != null){ 
                                            foreach (var itemInterpretacion_frecuencia in varInterpretacion_Frecuencia_cardiaca_en_Esfuerzo_Interpretacion_frecuencia)
                                            {
                                                if (itemInterpretacion_frecuencia.Value == Convert.ToString(Model.Interpretacion_frecuencia))
                                                {
                                                    <option value="@itemInterpretacion_frecuencia.Value" selected>@itemInterpretacion_frecuencia.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemInterpretacion_frecuencia.Value">@itemInterpretacion_frecuencia.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Interpretacion_frecuencia" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 258379).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Interpretacion_Frecuencia_cardiaca_en_Esfuerzo', 'Interpretacion_frecuencia');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divDificultad_de_Rutina_de_Ejercicios">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Dificultad_de_Rutina_de_Ejercicios</label>
                                <div class="col-sm-8" data-field-id="Dificultad_de_Rutina_de_Ejercicios" data-attribute="257831" data-field-name="@Resources.PacientesResources.Dificultad_de_Rutina_de_Ejercicios">
                                    <select class="form-control Resultados" data-val="true" data-val-number="The field Dificultad de Rutina de Ejercicios must be a number." data-val-required="The Dificultad de Rutina de Ejercicios field is required." id="Dificultad_de_Rutina_de_Ejercicios" name="Dificultad_de_Rutina_de_Ejercicios">
                                        <option value=""></option>
                                        @if (varNivel_de_dificultad_Dificultad_de_Rutina_de_Ejercicios != null){ 
                                            foreach (var itemDificultad_de_Rutina_de_Ejercicios in varNivel_de_dificultad_Dificultad_de_Rutina_de_Ejercicios)
                                            {
                                                if (itemDificultad_de_Rutina_de_Ejercicios.Value == Convert.ToString(Model.Dificultad_de_Rutina_de_Ejercicios))
                                                {
                                                    <option value="@itemDificultad_de_Rutina_de_Ejercicios.Value" selected>@itemDificultad_de_Rutina_de_Ejercicios.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemDificultad_de_Rutina_de_Ejercicios.Value">@itemDificultad_de_Rutina_de_Ejercicios.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Dificultad_de_Rutina_de_Ejercicios" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 257831).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Nivel_de_dificultad', 'Dificultad_de_Rutina_de_Ejercicios');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divInterpretacion_dificultad">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Interpretacion_dificultad</label>
                                <div class="col-sm-8" data-field-id="Interpretacion_dificultad" data-attribute="258380" data-field-name="@Resources.PacientesResources.Interpretacion_dificultad">
                                    <select class="form-control Resultados" data-val="true" data-val-number="The field Interpretación must be a number." data-val-required="The Interpretación field is required." id="Interpretacion_dificultad" name="Interpretacion_dificultad">
                                        <option value=""></option>
                                        @if (varInterpretacion_Dificultad_de_Rutina_de_Ejercicios_Interpretacion_dificultad != null){ 
                                            foreach (var itemInterpretacion_dificultad in varInterpretacion_Dificultad_de_Rutina_de_Ejercicios_Interpretacion_dificultad)
                                            {
                                                if (itemInterpretacion_dificultad.Value == Convert.ToString(Model.Interpretacion_dificultad))
                                                {
                                                    <option value="@itemInterpretacion_dificultad.Value" selected>@itemInterpretacion_dificultad.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemInterpretacion_dificultad.Value">@itemInterpretacion_dificultad.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Interpretacion_dificultad" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 258380).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Interpretacion_Dificultad_de_Rutina_de_Ejercicios', 'Interpretacion_dificultad');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divCalorias">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Calorias</label>
                                <div class="col-sm-8" data-field-id="Calorias" data-attribute="257832" data-field-name="@Resources.PacientesResources.Calorias">
                                    <input class="form-control inputNumber Resultados" id="Calorias" name="Calorias" type="text" value="@Model.Calorias">
                                    @*<span class="field-validation-valid" data-valmsg-for="Calorias" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            <div class="form-group" id="divInterpretacion_calorias">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Interpretacion_calorias</label>
                                <div class="col-sm-8" data-field-id="Interpretacion_calorias" data-attribute="258381" data-field-name="@Resources.PacientesResources.Interpretacion_calorias">
                                    <select class="form-control Resultados" data-val="true" data-val-number="The field Interpretación must be a number." data-val-required="The Interpretación field is required." id="Interpretacion_calorias" name="Interpretacion_calorias">
                                        <option value=""></option>
                                        @if (varInterpretacion_Calorias_Interpretacion_calorias != null){ 
                                            foreach (var itemInterpretacion_calorias in varInterpretacion_Calorias_Interpretacion_calorias)
                                            {
                                                if (itemInterpretacion_calorias.Value == Convert.ToString(Model.Interpretacion_calorias))
                                                {
                                                    <option value="@itemInterpretacion_calorias.Value" selected>@itemInterpretacion_calorias.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@itemInterpretacion_calorias.Value">@itemInterpretacion_calorias.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                    @*<span class="field-validation-valid" data-valmsg-for="Interpretacion_calorias" data-valmsg-replace="true"></span>*@
                                </div>
								@if (PermissionHelper.GetRoleObjectPermission(Convert.ToInt32(Spartane.Web.SessionHelper.Role), 0, 0, 258381).New)
                                {                        
                                <div class="col-sm-1 abm-icons">
                                    <a id="Estado_New" onclick="GetCatalogPopup('Interpretacion_Calorias', 'Interpretacion_calorias');" href="#"><i class="glyphicon glyphicon-plus"></i></a>
                                </div>
                                }
                            </div>
                            <div class="form-group" id="divObservaciones">
                                <label class="col-sm-2 control-label">@Resources.PacientesResources.Observaciones</label>
                                <div class="col-sm-8" data-field-id="Observaciones" data-attribute="257833" data-field-name="@Resources.PacientesResources.Observaciones">
                                    <textarea id="Observaciones" name="Observaciones" class="form-control Resultados" rows="4" cols="50">@Model.Observaciones</textarea>
                                    @*<span class="field-validation-valid" data-valmsg-for="Observaciones" data-valmsg-replace="true"></span>*@
                                </div>
                            </div>
                            </div>
                                </div>


                            <div id="tabSuscripcion" class="tab-pane">
                                <div class="panel-body">
                            <div id="divSuscripciones">
                            <div class="ibox-title">
                                <h5>@Resources.PacientesResources.Suscripciones</h5>
                                <div class="ibox-tools">
                                </div>
                            </div>
                            <div class="ibox-content">
                                <div class="">
									@if (permissionDetalle_Suscripciones_Paciente.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_Suscripciones_PacientefnClickAddRow();" href="javascript:void(0);" title="@Resources.Resources.AddNewRow" class="Detalle_Suscripciones_PacienteAddRow btn btn-primary">
                                            <i class="glyphicon glyphicon-plus"></i>
                                        </a>
                                    }
                                    <button onclick="PacientesGetBusinessRule('', 'Al Guardar o al Eliminar una Row', '258440')" type="button" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton" data-toggle="modal" data-target="#PacientesBusinessRule-form">
                                        <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleToCreateGrid">
                                            <i class="fa fa-cogs fa-spin"></i>
                                        </a>
                                    </button>
									@if (permissionDetalle_Suscripciones_Paciente.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_Suscripciones_PacientefnOpenAddRowPopUp();" data-toggle="modal" title="@Resources.Resources.AddNewRow" data-target="#AddDetalle_Suscripciones_Paciente-form" data-backdrop="static" data-keyboard="false" class="btn_mrpopup btn btn-primary">
                                            <i class="glyphicon glyphicon-new-window"></i>
                                        </a>
                                    }  
                                </div>

                                <br />

                                <div style='overflow-x: auto;'>
                                    <table class="table table-striped table-bordered table-hover childValidateTable" id="Detalle_Suscripciones_PacienteGrid">
                                        <thead>
                                            <tr>
                                                <th class="ActionHeader"><span>@Resources.Resources.Actions</span></th>


                                                <th class="SuscripcionHeader"><span>
<button type="button" data-attribute="258410" data-field-id="Detalle_Suscripciones_PacienteSuscripcion" data-field-name="@Resources.Detalle_Suscripciones_PacienteResources.Suscripcion" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Suscripciones_PacienteResources.Suscripcion">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Suscripciones_PacienteResources.Suscripcion</span></th>
                                                <th class="Fecha_de_inicioHeader"><span>
<button type="button" data-attribute="258412" data-field-id="Detalle_Suscripciones_PacienteFecha_de_inicio" data-field-name="@Resources.Detalle_Suscripciones_PacienteResources.Fecha_de_inicio" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Suscripciones_PacienteResources.Fecha_de_inicio">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Suscripciones_PacienteResources.Fecha_de_inicio</span></th>
                                                <th class="Fecha_finHeader"><span>
<button type="button" data-attribute="258413" data-field-id="Detalle_Suscripciones_PacienteFecha_fin" data-field-name="@Resources.Detalle_Suscripciones_PacienteResources.Fecha_fin" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Suscripciones_PacienteResources.Fecha_fin">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Suscripciones_PacienteResources.Fecha_fin</span></th>
                                                <th class="Nombre_de_la_SuscripcionHeader"><span>
<button type="button" data-attribute="258414" data-field-id="Detalle_Suscripciones_PacienteNombre_de_la_Suscripcion" data-field-name="@Resources.Detalle_Suscripciones_PacienteResources.Nombre_de_la_Suscripcion" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Suscripciones_PacienteResources.Nombre_de_la_Suscripcion">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Suscripciones_PacienteResources.Nombre_de_la_Suscripcion</span></th>
                                                <th class="CostoHeader"><span>
<button type="button" data-attribute="258416" data-field-id="Detalle_Suscripciones_PacienteCosto" data-field-name="@Resources.Detalle_Suscripciones_PacienteResources.Costo" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Suscripciones_PacienteResources.Costo">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Suscripciones_PacienteResources.Costo</span></th>
                                                <th class="EstatusHeader"><span>
<button type="button" data-attribute="258417" data-field-id="Detalle_Suscripciones_PacienteEstatus" data-field-name="@Resources.Detalle_Suscripciones_PacienteResources.Estatus" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Suscripciones_PacienteResources.Estatus">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Suscripciones_PacienteResources.Estatus</span></th>

                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                            </div>
                            <div id="divPagos">
                            <div class="ibox-title">
                                <h5>@Resources.PacientesResources.Pagos</h5>
                                <div class="ibox-tools">
                                </div>
                            </div>
                            <div class="ibox-content">
                                <div class="">
									@if (permissionDetalle_Pagos_Paciente.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_Pagos_PacientefnClickAddRow();" href="javascript:void(0);" title="@Resources.Resources.AddNewRow" class="Detalle_Pagos_PacienteAddRow btn btn-primary">
                                            <i class="glyphicon glyphicon-plus"></i>
                                        </a>
                                    }
                                    <button onclick="PacientesGetBusinessRule('', 'Al Guardar o al Eliminar una Row', '258441')" type="button" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton" data-toggle="modal" data-target="#PacientesBusinessRule-form">
                                        <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleToCreateGrid">
                                            <i class="fa fa-cogs fa-spin"></i>
                                        </a>
                                    </button>
									@if (permissionDetalle_Pagos_Paciente.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_Pagos_PacientefnOpenAddRowPopUp();" data-toggle="modal" title="@Resources.Resources.AddNewRow" data-target="#AddDetalle_Pagos_Paciente-form" data-backdrop="static" data-keyboard="false" class="btn_mrpopup btn btn-primary">
                                            <i class="glyphicon glyphicon-new-window"></i>
                                        </a>
                                    }  
                                </div>

                                <br />

                                <div style='overflow-x: auto;'>
                                    <table class="table table-striped table-bordered table-hover childValidateTable" id="Detalle_Pagos_PacienteGrid">
                                        <thead>
                                            <tr>
                                                <th class="ActionHeader"><span>@Resources.Resources.Actions</span></th>


                                                <th class="SuscripcionHeader"><span>
<button type="button" data-attribute="258420" data-field-id="Detalle_Pagos_PacienteSuscripcion" data-field-name="@Resources.Detalle_Pagos_PacienteResources.Suscripcion" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_PacienteResources.Suscripcion">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_PacienteResources.Suscripcion</span></th>
                                                <th class="Fecha_de_SuscripcionHeader"><span>
<button type="button" data-attribute="258437" data-field-id="Detalle_Pagos_PacienteFecha_de_Suscripcion" data-field-name="@Resources.Detalle_Pagos_PacienteResources.Fecha_de_Suscripcion" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_PacienteResources.Fecha_de_Suscripcion">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_PacienteResources.Fecha_de_Suscripcion</span></th>
                                                <th class="Fecha_Limite_de_PagoHeader"><span>
<button type="button" data-attribute="258422" data-field-id="Detalle_Pagos_PacienteFecha_Limite_de_Pago" data-field-name="@Resources.Detalle_Pagos_PacienteResources.Fecha_Limite_de_Pago" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_PacienteResources.Fecha_Limite_de_Pago">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_PacienteResources.Fecha_Limite_de_Pago</span></th>
                                                <th class="Forma_de_PagoHeader"><span>
<button type="button" data-attribute="258424" data-field-id="Detalle_Pagos_PacienteForma_de_Pago" data-field-name="@Resources.Detalle_Pagos_PacienteResources.Forma_de_Pago" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_PacienteResources.Forma_de_Pago">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_PacienteResources.Forma_de_Pago</span></th>
                                                <th class="Fecha_de_PagoHeader"><span>
<button type="button" data-attribute="258425" data-field-id="Detalle_Pagos_PacienteFecha_de_Pago" data-field-name="@Resources.Detalle_Pagos_PacienteResources.Fecha_de_Pago" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_PacienteResources.Fecha_de_Pago">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_PacienteResources.Fecha_de_Pago</span></th>
                                                <th class="EstatusHeader"><span>
<button type="button" data-attribute="258426" data-field-id="Detalle_Pagos_PacienteEstatus" data-field-name="@Resources.Detalle_Pagos_PacienteResources.Estatus" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_PacienteResources.Estatus">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_PacienteResources.Estatus</span></th>

                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                            </div>
                            <div id="divPagos_OpenPay">
                            <div class="ibox-title">
                                <h5>@Resources.PacientesResources.Pagos_OpenPay</h5>
                                <div class="ibox-tools">
                                </div>
                            </div>
                            <div class="ibox-content">
                                <div class="">
									@if (permissionDetalle_Pagos_Pacientes_OpenPay.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_Pagos_Pacientes_OpenPayfnClickAddRow();" href="javascript:void(0);" title="@Resources.Resources.AddNewRow" class="Detalle_Pagos_Pacientes_OpenPayAddRow btn btn-primary">
                                            <i class="glyphicon glyphicon-plus"></i>
                                        </a>
                                    }
                                    <button onclick="PacientesGetBusinessRule('', 'Al Guardar o al Eliminar una Row', '260742')" type="button" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton" data-toggle="modal" data-target="#PacientesBusinessRule-form">
                                        <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleToCreateGrid">
                                            <i class="fa fa-cogs fa-spin"></i>
                                        </a>
                                    </button>
									@if (permissionDetalle_Pagos_Pacientes_OpenPay.New && !ViewBag.Consult)
                                    {
                                        <a onclick="Detalle_Pagos_Pacientes_OpenPayfnOpenAddRowPopUp();" data-toggle="modal" title="@Resources.Resources.AddNewRow" data-target="#AddDetalle_Pagos_Pacientes_OpenPay-form" data-backdrop="static" data-keyboard="false" class="btn_mrpopup btn btn-primary">
                                            <i class="glyphicon glyphicon-new-window"></i>
                                        </a>
                                    }  
                                </div>

                                <br />

                                <div style='overflow-x: auto;'>
                                    <table class="table table-striped table-bordered table-hover childValidateTable" id="Detalle_Pagos_Pacientes_OpenPayGrid">
                                        <thead>
                                            <tr>
                                                <th class="ActionHeader"><span>@Resources.Resources.Actions</span></th>


                                                <th class="Usuario_que_RegistraHeader"><span>
<button type="button" data-attribute="260734" data-field-id="Detalle_Pagos_Pacientes_OpenPayUsuario_que_Registra" data-field-name="@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Usuario_que_Registra" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Usuario_que_Registra">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Usuario_que_Registra</span></th>
                                                <th class="Fecha_de_PagoHeader"><span>
<button type="button" data-attribute="260735" data-field-id="Detalle_Pagos_Pacientes_OpenPayFecha_de_Pago" data-field-name="@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Fecha_de_Pago" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Fecha_de_Pago">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Fecha_de_Pago</span></th>
                                                <th class="Hora_de_PagoHeader"><span>
<button type="button" data-attribute="260736" data-field-id="Detalle_Pagos_Pacientes_OpenPayHora_de_Pago" data-field-name="@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Hora_de_Pago" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Hora_de_Pago">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Hora_de_Pago</span></th>
                                                <th class="TokenIDHeader"><span>
<button type="button" data-attribute="260737" data-field-id="Detalle_Pagos_Pacientes_OpenPayTokenID" data-field-name="@Resources.Detalle_Pagos_Pacientes_OpenPayResources.TokenID" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_Pacientes_OpenPayResources.TokenID">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_Pacientes_OpenPayResources.TokenID</span></th>
                                                <th class="ImporteHeader"><span>
<button type="button" data-attribute="260738" data-field-id="Detalle_Pagos_Pacientes_OpenPayImporte" data-field-name="@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Importe" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Importe">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Importe</span></th>
                                                <th class="ConceptoHeader"><span>
<button type="button" data-attribute="260739" data-field-id="Detalle_Pagos_Pacientes_OpenPayConcepto" data-field-name="@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Concepto" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Concepto">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Concepto</span></th>
                                                <th class="Forma_de_pagoHeader"><span>
<button type="button" data-attribute="260740" data-field-id="Detalle_Pagos_Pacientes_OpenPayForma_de_pago" data-field-name="@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Forma_de_pago" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Forma_de_pago">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Forma_de_pago</span></th>
                                                <th class="AutorizacionHeader"><span>
<button type="button" data-attribute="260741" data-field-id="Detalle_Pagos_Pacientes_OpenPayAutorizacion" data-field-name="@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Autorizacion" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Autorizacion">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Autorizacion</span></th>
                                                <th class="NombreHeader"><span>
<button type="button" data-attribute="260755" data-field-id="Detalle_Pagos_Pacientes_OpenPayNombre" data-field-name="@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Nombre" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Nombre">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Nombre</span></th>
                                                <th class="ApellidosHeader"><span>
<button type="button" data-attribute="260756" data-field-id="Detalle_Pagos_Pacientes_OpenPayApellidos" data-field-name="@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Apellidos" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Apellidos">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Apellidos</span></th>
                                                <th class="TelefonoHeader"><span>
<button type="button" data-attribute="260757" data-field-id="Detalle_Pagos_Pacientes_OpenPayTelefono" data-field-name="@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Telefono" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Telefono">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Telefono</span></th>
                                                <th class="EmailHeader"><span>
<button type="button" data-attribute="260758" data-field-id="Detalle_Pagos_Pacientes_OpenPayEmail" data-field-name="@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Email" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Email">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Email</span></th>
                                                <th class="DeviceIDHeader"><span>
<button type="button" data-attribute="260759" data-field-id="Detalle_Pagos_Pacientes_OpenPayDeviceID" data-field-name="@Resources.Detalle_Pagos_Pacientes_OpenPayResources.DeviceID" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_Pacientes_OpenPayResources.DeviceID">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_Pacientes_OpenPayResources.DeviceID</span></th>
                                                <th class="UsaPuntosHeader"><span>
<button type="button" data-attribute="260760" data-field-id="Detalle_Pagos_Pacientes_OpenPayUsaPuntos" data-field-name="@Resources.Detalle_Pagos_Pacientes_OpenPayResources.UsaPuntos" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_Pacientes_OpenPayResources.UsaPuntos">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_Pacientes_OpenPayResources.UsaPuntos</span></th>
                                                <th class="PuntosIDHeader"><span>
<button type="button" data-attribute="260761" data-field-id="Detalle_Pagos_Pacientes_OpenPayPuntosID" data-field-name="@Resources.Detalle_Pagos_Pacientes_OpenPayResources.PuntosID" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_Pacientes_OpenPayResources.PuntosID">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_Pacientes_OpenPayResources.PuntosID</span></th>
                                                <th class="EstatusHeader"><span>
<button type="button" data-attribute="260762" data-field-id="Detalle_Pagos_Pacientes_OpenPayEstatus" data-field-name="@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Estatus" data-toggle="modal" data-target="#PacientesBusinessRule-form" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton btnPopupBusinessRules">
                                                            <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleFor@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Estatus">
                                                                <i class="fa fa-cogs fa-spin"></i>
                                                            </a>
                                                        </button>@Resources.Detalle_Pagos_Pacientes_OpenPayResources.Estatus</span></th>

                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                            </div>
                            </div>
                                </div>

				</div>	
                    <br />
                            <div class="form-actions fluid">
                                <input type="hidden" value="@Model.Folio" id="ReferenceFolio" />
                                <input type="hidden" value="@Model.Folio" name="Folio" id="FolioId" />
                                <input type="hidden" value="@ViewBag.Operation" name="Operation" id="Operation" />
                                @if (!ViewBag.Consult)
                                {
                                    <input type="button" value="@Resources.Resources.Guardar" id="PacientesGuardar" class="btn btn-w-m btn-primary btn_save" onclick="return checkClientValidate('PacientesCreateForm');"  />
									<button onclick="PacientesGetBusinessRule('', 'Al Guardar o al Cerrar la Pantalla', '2')" type="button" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton" data-toggle="modal" data-target="#PacientesBusinessRule-form">
                                        <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleBeforeSave">
                                            <i class="fa fa-cogs fa-spin"></i>
                                        </a>
                                    </button>                                    

                                    <input type="button" value="@Resources.Resources.GuardarNuevo" id="PacientesGuardarYNuevo" onclick="return checkClientValidate('PacientesCreateForm');" data-bind="    click: saveAndNew" class="btn btn-w-m btn-success btn_saveandnew"  />
                                    <input type="button" value="@Resources.Resources.GuardarCopia" id="PacientesGuardarYCopia" onclick="return checkClientValidate('PacientesCreateForm');" data-bind="    click: saveAndNew" class="btn btn-w-m btn-success btn_saveandcopy"  />
                                    if (permission.Configure)
                                    {
                                        <a title="@Resources.Resources.Configure" id="ConfigureSave" name="ConfigureSave" onclick="SaveElementAttributes()" class="btn btn-success btn-configure">@Resources.Resources.Configure</a>
                                    }
                                }

                                <input type="hidden" id="hdnConfigureType" />
								<input type="hidden" id="hdnPacientesBusinessRuleFieldId" />
                                <input type="hidden" id="hdnPacientesBusinessRuleFieldName" />
                                <input type="hidden" id="hdnPacientesBusinessRuleAttribute" />

                                <input type="button" value="@Resources.Resources.Cancelar" id="PacientesCancelar" name="PacientesCancelar" class="btn btn-danger noConsult btn_cancelar" data-bind="click: cancel" tabindex="16" />

                                <button onclick="PacientesGetBusinessRule('', 'Al Cancelar', '4')" type="button" class="btn btn-info btn-lg displayBusinessProperyButton displayRuleButton" data-toggle="modal" data-target="#PacientesBusinessRule-form">
                                    <a class="top" title="" data-placement="right" data-toggle="tooltip" href="#" data-original-title="@Resources.Resources.BusinessRuleToBegin">
                                        <i class="fa fa-cogs fa-spin"></i>
                                    </a>
                                </button>
                            </div>
						</div>
					</div>
                }
        </div>
    </div>
</div>
<input id="hdnApplicationDirectory" type="hidden" value="@Url.Content("~/")" />

@section Styles {
<link href="@Url.Content("~/Content/BootstrapDatePicker/bootstrap-datetimepicker.min.css")" rel="stylesheet" />
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/select2Styles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
<style>
    .dataTables_filter {
        display: none;
    }
    .select2-results{background-color:#fff;}
    .select2-container .select2-dropdown{height:auto !important;}

    div.dataTables_info {
        display: inline-block;
        float: right;
    }
        /*i {
        font-size: 25px !important;
        display: block;
        color: #676a6c;
        margin-left: 6px;
        margin-right: 6px;
    }*/

    .fullWidth {
        width: 100%;
    }
</style>
}

<script type="text/javascript" src="~/Uploads/Scripts/Pacientes.js?v=@DateTime.Now.ToString("ddMMyyyyhhmmss")"></script>
<script type="text/javascript" src="~/Scripts/Custom/PacientesGeneral.js?v=@DateTime.Now.ToString("ddMMyyyyhhmmss")"></script>
<script type="text/javascript" src="~/Uploads/Scripts/Rules/PacientesCreateRules.js?v=@DateTime.Now.ToString("ddMMyyyyhhmmss")"></script>
<script src="~/Scripts/plugins/chosen/chosen.jquery.js"></script>
<!-- CODMANINI-ADD -->
<script type="text/javascript" src="https://js.openpay.mx/openpay.v1.min.js"></script>
<script type="text/javascript" src="https://js.openpay.mx/openpay-data.v1.min.js"></script>
<!-- CODMANFIN-ADD -->

@section Scripts {


    <script type="text/javascript">
        


	function GetTraduction(text) {
         switch (text.toLowerCase()) {
            case 'edit':
                return "@Resources.Resources.Edit";          
            case 'delete':
                return "@Resources.Resources.Delete";               
            case 'required':
                return "@Resources.Resources.Required";              
            case 'notrequired':
                return "@Resources.Resources.NotRequired";           
            case 'enabled':
                return "@Resources.Resources.Enabled";         
            case 'disabled':
                return "@Resources.Resources.Disabled";           
            case 'visible':
                return "@Resources.Resources.Visible";            
            case 'botvisible':
                return "@Resources.Resources.InVisible";
            case 'messagednoinvisible':
                return "@Resources.Resources.messagedNoInVisible";
            case 'messagednoreadonly':
                return "@Resources.Resources.messagedNoReadOnly";
            case 'defaultvalue':
                return "@Resources.Resources.DefaultValue";
            case 'helptext':
                return "@Resources.Resources.HelpText";                     
            default:
                return "";
        }
    }
	
	    var isPartial = ('@ViewBag.IsPartial' == 'True');
        var isMR = ('@ViewBag.isMR' == 'True');
        var nameMR = '@ViewBag.nameMR';
		var nameAttribute = '@ViewBag.nameAttribute';
		var Tab_Datos_Generales = true;

		var Tab_Padecimientos = true;

		var Tab_Antecedentes = true;

		var Tab_Mediciones_Iniciales = true;

		var Tab_Datos_Ginecologicos = true;

		var Tab_Historia_Nutricional = true;

		var Tab_Estilo_de_Vida = true;

		var Tab_Resultados = true;

		var Tab_Suscripcion = true;


        $(document).ready(function () {
            $('#ObjectId').val('44337');
		                 
            GetDetalle_de_Padecimientos_PadecimientosItem();
            GetDetalle_de_Padecimientos_Tiempo_PadecimientoItem();
            GetDetalle_de_Padecimientos_Respuesta_LogicaItem();

            GetDetalle_de_Padecimientos_Estatus_PadecimientoItem();
           
              showDetalle_de_PadecimientosGrid(null);
              
            GetDetalle_Antecedentes_Familiares_PadecimientosItem();
            GetDetalle_Antecedentes_Familiares_ParentescoItem();
           
              showDetalle_Antecedentes_FamiliaresGrid(null);
              
            GetDetalle_Antecedentes_No_Patologicos_SustanciasItem();
            GetDetalle_Antecedentes_No_Patologicos_Frecuencia_SustanciasItem();

           
              showDetalle_Antecedentes_No_PatologicosGrid(null);
              
            GetDetalle_Examenes_Laboratorio_Indicadores_LaboratorioItem();





           
              showDetalle_Examenes_LaboratorioGrid(null);
              


           
              showDetalle_Terapia_HormonalGrid(null);
            GetAlergias_MS_Exclusion_Ingredientes_PacienteItem();

              
            GetDetalle_Preferencia_Bebidas_BebidasItem();
            GetDetalle_Preferencia_Bebidas_Rango_Consumo_BebidasItem();
           
              showDetalle_Preferencia_BebidasGrid(null);
              
            GetDetalle_Suscripciones_Paciente_Planes_de_SuscripcionItem();




            GetDetalle_Suscripciones_Paciente_Estatus_de_SuscripcionItem();
           
              showDetalle_Suscripciones_PacienteGrid(null);
              
            GetDetalle_Pagos_Paciente_Planes_de_SuscripcionItem();


            GetDetalle_Pagos_Paciente_Formas_de_PagoItem();

            GetDetalle_Pagos_Paciente_Estatus_de_PagoItem();
           
              showDetalle_Pagos_PacienteGrid(null);
              
            GetDetalle_Pagos_Pacientes_OpenPay_Spartan_UserItem();





            GetDetalle_Pagos_Pacientes_OpenPay_Formas_de_PagoItem();








            GetDetalle_Pagos_Pacientes_OpenPay_Estatus_de_PagoItem();
           
              showDetalle_Pagos_Pacientes_OpenPayGrid(null);

		   
			
             @if(ViewBag.IsNew)
            { 
                <text>$('input:checkbox').prop('checked', false);</text>
            }
			else
            {
                <text>
				if (Tab_Datos_Generales)
					Fill_Datos_Generales();

				if (Tab_Padecimientos)
					Fill_Padecimientos();

				if (Tab_Antecedentes)
					Fill_Antecedentes();

				if (Tab_Mediciones_Iniciales)
					Fill_Mediciones_Iniciales();

				if (Tab_Datos_Ginecologicos)
					Fill_Datos_Ginecologicos();

				if (Tab_Historia_Nutricional)
					Fill_Historia_Nutricional();

				if (Tab_Estilo_de_Vida)
					Fill_Estilo_de_Vida();

				if (Tab_Resultados)
					Fill_Resultados();

				if (Tab_Suscripcion)
					Fill_Suscripcion();


                </text>
             }
             EjecutarValidacionesAlComienzo();
                         $('#Fecha_de_Registro').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
                format: "@ConfigurationProperty.DateFormatDatePicker"
            });
            $('#Hora_de_Registro').clockpicker();
            $('#Fecha_de_nacimiento').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
                format: "@ConfigurationProperty.DateFormatDatePicker"
            });
            $('#Fecha_Climaterio').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
                format: "@ConfigurationProperty.DateFormatDatePicker"
            });


            initiateUIControls();
			$('a').tooltip();
			$('.loading').css('display', 'none');
			

        });

        var Detalle_de_PadecimientosinsertRowCurrentIndex = -1;
        var Detalle_de_PadecimientosDataDataTable;
        function getDetalle_de_PadecimientosData() {
            $.ajax({
                url: "@Url.Content("~/Frontal/Pacientes/GetDetalle_de_Padecimientos")" + "?draw=1&start=1&length=2147483647" + ($("#ReferenceFolio").val() != "" ? "&RelationId=" + $("#ReferenceFolio").val() : ""),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                    Detalle_de_PadecimientosDataDataTable = result.data;
                    showDetalle_de_PadecimientosGrid(result.data);
                    $('#Detalle_de_PadecimientosGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_de_PadecimientosGrid .gridDatePicker').attr("readonly", "");
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
        function Detalle_de_PadecimientosGetUpdateRowControls(data, nameOfTable, rowIndex) {

            var columnData = [];
            var counter = 0;
            var inputData = "<input type='text' class='fullWidth form-control' />";

           columnData[counter++] = $($(GetDetalle_de_Padecimientos_PadecimientosDropDown()).val(data.Padecimiento)).addClass('Padecimiento inputNumber').attr('id', nameOfTable + 'Padecimiento' + rowIndex).attr('data-field', 'Padecimiento').after($.parseHTML(addNew('Detalle_de_Padecimientos', 'Padecimientos','Padecimiento', 257617)));
           columnData[counter++] = $($(GetDetalle_de_Padecimientos_Tiempo_PadecimientoDropDown()).val(data.Tiempo_con_el_diagnostico)).addClass('Tiempo_con_el_diagnostico inputNumber').attr('id', nameOfTable + 'Tiempo_con_el_diagnostico' + rowIndex).attr('data-field', 'Tiempo_con_el_diagnostico').after($.parseHTML(addNew('Detalle_de_Padecimientos', 'Tiempo_Padecimiento','Tiempo_con_el_diagnostico', 257618)));
           columnData[counter++] = $($(GetDetalle_de_Padecimientos_Respuesta_LogicaDropDown()).val(data.Intervencion_quirurgica)).addClass('Intervencion_quirurgica inputNumber').attr('id', nameOfTable + 'Intervencion_quirurgica' + rowIndex).attr('data-field', 'Intervencion_quirurgica').after($.parseHTML(addNew('Detalle_de_Padecimientos', 'Respuesta_Logica','Intervencion_quirurgica', 259119)));
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Tratamiento)).addClass('Tratamiento').attr('id', nameOfTable + 'Tratamiento' + rowIndex).attr('data-field', 'Tratamiento');
           columnData[counter++] = $($(GetDetalle_de_Padecimientos_Estatus_PadecimientoDropDown()).val(data.Estado_actual)).addClass('Estado_actual inputNumber').attr('id', nameOfTable + 'Estado_actual' + rowIndex).attr('data-field', 'Estado_actual').after($.parseHTML(addNew('Detalle_de_Padecimientos', 'Estatus_Padecimiento','Estado_actual', 257620)));

            return columnData;
        }



        function GetFileInfo(fileData, fileUploadData) {

            var $div = $("<div>");
            if (fileUploadData != null && fileUploadData.files.length > 0) {

                $div.append("<label>" + fileUploadData.files[0].name + "</label>");
                //<i class="fa fa-times-circle" id='removeFileAttachment'>
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;

            } else if (fileUploadData != null) {
                return $.parseHTML(GetFileUploader());
            } else {
                $div.append("<label>" + fileData.FileName + "</label>");
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;
            }
        }

        var removedDetalle_de_PadecimientosData = [];
        function Detalle_de_PadecimientosDeleteRow(rowIndex, row) {
            var rowIndexTable = Detalle_de_PadecimientosTable.fnGetPosition($(row).parent().parent()[0]);
            var permission = {            
                 Delete: '@permissionDetalle_de_Padecimientos.Delete' == 'True'
            };
            if (!permission.Delete || isConsultMode)
                return;            
            if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
              if (EjecutarValidacionesAlEliminarMRDetalle_de_Padecimientos('Detalle_de_Padecimientos_', '_' + rowIndex)) {
                var prevData = Detalle_de_PadecimientosTable.fnGetData(rowIndexTable );
                removedDetalle_de_PadecimientosData.push(prevData);
                Detalle_de_PadecimientosTable.fnDeleteRow(rowIndexTable );
				showDetalle_de_PadecimientosGrid(Detalle_de_PadecimientosTable.fnGetData());
              }
            }
			initiateUIControls();
        }

        function Detalle_de_PadecimientosrowCreationGrid(row, data, index) {
            var permission =  {            
                 Edit: '@permissionDetalle_de_Padecimientos.Edit' == 'True',
                 Delete: '@permissionDetalle_de_Padecimientos.Delete' == 'True'
            };
            setDetalle_de_PadecimientosValidation();
            var Detalle_de_PadecimientosRowElement = "Detalle_de_Padecimientos_" + index.toString();
            $(row).addClass(Detalle_de_PadecimientosRowElement);
            var nameOfTable='Detalle_de_Padecimientos_';
            var rowIndex = '_' + index;
            Detalle_de_PadecimientosinsertRowCurrentIndex = index;

            row.innerHTML = "";

            if (data.IsInsertRow) {

                if (row.childNodes.length != 0) {
                    for (var i = 0; i < row.childNodes.length; i++) {
                        row.childNodes[i].remove();
                    }
                }
                var controls = GetInsertDetalle_de_PadecimientosRowControls(index);
                var actionColInsert = $('<td>');

                var abc = "if(dynamicFieldValidation('" + Detalle_de_PadecimientosRowElement + "')){ Detalle_de_PadecimientosInsertRow(" + index + "); }";
                var insertRowHTML = '<a  data-toggle="tooltip" title="Confirmar Registro" onclick="' + abc + '">';
                $('<i class="fa fa-check">').appendTo($(insertRowHTML).appendTo(actionColInsert));
				$('<i class="fa fa-times">').appendTo($("<a data-toggle='tooltip' title='Cancelar Registro' onclick='Detalle_de_PadecimientosCancelRow(" + index + ")'>").appendTo(actionColInsert));
                actionColInsert.appendTo(row);

                for (i = 0; i < controls.length; i++) {
					var idHeader = $(controls[i]).data('field') + 'Header';
					if($(controls[i]).length > 1){
						idHeader = $($(controls[i])[1]).data('field') + 'Header';
					}					

					var classe = ($('#Detalle_de_PadecimientosGrid .' + idHeader).hasClass('dt-right') ? "dt-right" : "") + $('#Detalle_de_PadecimientosGrid .' + idHeader ).css('display') == 'none' ? " hide" : "";
				   
					if ($(controls[i]).next().length > 0) {
					    var div = $(controls[i]).next();
					    $('<td class="' + classe + '">').append($(controls[i])).append(div).appendTo(row);
					}else
					    $(controls[i]).appendTo($('<td class="' + classe + '">').appendTo(row));
					
                }
                $('#Detalle_de_PadecimientosGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('#Detalle_de_PadecimientosGrid .gridDatePicker').attr("readonly", "");
                return;
            }

            var actionCol = $('<td>');
			var edit = "<a title='@Resources.Resources.Edit' class='edit-MR' onclick='Detalle_de_PadecimientosEditRow(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                edit = "";
            var editPopUp = "<a title='@Resources.Resources.Edit' class='edit-popup-MR' data-toggle='modal' data-target='#AddDetalle_de_Padecimientos-form' onclick='Detalle_de_PadecimientosEditRowPopup(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                editPopUp = "";
            var eliminar = "<a title='@Resources.Resources.Delete' class='eliminar-MR' onclick='Detalle_de_PadecimientosDeleteRow(" + index + ", this)'>";
            if (!permission.Delete || isConsultMode)
                eliminar = "";
            $('<i class="fa fa-pencil">').appendTo($(edit).appendTo(actionCol));
            //$('<i class="fa fa-edit">').appendTo($(editPopUp).appendTo(actionCol));
            $('<i class="fa fa-trash-o">').appendTo($(eliminar).appendTo(actionCol));
			if ($('.Action' + 'Header').css('display') != 'none')
				actionCol.appendTo(row);

            if ($('.Padecimiento' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Padecimiento'+rowIndex+'">').text(GetDetalle_de_Padecimientos_PadecimientosName(data.Padecimiento)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Padecimiento'+rowIndex+'">').text(GetDetalle_de_Padecimientos_PadecimientosName(data.Padecimiento)).appendTo(row);
            if ($('.Tiempo_con_el_diagnostico' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Tiempo_con_el_diagnostico'+rowIndex+'">').text(GetDetalle_de_Padecimientos_Tiempo_PadecimientoName(data.Tiempo_con_el_diagnostico)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Tiempo_con_el_diagnostico'+rowIndex+'">').text(GetDetalle_de_Padecimientos_Tiempo_PadecimientoName(data.Tiempo_con_el_diagnostico)).appendTo(row);
            if ($('.Intervencion_quirurgica' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Intervencion_quirurgica'+rowIndex+'">').text(GetDetalle_de_Padecimientos_Respuesta_LogicaName(data.Intervencion_quirurgica)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Intervencion_quirurgica'+rowIndex+'">').text(GetDetalle_de_Padecimientos_Respuesta_LogicaName(data.Intervencion_quirurgica)).appendTo(row);
            if ($('.Tratamiento' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Tratamiento'+rowIndex+'">').text(data.Tratamiento).appendTo(row);
            else 
                $('<td style="display:none;" id="'+nameOfTable+'Tratamiento'+rowIndex+'">').text(data.Tratamiento).appendTo(row);
            if ($('.Estado_actual' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Estado_actual'+rowIndex+'">').text(GetDetalle_de_Padecimientos_Estatus_PadecimientoName(data.Estado_actual)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Estado_actual'+rowIndex+'">').text(GetDetalle_de_Padecimientos_Estatus_PadecimientoName(data.Estado_actual)).appendTo(row);

        }

        var Detalle_de_PadecimientosTable;
        function showDetalle_de_PadecimientosGrid(dataSet) {
            //removedDetalle_de_PadecimientosData = [];
            Detalle_de_PadecimientosTable = $('#Detalle_de_PadecimientosGrid').dataTable({
                dom: '<"html5buttons"B>lTgitp',
                buttons: [
                ],
                "createdRow": Detalle_de_PadecimientosrowCreationGrid,
                "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                data: dataSet,
                "columns": [
                    { "data": null, 'visible': true, "orderable": false },

                    { "data": "Padecimiento", "orderable": false },
                    { "data": "Tiempo_con_el_diagnostico", "orderable": false },
                    { "data": "Intervencion_quirurgica", "orderable": false },
                    { "data": "Tratamiento", "orderable": false },
                    { "data": "Estado_actual", "orderable": false },

                ],
                "order": [[0, "asc"]],
                "language": {
                    "lengthMenu": "@Resources.Resources.Display" + " _MENU_ " + "@Resources.Resources.RecordsPerPage",
                    "zeroRecords": "@Resources.Resources.NothingFound",
                    "info": "@Resources.Resources.ShowingPages" + " _PAGE_ " + "@Resources.Resources.of" + " _PAGES_",
                    "infoEmpty": "@Resources.Resources.NoRecords",
                    "infoFiltered": "(" + "@Resources.Resources.FilteredFrom" + " _MAX_ " + "@Resources.Resources.TotalRecords" + ")",
                    "sSearch": "@Resources.Resources.Search",
                    "paginate": {
                        "previous": "@Resources.Resources.Previous",
                        "next": "@Resources.Resources.Next"
                    }
                },
				"bDestroy": true,
                "fnDrawCallback": function (settings) {
                    setDetalle_de_PadecimientosValidation();
                }
            }).on('init.dt', function (e, data) {
                $('a').tooltip();
            }).on('draw.dt', function () {
                $('#Detalle_de_PadecimientosGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('.gridDatePicker').inputmask("99-99-9999", { "placeholder": "dd-mm-yyyy" });
            });
        }


    var Detalle_de_Padecimientos_PadecimientosItems;
        function GetDetalle_de_Padecimientos_PadecimientosItem() {
            Detalle_de_Padecimientos_PadecimientosItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_de_Padecimientos_PadecimientosAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_de_Padecimientos_PadecimientosItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
    var Detalle_de_Padecimientos_Tiempo_PadecimientoItems;
        function GetDetalle_de_Padecimientos_Tiempo_PadecimientoItem() {
            Detalle_de_Padecimientos_Tiempo_PadecimientoItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_de_Padecimientos_Tiempo_PadecimientoAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_de_Padecimientos_Tiempo_PadecimientoItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
    var Detalle_de_Padecimientos_Respuesta_LogicaItems;
        function GetDetalle_de_Padecimientos_Respuesta_LogicaItem() {
            Detalle_de_Padecimientos_Respuesta_LogicaItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_de_Padecimientos_Respuesta_LogicaAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_de_Padecimientos_Respuesta_LogicaItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }

    var Detalle_de_Padecimientos_Estatus_PadecimientoItems;
        function GetDetalle_de_Padecimientos_Estatus_PadecimientoItem() {
            Detalle_de_Padecimientos_Estatus_PadecimientoItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_de_Padecimientos_Estatus_PadecimientoAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_de_Padecimientos_Estatus_PadecimientoItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }

        var Detalle_de_PadecimientosData = [];
        var Detalle_de_PadecimientosdeletedItem = [];
        var Detalle_de_PadecimientosDataMain = [];
        var Detalle_de_PadecimientosDataMainPages = [];
        var Detalle_de_PadecimientosnewItemCount = 0;
        var Detalle_de_PadecimientosmaxItemIndex = 0;
        var Detalle_de_PadecimientosDataMainInitialized = false;

        function SendDetalle_de_Padecimientos(callBack, FolioId) {
            Detalle_de_PadecimientosData = GetDetalle_de_PadecimientosFromDataTable();

            if (Detalle_de_PadecimientosData.length > 0 || $("#ReferenceFolio").val() != FolioId) {
                if ($("#ReferenceFolio").val() != "0" && FolioId ==null)
                    FolioId = $("#ReferenceFolio").val();                
                if ($("#ReferenceFolio").val() == '')
                    $("#ReferenceFolio").val('0');
                $.ajax({
                    url: '@Url.Content("~/Frontal/Pacientes/PostDetalle_de_Padecimientos?MasterId=")' + FolioId + "&referenceId=" + $("#ReferenceFolio").val(),
                    type: 'POST',
                    data: GetDetalle_de_Padecimientos(),
                    async: true,
                    success: function (result) {

                    },
                    error: function (result) {
                        showNotification("@Resources.Resources.ErrorContactingServer", "error");
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });
            } else {
                //showNotification("@Resources.Resources.SaveSuccess", "success");
                //callBack(FolioId);
            }
            return true;
        }

        function GetAddDetalle_de_PadecimientosPopup(currentRowIndex, mode, id) {

            $.ajax({
                url: "@Url.Action("AddDetalle_de_Padecimientos", "Detalle_de_Padecimientos")",
                type: "GET",
                async: false,
                data: { rowIndex: currentRowIndex, functionMode: mode, id: id },
                success: function (data) {
                    $(".AddDetalle_de_PadecimientosModal").html(data);
                },
                error: function () {

                }
            });

            @*$.get('@Url.Action("AddDetalle_de_Padecimientos", "Detalle_de_Padecimientos")', { rowIndex: currentRowIndex }, function (data) {
                $(".AddDetalle_de_PadecimientosModal").html(data);
            });*@
        }

        function ShowMessagePendingRowDetalle_de_Padecimientos()
        {
            //alert('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Detalle del padecimiento"))')
	    showNotification('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Detalle del padecimiento"))', "warning");
        }
        var Detalle_Antecedentes_FamiliaresinsertRowCurrentIndex = -1;
        var Detalle_Antecedentes_FamiliaresDataDataTable;
        function getDetalle_Antecedentes_FamiliaresData() {
            $.ajax({
                url: "@Url.Content("~/Frontal/Pacientes/GetDetalle_Antecedentes_Familiares")" + "?draw=1&start=1&length=2147483647" + ($("#ReferenceFolio").val() != "" ? "&RelationId=" + $("#ReferenceFolio").val() : ""),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                    Detalle_Antecedentes_FamiliaresDataDataTable = result.data;
                    showDetalle_Antecedentes_FamiliaresGrid(result.data);
                    $('#Detalle_Antecedentes_FamiliaresGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_Antecedentes_FamiliaresGrid .gridDatePicker').attr("readonly", "");
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
        function Detalle_Antecedentes_FamiliaresGetUpdateRowControls(data, nameOfTable, rowIndex) {

            var columnData = [];
            var counter = 0;
            var inputData = "<input type='text' class='fullWidth form-control' />";

           columnData[counter++] = $($(GetDetalle_Antecedentes_Familiares_PadecimientosDropDown()).val(data.Enfermedad)).addClass('Enfermedad inputNumber').attr('id', nameOfTable + 'Enfermedad' + rowIndex).attr('data-field', 'Enfermedad').after($.parseHTML(addNew('Detalle_Antecedentes_Familiares', 'Padecimientos','Enfermedad', 257759)));
           columnData[counter++] = $($(GetDetalle_Antecedentes_Familiares_ParentescoDropDown()).val(data.Parentesco)).addClass('Parentesco inputNumber').attr('id', nameOfTable + 'Parentesco' + rowIndex).attr('data-field', 'Parentesco').after($.parseHTML(addNew('Detalle_Antecedentes_Familiares', 'Parentesco','Parentesco', 257760)));

            return columnData;
        }



        function GetFileInfo(fileData, fileUploadData) {

            var $div = $("<div>");
            if (fileUploadData != null && fileUploadData.files.length > 0) {

                $div.append("<label>" + fileUploadData.files[0].name + "</label>");
                //<i class="fa fa-times-circle" id='removeFileAttachment'>
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;

            } else if (fileUploadData != null) {
                return $.parseHTML(GetFileUploader());
            } else {
                $div.append("<label>" + fileData.FileName + "</label>");
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;
            }
        }

        var removedDetalle_Antecedentes_FamiliaresData = [];
        function Detalle_Antecedentes_FamiliaresDeleteRow(rowIndex, row) {
            var rowIndexTable = Detalle_Antecedentes_FamiliaresTable.fnGetPosition($(row).parent().parent()[0]);
            var permission = {            
                 Delete: '@permissionDetalle_Antecedentes_Familiares.Delete' == 'True'
            };
            if (!permission.Delete || isConsultMode)
                return;            
            if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
              if (EjecutarValidacionesAlEliminarMRDetalle_Antecedentes_Familiares('Detalle_Antecedentes_Familiares_', '_' + rowIndex)) {
                var prevData = Detalle_Antecedentes_FamiliaresTable.fnGetData(rowIndexTable );
                removedDetalle_Antecedentes_FamiliaresData.push(prevData);
                Detalle_Antecedentes_FamiliaresTable.fnDeleteRow(rowIndexTable );
				showDetalle_Antecedentes_FamiliaresGrid(Detalle_Antecedentes_FamiliaresTable.fnGetData());
              }
            }
			initiateUIControls();
        }

        function Detalle_Antecedentes_FamiliaresrowCreationGrid(row, data, index) {
            var permission =  {            
                 Edit: '@permissionDetalle_Antecedentes_Familiares.Edit' == 'True',
                 Delete: '@permissionDetalle_Antecedentes_Familiares.Delete' == 'True'
            };
            setDetalle_Antecedentes_FamiliaresValidation();
            var Detalle_Antecedentes_FamiliaresRowElement = "Detalle_Antecedentes_Familiares_" + index.toString();
            $(row).addClass(Detalle_Antecedentes_FamiliaresRowElement);
            var nameOfTable='Detalle_Antecedentes_Familiares_';
            var rowIndex = '_' + index;
            Detalle_Antecedentes_FamiliaresinsertRowCurrentIndex = index;

            row.innerHTML = "";

            if (data.IsInsertRow) {

                if (row.childNodes.length != 0) {
                    for (var i = 0; i < row.childNodes.length; i++) {
                        row.childNodes[i].remove();
                    }
                }
                var controls = GetInsertDetalle_Antecedentes_FamiliaresRowControls(index);
                var actionColInsert = $('<td>');

                var abc = "if(dynamicFieldValidation('" + Detalle_Antecedentes_FamiliaresRowElement + "')){ Detalle_Antecedentes_FamiliaresInsertRow(" + index + "); }";
                var insertRowHTML = '<a  data-toggle="tooltip" title="Confirmar Registro" onclick="' + abc + '">';
                $('<i class="fa fa-check">').appendTo($(insertRowHTML).appendTo(actionColInsert));
				$('<i class="fa fa-times">').appendTo($("<a data-toggle='tooltip' title='Cancelar Registro' onclick='Detalle_Antecedentes_FamiliaresCancelRow(" + index + ")'>").appendTo(actionColInsert));
                actionColInsert.appendTo(row);

                for (i = 0; i < controls.length; i++) {
					var idHeader = $(controls[i]).data('field') + 'Header';
					if($(controls[i]).length > 1){
						idHeader = $($(controls[i])[1]).data('field') + 'Header';
					}					

					var classe = ($('#Detalle_Antecedentes_FamiliaresGrid .' + idHeader).hasClass('dt-right') ? "dt-right" : "") + $('#Detalle_Antecedentes_FamiliaresGrid .' + idHeader ).css('display') == 'none' ? " hide" : "";
				   
					if ($(controls[i]).next().length > 0) {
					    var div = $(controls[i]).next();
					    $('<td class="' + classe + '">').append($(controls[i])).append(div).appendTo(row);
					}else
					    $(controls[i]).appendTo($('<td class="' + classe + '">').appendTo(row));
					
                }
                $('#Detalle_Antecedentes_FamiliaresGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('#Detalle_Antecedentes_FamiliaresGrid .gridDatePicker').attr("readonly", "");
                return;
            }

            var actionCol = $('<td>');
			var edit = "<a title='@Resources.Resources.Edit' class='edit-MR' onclick='Detalle_Antecedentes_FamiliaresEditRow(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                edit = "";
            var editPopUp = "<a title='@Resources.Resources.Edit' class='edit-popup-MR' data-toggle='modal' data-target='#AddDetalle_Antecedentes_Familiares-form' onclick='Detalle_Antecedentes_FamiliaresEditRowPopup(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                editPopUp = "";
            var eliminar = "<a title='@Resources.Resources.Delete' class='eliminar-MR' onclick='Detalle_Antecedentes_FamiliaresDeleteRow(" + index + ", this)'>";
            if (!permission.Delete || isConsultMode)
                eliminar = "";
            $('<i class="fa fa-pencil">').appendTo($(edit).appendTo(actionCol));
            //$('<i class="fa fa-edit">').appendTo($(editPopUp).appendTo(actionCol));
            $('<i class="fa fa-trash-o">').appendTo($(eliminar).appendTo(actionCol));
			if ($('.Action' + 'Header').css('display') != 'none')
				actionCol.appendTo(row);

            if ($('.Enfermedad' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Enfermedad'+rowIndex+'">').text(GetDetalle_Antecedentes_Familiares_PadecimientosName(data.Enfermedad)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Enfermedad'+rowIndex+'">').text(GetDetalle_Antecedentes_Familiares_PadecimientosName(data.Enfermedad)).appendTo(row);
            if ($('.Parentesco' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Parentesco'+rowIndex+'">').text(GetDetalle_Antecedentes_Familiares_ParentescoName(data.Parentesco)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Parentesco'+rowIndex+'">').text(GetDetalle_Antecedentes_Familiares_ParentescoName(data.Parentesco)).appendTo(row);

        }

        var Detalle_Antecedentes_FamiliaresTable;
        function showDetalle_Antecedentes_FamiliaresGrid(dataSet) {
            //removedDetalle_Antecedentes_FamiliaresData = [];
            Detalle_Antecedentes_FamiliaresTable = $('#Detalle_Antecedentes_FamiliaresGrid').dataTable({
                dom: '<"html5buttons"B>lTgitp',
                buttons: [
                ],
                "createdRow": Detalle_Antecedentes_FamiliaresrowCreationGrid,
                "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                data: dataSet,
                "columns": [
                    { "data": null, 'visible': true, "orderable": false },

                    { "data": "Enfermedad", "orderable": false },
                    { "data": "Parentesco", "orderable": false },

                ],
                "order": [[0, "asc"]],
                "language": {
                    "lengthMenu": "@Resources.Resources.Display" + " _MENU_ " + "@Resources.Resources.RecordsPerPage",
                    "zeroRecords": "@Resources.Resources.NothingFound",
                    "info": "@Resources.Resources.ShowingPages" + " _PAGE_ " + "@Resources.Resources.of" + " _PAGES_",
                    "infoEmpty": "@Resources.Resources.NoRecords",
                    "infoFiltered": "(" + "@Resources.Resources.FilteredFrom" + " _MAX_ " + "@Resources.Resources.TotalRecords" + ")",
                    "sSearch": "@Resources.Resources.Search",
                    "paginate": {
                        "previous": "@Resources.Resources.Previous",
                        "next": "@Resources.Resources.Next"
                    }
                },
				"bDestroy": true,
                "fnDrawCallback": function (settings) {
                    setDetalle_Antecedentes_FamiliaresValidation();
                }
            }).on('init.dt', function (e, data) {
                $('a').tooltip();
            }).on('draw.dt', function () {
                $('#Detalle_Antecedentes_FamiliaresGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('.gridDatePicker').inputmask("99-99-9999", { "placeholder": "dd-mm-yyyy" });
            });
        }


    var Detalle_Antecedentes_Familiares_PadecimientosItems;
        function GetDetalle_Antecedentes_Familiares_PadecimientosItem() {
            Detalle_Antecedentes_Familiares_PadecimientosItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_Antecedentes_Familiares_PadecimientosAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_Antecedentes_Familiares_PadecimientosItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
    var Detalle_Antecedentes_Familiares_ParentescoItems;
        function GetDetalle_Antecedentes_Familiares_ParentescoItem() {
            Detalle_Antecedentes_Familiares_ParentescoItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_Antecedentes_Familiares_ParentescoAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_Antecedentes_Familiares_ParentescoItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }

        var Detalle_Antecedentes_FamiliaresData = [];
        var Detalle_Antecedentes_FamiliaresdeletedItem = [];
        var Detalle_Antecedentes_FamiliaresDataMain = [];
        var Detalle_Antecedentes_FamiliaresDataMainPages = [];
        var Detalle_Antecedentes_FamiliaresnewItemCount = 0;
        var Detalle_Antecedentes_FamiliaresmaxItemIndex = 0;
        var Detalle_Antecedentes_FamiliaresDataMainInitialized = false;

        function SendDetalle_Antecedentes_Familiares(callBack, FolioId) {
            Detalle_Antecedentes_FamiliaresData = GetDetalle_Antecedentes_FamiliaresFromDataTable();

            if (Detalle_Antecedentes_FamiliaresData.length > 0 || $("#ReferenceFolio").val() != FolioId) {
                if ($("#ReferenceFolio").val() != "0" && FolioId ==null)
                    FolioId = $("#ReferenceFolio").val();                
                if ($("#ReferenceFolio").val() == '')
                    $("#ReferenceFolio").val('0');
                $.ajax({
                    url: '@Url.Content("~/Frontal/Pacientes/PostDetalle_Antecedentes_Familiares?MasterId=")' + FolioId + "&referenceId=" + $("#ReferenceFolio").val(),
                    type: 'POST',
                    data: GetDetalle_Antecedentes_Familiares(),
                    async: true,
                    success: function (result) {

                    },
                    error: function (result) {
                        showNotification("@Resources.Resources.ErrorContactingServer", "error");
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });
            } else {
                //showNotification("@Resources.Resources.SaveSuccess", "success");
                //callBack(FolioId);
            }
            return true;
        }

        function GetAddDetalle_Antecedentes_FamiliaresPopup(currentRowIndex, mode, id) {

            $.ajax({
                url: "@Url.Action("AddDetalle_Antecedentes_Familiares", "Detalle_Antecedentes_Familiares")",
                type: "GET",
                async: false,
                data: { rowIndex: currentRowIndex, functionMode: mode, id: id },
                success: function (data) {
                    $(".AddDetalle_Antecedentes_FamiliaresModal").html(data);
                },
                error: function () {

                }
            });

            @*$.get('@Url.Action("AddDetalle_Antecedentes_Familiares", "Detalle_Antecedentes_Familiares")', { rowIndex: currentRowIndex }, function (data) {
                $(".AddDetalle_Antecedentes_FamiliaresModal").html(data);
            });*@
        }

        function ShowMessagePendingRowDetalle_Antecedentes_Familiares()
        {
            //alert('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Antecedentes Familiares"))')
	    showNotification('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Antecedentes Familiares"))', "warning");
        }
        var Detalle_Antecedentes_No_PatologicosinsertRowCurrentIndex = -1;
        var Detalle_Antecedentes_No_PatologicosDataDataTable;
        function getDetalle_Antecedentes_No_PatologicosData() {
            $.ajax({
                url: "@Url.Content("~/Frontal/Pacientes/GetDetalle_Antecedentes_No_Patologicos")" + "?draw=1&start=1&length=2147483647" + ($("#ReferenceFolio").val() != "" ? "&RelationId=" + $("#ReferenceFolio").val() : ""),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                    Detalle_Antecedentes_No_PatologicosDataDataTable = result.data;
                    showDetalle_Antecedentes_No_PatologicosGrid(result.data);
                    $('#Detalle_Antecedentes_No_PatologicosGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_Antecedentes_No_PatologicosGrid .gridDatePicker').attr("readonly", "");
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
        function Detalle_Antecedentes_No_PatologicosGetUpdateRowControls(data, nameOfTable, rowIndex) {

            var columnData = [];
            var counter = 0;
            var inputData = "<input type='text' class='fullWidth form-control' />";

           columnData[counter++] = $($(GetDetalle_Antecedentes_No_Patologicos_SustanciasDropDown()).val(data.Sustancia)).addClass('Sustancia inputNumber').attr('id', nameOfTable + 'Sustancia' + rowIndex).attr('data-field', 'Sustancia').after($.parseHTML(addNew('Detalle_Antecedentes_No_Patologicos', 'Sustancias','Sustancia', 257763)));
           columnData[counter++] = $($(GetDetalle_Antecedentes_No_Patologicos_Frecuencia_SustanciasDropDown()).val(data.Frecuencia)).addClass('Frecuencia inputNumber').attr('id', nameOfTable + 'Frecuencia' + rowIndex).attr('data-field', 'Frecuencia').after($.parseHTML(addNew('Detalle_Antecedentes_No_Patologicos', 'Frecuencia_Sustancias','Frecuencia', 257764)));
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Cantidad)).addClass('Cantidad inputNumber').attr('id', nameOfTable + 'Cantidad' + rowIndex).attr('data-field', 'Cantidad');

            return columnData;
        }



        function GetFileInfo(fileData, fileUploadData) {

            var $div = $("<div>");
            if (fileUploadData != null && fileUploadData.files.length > 0) {

                $div.append("<label>" + fileUploadData.files[0].name + "</label>");
                //<i class="fa fa-times-circle" id='removeFileAttachment'>
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;

            } else if (fileUploadData != null) {
                return $.parseHTML(GetFileUploader());
            } else {
                $div.append("<label>" + fileData.FileName + "</label>");
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;
            }
        }

        var removedDetalle_Antecedentes_No_PatologicosData = [];
        function Detalle_Antecedentes_No_PatologicosDeleteRow(rowIndex, row) {
            var rowIndexTable = Detalle_Antecedentes_No_PatologicosTable.fnGetPosition($(row).parent().parent()[0]);
            var permission = {            
                 Delete: '@permissionDetalle_Antecedentes_No_Patologicos.Delete' == 'True'
            };
            if (!permission.Delete || isConsultMode)
                return;            
            if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
              if (EjecutarValidacionesAlEliminarMRDetalle_Antecedentes_No_Patologicos('Detalle_Antecedentes_No_Patologicos_', '_' + rowIndex)) {
                var prevData = Detalle_Antecedentes_No_PatologicosTable.fnGetData(rowIndexTable );
                removedDetalle_Antecedentes_No_PatologicosData.push(prevData);
                Detalle_Antecedentes_No_PatologicosTable.fnDeleteRow(rowIndexTable );
				showDetalle_Antecedentes_No_PatologicosGrid(Detalle_Antecedentes_No_PatologicosTable.fnGetData());
              }
            }
			initiateUIControls();
        }

        function Detalle_Antecedentes_No_PatologicosrowCreationGrid(row, data, index) {
            var permission =  {            
                 Edit: '@permissionDetalle_Antecedentes_No_Patologicos.Edit' == 'True',
                 Delete: '@permissionDetalle_Antecedentes_No_Patologicos.Delete' == 'True'
            };
            setDetalle_Antecedentes_No_PatologicosValidation();
            var Detalle_Antecedentes_No_PatologicosRowElement = "Detalle_Antecedentes_No_Patologicos_" + index.toString();
            $(row).addClass(Detalle_Antecedentes_No_PatologicosRowElement);
            var nameOfTable='Detalle_Antecedentes_No_Patologicos_';
            var rowIndex = '_' + index;
            Detalle_Antecedentes_No_PatologicosinsertRowCurrentIndex = index;

            row.innerHTML = "";

            if (data.IsInsertRow) {

                if (row.childNodes.length != 0) {
                    for (var i = 0; i < row.childNodes.length; i++) {
                        row.childNodes[i].remove();
                    }
                }
                var controls = GetInsertDetalle_Antecedentes_No_PatologicosRowControls(index);
                var actionColInsert = $('<td>');

                var abc = "if(dynamicFieldValidation('" + Detalle_Antecedentes_No_PatologicosRowElement + "')){ Detalle_Antecedentes_No_PatologicosInsertRow(" + index + "); }";
                var insertRowHTML = '<a  data-toggle="tooltip" title="Confirmar Registro" onclick="' + abc + '">';
                $('<i class="fa fa-check">').appendTo($(insertRowHTML).appendTo(actionColInsert));
				$('<i class="fa fa-times">').appendTo($("<a data-toggle='tooltip' title='Cancelar Registro' onclick='Detalle_Antecedentes_No_PatologicosCancelRow(" + index + ")'>").appendTo(actionColInsert));
                actionColInsert.appendTo(row);

                for (i = 0; i < controls.length; i++) {
					var idHeader = $(controls[i]).data('field') + 'Header';
					if($(controls[i]).length > 1){
						idHeader = $($(controls[i])[1]).data('field') + 'Header';
					}					

					var classe = ($('#Detalle_Antecedentes_No_PatologicosGrid .' + idHeader).hasClass('dt-right') ? "dt-right" : "") + $('#Detalle_Antecedentes_No_PatologicosGrid .' + idHeader ).css('display') == 'none' ? " hide" : "";
				   
					if ($(controls[i]).next().length > 0) {
					    var div = $(controls[i]).next();
					    $('<td class="' + classe + '">').append($(controls[i])).append(div).appendTo(row);
					}else
					    $(controls[i]).appendTo($('<td class="' + classe + '">').appendTo(row));
					
                }
                $('#Detalle_Antecedentes_No_PatologicosGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('#Detalle_Antecedentes_No_PatologicosGrid .gridDatePicker').attr("readonly", "");
                return;
            }

            var actionCol = $('<td>');
			var edit = "<a title='@Resources.Resources.Edit' class='edit-MR' onclick='Detalle_Antecedentes_No_PatologicosEditRow(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                edit = "";
            var editPopUp = "<a title='@Resources.Resources.Edit' class='edit-popup-MR' data-toggle='modal' data-target='#AddDetalle_Antecedentes_No_Patologicos-form' onclick='Detalle_Antecedentes_No_PatologicosEditRowPopup(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                editPopUp = "";
            var eliminar = "<a title='@Resources.Resources.Delete' class='eliminar-MR' onclick='Detalle_Antecedentes_No_PatologicosDeleteRow(" + index + ", this)'>";
            if (!permission.Delete || isConsultMode)
                eliminar = "";
            $('<i class="fa fa-pencil">').appendTo($(edit).appendTo(actionCol));
            //$('<i class="fa fa-edit">').appendTo($(editPopUp).appendTo(actionCol));
            $('<i class="fa fa-trash-o">').appendTo($(eliminar).appendTo(actionCol));
			if ($('.Action' + 'Header').css('display') != 'none')
				actionCol.appendTo(row);

            if ($('.Sustancia' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Sustancia'+rowIndex+'">').text(GetDetalle_Antecedentes_No_Patologicos_SustanciasName(data.Sustancia)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Sustancia'+rowIndex+'">').text(GetDetalle_Antecedentes_No_Patologicos_SustanciasName(data.Sustancia)).appendTo(row);
            if ($('.Frecuencia' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Frecuencia'+rowIndex+'">').text(GetDetalle_Antecedentes_No_Patologicos_Frecuencia_SustanciasName(data.Frecuencia)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Frecuencia'+rowIndex+'">').text(GetDetalle_Antecedentes_No_Patologicos_Frecuencia_SustanciasName(data.Frecuencia)).appendTo(row);
            if ($('.Cantidad' + 'Header').css('display') != 'none')
                $('<td class="dt-right"  id="'+nameOfTable+'Cantidad'+rowIndex+'">').text(data.Cantidad).appendTo(row);
            else 
                 $('<td class="dt-right" style="display:none;"  id="'+nameOfTable+'Cantidad'+rowIndex+'">').text(data.Cantidad).appendTo(row);

        }

        var Detalle_Antecedentes_No_PatologicosTable;
        function showDetalle_Antecedentes_No_PatologicosGrid(dataSet) {
            //removedDetalle_Antecedentes_No_PatologicosData = [];
            Detalle_Antecedentes_No_PatologicosTable = $('#Detalle_Antecedentes_No_PatologicosGrid').dataTable({
                dom: '<"html5buttons"B>lTgitp',
                buttons: [
                ],
                "createdRow": Detalle_Antecedentes_No_PatologicosrowCreationGrid,
                "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                data: dataSet,
                "columns": [
                    { "data": null, 'visible': true, "orderable": false },

                    { "data": "Sustancia", "orderable": false },
                    { "data": "Frecuencia", "orderable": false },
                    { "data": "Cantidad", "className": "dt-right", "orderable": false },

                ],
                "order": [[0, "asc"]],
                "language": {
                    "lengthMenu": "@Resources.Resources.Display" + " _MENU_ " + "@Resources.Resources.RecordsPerPage",
                    "zeroRecords": "@Resources.Resources.NothingFound",
                    "info": "@Resources.Resources.ShowingPages" + " _PAGE_ " + "@Resources.Resources.of" + " _PAGES_",
                    "infoEmpty": "@Resources.Resources.NoRecords",
                    "infoFiltered": "(" + "@Resources.Resources.FilteredFrom" + " _MAX_ " + "@Resources.Resources.TotalRecords" + ")",
                    "sSearch": "@Resources.Resources.Search",
                    "paginate": {
                        "previous": "@Resources.Resources.Previous",
                        "next": "@Resources.Resources.Next"
                    }
                },
				"bDestroy": true,
                "fnDrawCallback": function (settings) {
                    setDetalle_Antecedentes_No_PatologicosValidation();
                }
            }).on('init.dt', function (e, data) {
                $('a').tooltip();
            }).on('draw.dt', function () {
                $('#Detalle_Antecedentes_No_PatologicosGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('.gridDatePicker').inputmask("99-99-9999", { "placeholder": "dd-mm-yyyy" });
            });
        }


    var Detalle_Antecedentes_No_Patologicos_SustanciasItems;
        function GetDetalle_Antecedentes_No_Patologicos_SustanciasItem() {
            Detalle_Antecedentes_No_Patologicos_SustanciasItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_Antecedentes_No_Patologicos_SustanciasAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_Antecedentes_No_Patologicos_SustanciasItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
    var Detalle_Antecedentes_No_Patologicos_Frecuencia_SustanciasItems;
        function GetDetalle_Antecedentes_No_Patologicos_Frecuencia_SustanciasItem() {
            Detalle_Antecedentes_No_Patologicos_Frecuencia_SustanciasItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_Antecedentes_No_Patologicos_Frecuencia_SustanciasAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_Antecedentes_No_Patologicos_Frecuencia_SustanciasItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }


        var Detalle_Antecedentes_No_PatologicosData = [];
        var Detalle_Antecedentes_No_PatologicosdeletedItem = [];
        var Detalle_Antecedentes_No_PatologicosDataMain = [];
        var Detalle_Antecedentes_No_PatologicosDataMainPages = [];
        var Detalle_Antecedentes_No_PatologicosnewItemCount = 0;
        var Detalle_Antecedentes_No_PatologicosmaxItemIndex = 0;
        var Detalle_Antecedentes_No_PatologicosDataMainInitialized = false;

        function SendDetalle_Antecedentes_No_Patologicos(callBack, FolioId) {
            Detalle_Antecedentes_No_PatologicosData = GetDetalle_Antecedentes_No_PatologicosFromDataTable();

            if (Detalle_Antecedentes_No_PatologicosData.length > 0 || $("#ReferenceFolio").val() != FolioId) {
                if ($("#ReferenceFolio").val() != "0" && FolioId ==null)
                    FolioId = $("#ReferenceFolio").val();                
                if ($("#ReferenceFolio").val() == '')
                    $("#ReferenceFolio").val('0');
                $.ajax({
                    url: '@Url.Content("~/Frontal/Pacientes/PostDetalle_Antecedentes_No_Patologicos?MasterId=")' + FolioId + "&referenceId=" + $("#ReferenceFolio").val(),
                    type: 'POST',
                    data: GetDetalle_Antecedentes_No_Patologicos(),
                    async: true,
                    success: function (result) {

                    },
                    error: function (result) {
                        showNotification("@Resources.Resources.ErrorContactingServer", "error");
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });
            } else {
                //showNotification("@Resources.Resources.SaveSuccess", "success");
                //callBack(FolioId);
            }
            return true;
        }

        function GetAddDetalle_Antecedentes_No_PatologicosPopup(currentRowIndex, mode, id) {

            $.ajax({
                url: "@Url.Action("AddDetalle_Antecedentes_No_Patologicos", "Detalle_Antecedentes_No_Patologicos")",
                type: "GET",
                async: false,
                data: { rowIndex: currentRowIndex, functionMode: mode, id: id },
                success: function (data) {
                    $(".AddDetalle_Antecedentes_No_PatologicosModal").html(data);
                },
                error: function () {

                }
            });

            @*$.get('@Url.Action("AddDetalle_Antecedentes_No_Patologicos", "Detalle_Antecedentes_No_Patologicos")', { rowIndex: currentRowIndex }, function (data) {
                $(".AddDetalle_Antecedentes_No_PatologicosModal").html(data);
            });*@
        }

        function ShowMessagePendingRowDetalle_Antecedentes_No_Patologicos()
        {
            //alert('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Antecedentes personales no patológicos"))')
	    showNotification('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Antecedentes personales no patológicos"))', "warning");
        }
        var Detalle_Examenes_LaboratorioinsertRowCurrentIndex = -1;
        var Detalle_Examenes_LaboratorioDataDataTable;
        function getDetalle_Examenes_LaboratorioData() {
            $.ajax({
                url: "@Url.Content("~/Frontal/Pacientes/GetDetalle_Examenes_Laboratorio")" + "?draw=1&start=1&length=2147483647" + ($("#ReferenceFolio").val() != "" ? "&RelationId=" + $("#ReferenceFolio").val() : ""),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                    Detalle_Examenes_LaboratorioDataDataTable = result.data;
                    showDetalle_Examenes_LaboratorioGrid(result.data);
                    $('#Detalle_Examenes_LaboratorioGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_Examenes_LaboratorioGrid .gridDatePicker').attr("readonly", "");
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
        function Detalle_Examenes_LaboratorioGetUpdateRowControls(data, nameOfTable, rowIndex) {

            var columnData = [];
            var counter = 0;
            var inputData = "<input type='text' class='fullWidth form-control' />";

           columnData[counter++] = $($(GetDetalle_Examenes_Laboratorio_Indicadores_LaboratorioDropDown()).val(data.Indicador)).addClass('Indicador inputNumber').attr('id', nameOfTable + 'Indicador' + rowIndex).attr('data-field', 'Indicador').after($.parseHTML(addNew('Detalle_Examenes_Laboratorio', 'Indicadores_Laboratorio','Indicador', 257773)));
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Resultado)).addClass('Resultado inputNumber').attr('id', nameOfTable + 'Resultado' + rowIndex).attr('data-field', 'Resultado');
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Unidad)).addClass('Unidad').attr('id', nameOfTable + 'Unidad' + rowIndex).attr('data-field', 'Unidad');
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Intervalo_de_Referencia)).addClass('Intervalo_de_Referencia').attr('id', nameOfTable + 'Intervalo_de_Referencia' + rowIndex).attr('data-field', 'Intervalo_de_Referencia');
            columnData[counter++] = $($($.parseHTML(GetGridDatePicker())).val(data.Fecha_de_Resultado)).addClass('Fecha_de_Resultado').attr('id', nameOfTable + 'Fecha_de_Resultado' + rowIndex).attr('data-field', 'Fecha_de_Resultado');
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Estatus_Indicador)).addClass('Estatus_Indicador').attr('id', nameOfTable + 'Estatus_Indicador' + rowIndex).attr('data-field', 'Estatus_Indicador');

            return columnData;
        }



        function GetFileInfo(fileData, fileUploadData) {

            var $div = $("<div>");
            if (fileUploadData != null && fileUploadData.files.length > 0) {

                $div.append("<label>" + fileUploadData.files[0].name + "</label>");
                //<i class="fa fa-times-circle" id='removeFileAttachment'>
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;

            } else if (fileUploadData != null) {
                return $.parseHTML(GetFileUploader());
            } else {
                $div.append("<label>" + fileData.FileName + "</label>");
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;
            }
        }

        var removedDetalle_Examenes_LaboratorioData = [];
        function Detalle_Examenes_LaboratorioDeleteRow(rowIndex, row) {
            var rowIndexTable = Detalle_Examenes_LaboratorioTable.fnGetPosition($(row).parent().parent()[0]);
            var permission = {            
                 Delete: '@permissionDetalle_Examenes_Laboratorio.Delete' == 'True'
            };
            if (!permission.Delete || isConsultMode)
                return;            
            if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
              if (EjecutarValidacionesAlEliminarMRDetalle_Examenes_Laboratorio('Detalle_Examenes_Laboratorio_', '_' + rowIndex)) {
                var prevData = Detalle_Examenes_LaboratorioTable.fnGetData(rowIndexTable );
                removedDetalle_Examenes_LaboratorioData.push(prevData);
                Detalle_Examenes_LaboratorioTable.fnDeleteRow(rowIndexTable );
				showDetalle_Examenes_LaboratorioGrid(Detalle_Examenes_LaboratorioTable.fnGetData());
              }
            }
			initiateUIControls();
        }

        function Detalle_Examenes_LaboratoriorowCreationGrid(row, data, index) {
            var permission =  {            
                 Edit: '@permissionDetalle_Examenes_Laboratorio.Edit' == 'True',
                 Delete: '@permissionDetalle_Examenes_Laboratorio.Delete' == 'True'
            };
            setDetalle_Examenes_LaboratorioValidation();
            var Detalle_Examenes_LaboratorioRowElement = "Detalle_Examenes_Laboratorio_" + index.toString();
            $(row).addClass(Detalle_Examenes_LaboratorioRowElement);
            var nameOfTable='Detalle_Examenes_Laboratorio_';
            var rowIndex = '_' + index;
            Detalle_Examenes_LaboratorioinsertRowCurrentIndex = index;

            row.innerHTML = "";

            if (data.IsInsertRow) {

                if (row.childNodes.length != 0) {
                    for (var i = 0; i < row.childNodes.length; i++) {
                        row.childNodes[i].remove();
                    }
                }
                var controls = GetInsertDetalle_Examenes_LaboratorioRowControls(index);
                var actionColInsert = $('<td>');

                var abc = "if(dynamicFieldValidation('" + Detalle_Examenes_LaboratorioRowElement + "')){ Detalle_Examenes_LaboratorioInsertRow(" + index + "); }";
                var insertRowHTML = '<a  data-toggle="tooltip" title="Confirmar Registro" onclick="' + abc + '">';
                $('<i class="fa fa-check">').appendTo($(insertRowHTML).appendTo(actionColInsert));
				$('<i class="fa fa-times">').appendTo($("<a data-toggle='tooltip' title='Cancelar Registro' onclick='Detalle_Examenes_LaboratorioCancelRow(" + index + ")'>").appendTo(actionColInsert));
                actionColInsert.appendTo(row);

                for (i = 0; i < controls.length; i++) {
					var idHeader = $(controls[i]).data('field') + 'Header';
					if($(controls[i]).length > 1){
						idHeader = $($(controls[i])[1]).data('field') + 'Header';
					}					

					var classe = ($('#Detalle_Examenes_LaboratorioGrid .' + idHeader).hasClass('dt-right') ? "dt-right" : "") + $('#Detalle_Examenes_LaboratorioGrid .' + idHeader ).css('display') == 'none' ? " hide" : "";
				   
					if ($(controls[i]).next().length > 0) {
					    var div = $(controls[i]).next();
					    $('<td class="' + classe + '">').append($(controls[i])).append(div).appendTo(row);
					}else
					    $(controls[i]).appendTo($('<td class="' + classe + '">').appendTo(row));
					
                }
                $('#Detalle_Examenes_LaboratorioGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('#Detalle_Examenes_LaboratorioGrid .gridDatePicker').attr("readonly", "");
                return;
            }

            var actionCol = $('<td>');
			var edit = "<a title='@Resources.Resources.Edit' class='edit-MR' onclick='Detalle_Examenes_LaboratorioEditRow(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                edit = "";
            var editPopUp = "<a title='@Resources.Resources.Edit' class='edit-popup-MR' data-toggle='modal' data-target='#AddDetalle_Examenes_Laboratorio-form' onclick='Detalle_Examenes_LaboratorioEditRowPopup(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                editPopUp = "";
            var eliminar = "<a title='@Resources.Resources.Delete' class='eliminar-MR' onclick='Detalle_Examenes_LaboratorioDeleteRow(" + index + ", this)'>";
            if (!permission.Delete || isConsultMode)
                eliminar = "";
            $('<i class="fa fa-pencil">').appendTo($(edit).appendTo(actionCol));
            //$('<i class="fa fa-edit">').appendTo($(editPopUp).appendTo(actionCol));
            $('<i class="fa fa-trash-o">').appendTo($(eliminar).appendTo(actionCol));
			if ($('.Action' + 'Header').css('display') != 'none')
				actionCol.appendTo(row);

            if ($('.Indicador' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Indicador'+rowIndex+'">').text(GetDetalle_Examenes_Laboratorio_Indicadores_LaboratorioName(data.Indicador)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Indicador'+rowIndex+'">').text(GetDetalle_Examenes_Laboratorio_Indicadores_LaboratorioName(data.Indicador)).appendTo(row);
            if ($('.Resultado' + 'Header').css('display') != 'none')
                $('<td class="dt-right"  id="'+nameOfTable+'Resultado'+rowIndex+'">').text(data.Resultado).appendTo(row);
            else 
                 $('<td class="dt-right" style="display:none;"  id="'+nameOfTable+'Resultado'+rowIndex+'">').text(data.Resultado).appendTo(row);
            if ($('.Unidad' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Unidad'+rowIndex+'">').text(data.Unidad).appendTo(row);
            else 
                $('<td style="display:none;" id="'+nameOfTable+'Unidad'+rowIndex+'">').text(data.Unidad).appendTo(row);
            if ($('.Intervalo_de_Referencia' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Intervalo_de_Referencia'+rowIndex+'">').text(data.Intervalo_de_Referencia).appendTo(row);
            else 
                $('<td style="display:none;" id="'+nameOfTable+'Intervalo_de_Referencia'+rowIndex+'">').text(data.Intervalo_de_Referencia).appendTo(row);
            if ($('.Fecha_de_Resultado' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Fecha_de_Resultado'+rowIndex+'">').text(data.Fecha_de_Resultado).appendTo(row);
            else
                $('<td style="display:none;" id="'+nameOfTable+'Fecha_de_Resultado'+rowIndex+'">').text(data.Fecha_de_Resultado).appendTo(row);
            if ($('.Estatus_Indicador' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Estatus_Indicador'+rowIndex+'">').text(data.Estatus_Indicador).appendTo(row);
            else 
                $('<td style="display:none;" id="'+nameOfTable+'Estatus_Indicador'+rowIndex+'">').text(data.Estatus_Indicador).appendTo(row);

        }

        var Detalle_Examenes_LaboratorioTable;
        function showDetalle_Examenes_LaboratorioGrid(dataSet) {
            //removedDetalle_Examenes_LaboratorioData = [];
            Detalle_Examenes_LaboratorioTable = $('#Detalle_Examenes_LaboratorioGrid').dataTable({
                dom: '<"html5buttons"B>lTgitp',
                buttons: [
                ],
                "createdRow": Detalle_Examenes_LaboratoriorowCreationGrid,
                "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                data: dataSet,
                "columns": [
                    { "data": null, 'visible': true, "orderable": false },

                    { "data": "Indicador", "orderable": false },
                    { "data": "Resultado", "className": "dt-right", "orderable": false },
                    { "data": "Unidad", "orderable": false },
                    { "data": "Intervalo_de_Referencia", "orderable": false },
                    { "data": "Fecha_de_Resultado", "orderable": false },
                    { "data": "Estatus_Indicador", "orderable": false },

                ],
                "order": [[0, "asc"]],
                "language": {
                    "lengthMenu": "@Resources.Resources.Display" + " _MENU_ " + "@Resources.Resources.RecordsPerPage",
                    "zeroRecords": "@Resources.Resources.NothingFound",
                    "info": "@Resources.Resources.ShowingPages" + " _PAGE_ " + "@Resources.Resources.of" + " _PAGES_",
                    "infoEmpty": "@Resources.Resources.NoRecords",
                    "infoFiltered": "(" + "@Resources.Resources.FilteredFrom" + " _MAX_ " + "@Resources.Resources.TotalRecords" + ")",
                    "sSearch": "@Resources.Resources.Search",
                    "paginate": {
                        "previous": "@Resources.Resources.Previous",
                        "next": "@Resources.Resources.Next"
                    }
                },
				"bDestroy": true,
                "fnDrawCallback": function (settings) {
                    setDetalle_Examenes_LaboratorioValidation();
                }
            }).on('init.dt', function (e, data) {
                $('a').tooltip();
            }).on('draw.dt', function () {
                $('#Detalle_Examenes_LaboratorioGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('.gridDatePicker').inputmask("99-99-9999", { "placeholder": "dd-mm-yyyy" });
            });
        }


    var Detalle_Examenes_Laboratorio_Indicadores_LaboratorioItems;
        function GetDetalle_Examenes_Laboratorio_Indicadores_LaboratorioItem() {
            Detalle_Examenes_Laboratorio_Indicadores_LaboratorioItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_Examenes_Laboratorio_Indicadores_LaboratorioAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_Examenes_Laboratorio_Indicadores_LaboratorioItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }






        var Detalle_Examenes_LaboratorioData = [];
        var Detalle_Examenes_LaboratoriodeletedItem = [];
        var Detalle_Examenes_LaboratorioDataMain = [];
        var Detalle_Examenes_LaboratorioDataMainPages = [];
        var Detalle_Examenes_LaboratorionewItemCount = 0;
        var Detalle_Examenes_LaboratoriomaxItemIndex = 0;
        var Detalle_Examenes_LaboratorioDataMainInitialized = false;

        function SendDetalle_Examenes_Laboratorio(callBack, FolioId) {
            Detalle_Examenes_LaboratorioData = GetDetalle_Examenes_LaboratorioFromDataTable();

            if (Detalle_Examenes_LaboratorioData.length > 0 || $("#ReferenceFolio").val() != FolioId) {
                if ($("#ReferenceFolio").val() != "0" && FolioId ==null)
                    FolioId = $("#ReferenceFolio").val();                
                if ($("#ReferenceFolio").val() == '')
                    $("#ReferenceFolio").val('0');
                $.ajax({
                    url: '@Url.Content("~/Frontal/Pacientes/PostDetalle_Examenes_Laboratorio?MasterId=")' + FolioId + "&referenceId=" + $("#ReferenceFolio").val(),
                    type: 'POST',
                    data: GetDetalle_Examenes_Laboratorio(),
                    async: true,
                    success: function (result) {

                    },
                    error: function (result) {
                        showNotification("@Resources.Resources.ErrorContactingServer", "error");
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });
            } else {
                //showNotification("@Resources.Resources.SaveSuccess", "success");
                //callBack(FolioId);
            }
            return true;
        }

        function GetAddDetalle_Examenes_LaboratorioPopup(currentRowIndex, mode, id) {

            $.ajax({
                url: "@Url.Action("AddDetalle_Examenes_Laboratorio", "Detalle_Examenes_Laboratorio")",
                type: "GET",
                async: false,
                data: { rowIndex: currentRowIndex, functionMode: mode, id: id },
                success: function (data) {
                    $(".AddDetalle_Examenes_LaboratorioModal").html(data);
                },
                error: function () {

                }
            });

            @*$.get('@Url.Action("AddDetalle_Examenes_Laboratorio", "Detalle_Examenes_Laboratorio")', { rowIndex: currentRowIndex }, function (data) {
                $(".AddDetalle_Examenes_LaboratorioModal").html(data);
            });*@
        }

        function ShowMessagePendingRowDetalle_Examenes_Laboratorio()
        {
            //alert('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Exámenes de Laboratorio"))')
	    showNotification('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Exámenes de Laboratorio"))', "warning");
        }
        var Detalle_Terapia_HormonalinsertRowCurrentIndex = -1;
        var Detalle_Terapia_HormonalDataDataTable;
        function getDetalle_Terapia_HormonalData() {
            $.ajax({
                url: "@Url.Content("~/Frontal/Pacientes/GetDetalle_Terapia_Hormonal")" + "?draw=1&start=1&length=2147483647" + ($("#ReferenceFolio").val() != "" ? "&RelationId=" + $("#ReferenceFolio").val() : ""),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                    Detalle_Terapia_HormonalDataDataTable = result.data;
                    showDetalle_Terapia_HormonalGrid(result.data);
                    $('#Detalle_Terapia_HormonalGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_Terapia_HormonalGrid .gridDatePicker').attr("readonly", "");
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
        function Detalle_Terapia_HormonalGetUpdateRowControls(data, nameOfTable, rowIndex) {

            var columnData = [];
            var counter = 0;
            var inputData = "<input type='text' class='fullWidth form-control' />";

            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Nombre)).addClass('Nombre').attr('id', nameOfTable + 'Nombre' + rowIndex).attr('data-field', 'Nombre');
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Dosis)).addClass('Dosis').attr('id', nameOfTable + 'Dosis' + rowIndex).attr('data-field', 'Dosis');

            return columnData;
        }



        function GetFileInfo(fileData, fileUploadData) {

            var $div = $("<div>");
            if (fileUploadData != null && fileUploadData.files.length > 0) {

                $div.append("<label>" + fileUploadData.files[0].name + "</label>");
                //<i class="fa fa-times-circle" id='removeFileAttachment'>
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;

            } else if (fileUploadData != null) {
                return $.parseHTML(GetFileUploader());
            } else {
                $div.append("<label>" + fileData.FileName + "</label>");
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;
            }
        }

        var removedDetalle_Terapia_HormonalData = [];
        function Detalle_Terapia_HormonalDeleteRow(rowIndex, row) {
            var rowIndexTable = Detalle_Terapia_HormonalTable.fnGetPosition($(row).parent().parent()[0]);
            var permission = {            
                 Delete: '@permissionDetalle_Terapia_Hormonal.Delete' == 'True'
            };
            if (!permission.Delete || isConsultMode)
                return;            
            if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
              if (EjecutarValidacionesAlEliminarMRDetalle_Terapia_Hormonal('Detalle_Terapia_Hormonal_', '_' + rowIndex)) {
                var prevData = Detalle_Terapia_HormonalTable.fnGetData(rowIndexTable );
                removedDetalle_Terapia_HormonalData.push(prevData);
                Detalle_Terapia_HormonalTable.fnDeleteRow(rowIndexTable );
				showDetalle_Terapia_HormonalGrid(Detalle_Terapia_HormonalTable.fnGetData());
              }
            }
			initiateUIControls();
        }

        function Detalle_Terapia_HormonalrowCreationGrid(row, data, index) {
            var permission =  {            
                 Edit: '@permissionDetalle_Terapia_Hormonal.Edit' == 'True',
                 Delete: '@permissionDetalle_Terapia_Hormonal.Delete' == 'True'
            };
            setDetalle_Terapia_HormonalValidation();
            var Detalle_Terapia_HormonalRowElement = "Detalle_Terapia_Hormonal_" + index.toString();
            $(row).addClass(Detalle_Terapia_HormonalRowElement);
            var nameOfTable='Detalle_Terapia_Hormonal_';
            var rowIndex = '_' + index;
            Detalle_Terapia_HormonalinsertRowCurrentIndex = index;

            row.innerHTML = "";

            if (data.IsInsertRow) {

                if (row.childNodes.length != 0) {
                    for (var i = 0; i < row.childNodes.length; i++) {
                        row.childNodes[i].remove();
                    }
                }
                var controls = GetInsertDetalle_Terapia_HormonalRowControls(index);
                var actionColInsert = $('<td>');

                var abc = "if(dynamicFieldValidation('" + Detalle_Terapia_HormonalRowElement + "')){ Detalle_Terapia_HormonalInsertRow(" + index + "); }";
                var insertRowHTML = '<a  data-toggle="tooltip" title="Confirmar Registro" onclick="' + abc + '">';
                $('<i class="fa fa-check">').appendTo($(insertRowHTML).appendTo(actionColInsert));
				$('<i class="fa fa-times">').appendTo($("<a data-toggle='tooltip' title='Cancelar Registro' onclick='Detalle_Terapia_HormonalCancelRow(" + index + ")'>").appendTo(actionColInsert));
                actionColInsert.appendTo(row);

                for (i = 0; i < controls.length; i++) {
					var idHeader = $(controls[i]).data('field') + 'Header';
					if($(controls[i]).length > 1){
						idHeader = $($(controls[i])[1]).data('field') + 'Header';
					}					

					var classe = ($('#Detalle_Terapia_HormonalGrid .' + idHeader).hasClass('dt-right') ? "dt-right" : "") + $('#Detalle_Terapia_HormonalGrid .' + idHeader ).css('display') == 'none' ? " hide" : "";
				   
					if ($(controls[i]).next().length > 0) {
					    var div = $(controls[i]).next();
					    $('<td class="' + classe + '">').append($(controls[i])).append(div).appendTo(row);
					}else
					    $(controls[i]).appendTo($('<td class="' + classe + '">').appendTo(row));
					
                }
                $('#Detalle_Terapia_HormonalGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('#Detalle_Terapia_HormonalGrid .gridDatePicker').attr("readonly", "");
                return;
            }

            var actionCol = $('<td>');
			var edit = "<a title='@Resources.Resources.Edit' class='edit-MR' onclick='Detalle_Terapia_HormonalEditRow(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                edit = "";
            var editPopUp = "<a title='@Resources.Resources.Edit' class='edit-popup-MR' data-toggle='modal' data-target='#AddDetalle_Terapia_Hormonal-form' onclick='Detalle_Terapia_HormonalEditRowPopup(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                editPopUp = "";
            var eliminar = "<a title='@Resources.Resources.Delete' class='eliminar-MR' onclick='Detalle_Terapia_HormonalDeleteRow(" + index + ", this)'>";
            if (!permission.Delete || isConsultMode)
                eliminar = "";
            $('<i class="fa fa-pencil">').appendTo($(edit).appendTo(actionCol));
            //$('<i class="fa fa-edit">').appendTo($(editPopUp).appendTo(actionCol));
            $('<i class="fa fa-trash-o">').appendTo($(eliminar).appendTo(actionCol));
			if ($('.Action' + 'Header').css('display') != 'none')
				actionCol.appendTo(row);

            if ($('.Nombre' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Nombre'+rowIndex+'">').text(data.Nombre).appendTo(row);
            else 
                $('<td style="display:none;" id="'+nameOfTable+'Nombre'+rowIndex+'">').text(data.Nombre).appendTo(row);
            if ($('.Dosis' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Dosis'+rowIndex+'">').text(data.Dosis).appendTo(row);
            else 
                $('<td style="display:none;" id="'+nameOfTable+'Dosis'+rowIndex+'">').text(data.Dosis).appendTo(row);

        }

        var Detalle_Terapia_HormonalTable;
        function showDetalle_Terapia_HormonalGrid(dataSet) {
            //removedDetalle_Terapia_HormonalData = [];
            Detalle_Terapia_HormonalTable = $('#Detalle_Terapia_HormonalGrid').dataTable({
                dom: '<"html5buttons"B>lTgitp',
                buttons: [
                ],
                "createdRow": Detalle_Terapia_HormonalrowCreationGrid,
                "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                data: dataSet,
                "columns": [
                    { "data": null, 'visible': true, "orderable": false },

                    { "data": "Nombre", "orderable": false },
                    { "data": "Dosis", "orderable": false },

                ],
                "order": [[0, "asc"]],
                "language": {
                    "lengthMenu": "@Resources.Resources.Display" + " _MENU_ " + "@Resources.Resources.RecordsPerPage",
                    "zeroRecords": "@Resources.Resources.NothingFound",
                    "info": "@Resources.Resources.ShowingPages" + " _PAGE_ " + "@Resources.Resources.of" + " _PAGES_",
                    "infoEmpty": "@Resources.Resources.NoRecords",
                    "infoFiltered": "(" + "@Resources.Resources.FilteredFrom" + " _MAX_ " + "@Resources.Resources.TotalRecords" + ")",
                    "sSearch": "@Resources.Resources.Search",
                    "paginate": {
                        "previous": "@Resources.Resources.Previous",
                        "next": "@Resources.Resources.Next"
                    }
                },
				"bDestroy": true,
                "fnDrawCallback": function (settings) {
                    setDetalle_Terapia_HormonalValidation();
                }
            }).on('init.dt', function (e, data) {
                $('a').tooltip();
            }).on('draw.dt', function () {
                $('#Detalle_Terapia_HormonalGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('.gridDatePicker').inputmask("99-99-9999", { "placeholder": "dd-mm-yyyy" });
            });
        }





        var Detalle_Terapia_HormonalData = [];
        var Detalle_Terapia_HormonaldeletedItem = [];
        var Detalle_Terapia_HormonalDataMain = [];
        var Detalle_Terapia_HormonalDataMainPages = [];
        var Detalle_Terapia_HormonalnewItemCount = 0;
        var Detalle_Terapia_HormonalmaxItemIndex = 0;
        var Detalle_Terapia_HormonalDataMainInitialized = false;

        function SendDetalle_Terapia_Hormonal(callBack, FolioId) {
            Detalle_Terapia_HormonalData = GetDetalle_Terapia_HormonalFromDataTable();

            if (Detalle_Terapia_HormonalData.length > 0 || $("#ReferenceFolio").val() != FolioId) {
                if ($("#ReferenceFolio").val() != "0" && FolioId ==null)
                    FolioId = $("#ReferenceFolio").val();                
                if ($("#ReferenceFolio").val() == '')
                    $("#ReferenceFolio").val('0');
                $.ajax({
                    url: '@Url.Content("~/Frontal/Pacientes/PostDetalle_Terapia_Hormonal?MasterId=")' + FolioId + "&referenceId=" + $("#ReferenceFolio").val(),
                    type: 'POST',
                    data: GetDetalle_Terapia_Hormonal(),
                    async: true,
                    success: function (result) {

                    },
                    error: function (result) {
                        showNotification("@Resources.Resources.ErrorContactingServer", "error");
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });
            } else {
                //showNotification("@Resources.Resources.SaveSuccess", "success");
                //callBack(FolioId);
            }
            return true;
        }

        function GetAddDetalle_Terapia_HormonalPopup(currentRowIndex, mode, id) {

            $.ajax({
                url: "@Url.Action("AddDetalle_Terapia_Hormonal", "Detalle_Terapia_Hormonal")",
                type: "GET",
                async: false,
                data: { rowIndex: currentRowIndex, functionMode: mode, id: id },
                success: function (data) {
                    $(".AddDetalle_Terapia_HormonalModal").html(data);
                },
                error: function () {

                }
            });

            @*$.get('@Url.Action("AddDetalle_Terapia_Hormonal", "Detalle_Terapia_Hormonal")', { rowIndex: currentRowIndex }, function (data) {
                $(".AddDetalle_Terapia_HormonalModal").html(data);
            });*@
        }

        function ShowMessagePendingRowDetalle_Terapia_Hormonal()
        {
            //alert('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Detalle de Terapia Hormonal"))')
	    showNotification('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Detalle de Terapia Hormonal"))', "warning");
        }
var MS_Exclusion_Ingredientes_PacienteDataDataTable;
var MS_Exclusion_Ingredientes_PacienteTable;
var Alergias_MS_Exclusion_Ingredientes_PacienteItems;
        function GetAlergias_MS_Exclusion_Ingredientes_PacienteItem() {
            Alergias_MS_Exclusion_Ingredientes_PacienteItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetAlergias_MS_Exclusion_Ingredientes_PacienteAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Alergias_MS_Exclusion_Ingredientes_PacienteItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
var MS_Exclusion_Ingredientes_PacienteData = [];
function getMS_Exclusion_Ingredientes_PacienteData() {
	$.ajax({
		url: "@Url.Content("~/Frontal/Pacientes/GetMS_Exclusion_Ingredientes_Paciente")" + "?draw=1&start=1&length=2147483647" + ($("#ReferenceFolio").val() != "" ? "&RelationId=" + $("#ReferenceFolio").val() : ""),
		type: 'GET',
		dataType: "json",
		async: false,
		success: function (result) {
			MS_Exclusion_Ingredientes_PacienteDataDataTable = result.data;
			$("#ddlAlergiasMult").val(result.data);
			$("#ddlAlergiasMult").trigger('chosen:updated');
		},
		error: function (result) {
			showNotification("@Resources.Resources.ErrorContactingServer", "error");
		}
	});
}

function FillAlergias() {
try {
	for (var i = 0; i < Alergias_MS_Exclusion_Ingredientes_PacienteItems.length ; i++) {
 
		var d = Alergias_MS_Exclusion_Ingredientes_PacienteItems[i]
                $("#ddlAlergiasMult").append(new Option(
		d.Nombre_Ingrediente, d.Clave
));
	}
	$(".chosen-select").chosen({ width: "100%", no_results_text: "Oops, nothing found!" });
	$('#ddlAlergiasMult').children("selected").each(function () {
		$(this).prop("selected", false);
	});

	if (MS_Exclusion_Ingredientes_PacienteDataDataTable != undefined)
	{
		if (MS_Exclusion_Ingredientes_PacienteDataDataTable.length > 0)
		{
			var array = [];
			for (var j = 0; j < MS_Exclusion_Ingredientes_PacienteDataDataTable.length; j++)
			{
                               
				array.push(MS_Exclusion_Ingredientes_PacienteDataDataTable[j].Ingrediente);


			}
			$('#ddlAlergiasMult').val(array);
		}  
	}
	$('#ddlAlergiasMult').trigger('chosen:updated');
}
catch (err) {
	alert(err.message);
}
}
function SendMS_Exclusion_Ingredientes_Paciente(callBack, FolioId) {
            MS_Exclusion_Ingredientes_PacienteData = GetMS_Exclusion_Ingredientes_PacienteFromDataTable();

            if (MS_Exclusion_Ingredientes_PacienteData.length > 0 || $("#ReferenceFolio").val() != FolioId) {
                if ($("#ReferenceFolio").val() != "0" && FolioId ==null)
                    FolioId = $("#ReferenceFolio").val();                
                if ($("#ReferenceFolio").val() == '')
                    $("#ReferenceFolio").val('0');
                $.ajax({
                    url: '@Url.Content("~/Frontal/Pacientes/PostMS_Exclusion_Ingredientes_Paciente?MasterId=")' + FolioId + "&referenceId=" + $("#ReferenceFolio").val(),
                    type: 'POST',
                    data: GetMS_Exclusion_Ingredientes_Paciente(),
                    async: true,
                    success: function (result) {

                    },
                    error: function (result) {
                        showNotification("@Resources.Resources.ErrorContactingServer", "error");
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });
            } else {
                //showNotification("@Resources.Resources.SaveSuccess", "success");
                //callBack(FolioId);
            }
            return true;
        }

        function ShowMessagePendingRowMS_Exclusion_Ingredientes_Paciente()
        {
            alert('@string.Format(Resources.Resources.PendingRow, "Soy alérgico o intolerante a")')
        }

$(function () {
FillAlergias();
});
        var Detalle_Preferencia_BebidasinsertRowCurrentIndex = -1;
        var Detalle_Preferencia_BebidasDataDataTable;
        function getDetalle_Preferencia_BebidasData() {
            $.ajax({
                url: "@Url.Content("~/Frontal/Pacientes/GetDetalle_Preferencia_Bebidas")" + "?draw=1&start=1&length=2147483647" + ($("#ReferenceFolio").val() != "" ? "&RelationId=" + $("#ReferenceFolio").val() : ""),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                    Detalle_Preferencia_BebidasDataDataTable = result.data;
                    showDetalle_Preferencia_BebidasGrid(result.data);
                    $('#Detalle_Preferencia_BebidasGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_Preferencia_BebidasGrid .gridDatePicker').attr("readonly", "");
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
        function Detalle_Preferencia_BebidasGetUpdateRowControls(data, nameOfTable, rowIndex) {

            var columnData = [];
            var counter = 0;
            var inputData = "<input type='text' class='fullWidth form-control' />";

           columnData[counter++] = $($(GetDetalle_Preferencia_Bebidas_BebidasDropDown()).val(data.Bebida)).addClass('Bebida inputNumber').attr('id', nameOfTable + 'Bebida' + rowIndex).attr('data-field', 'Bebida').after($.parseHTML(addNew('Detalle_Preferencia_Bebidas', 'Bebidas','Bebida', 257698)));
           columnData[counter++] = $($(GetDetalle_Preferencia_Bebidas_Rango_Consumo_BebidasDropDown()).val(data.Cantidad)).addClass('Cantidad inputNumber').attr('id', nameOfTable + 'Cantidad' + rowIndex).attr('data-field', 'Cantidad').after($.parseHTML(addNew('Detalle_Preferencia_Bebidas', 'Rango_Consumo_Bebidas','Cantidad', 257699)));

            return columnData;
        }



        function GetFileInfo(fileData, fileUploadData) {

            var $div = $("<div>");
            if (fileUploadData != null && fileUploadData.files.length > 0) {

                $div.append("<label>" + fileUploadData.files[0].name + "</label>");
                //<i class="fa fa-times-circle" id='removeFileAttachment'>
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;

            } else if (fileUploadData != null) {
                return $.parseHTML(GetFileUploader());
            } else {
                $div.append("<label>" + fileData.FileName + "</label>");
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;
            }
        }

        var removedDetalle_Preferencia_BebidasData = [];
        function Detalle_Preferencia_BebidasDeleteRow(rowIndex, row) {
            var rowIndexTable = Detalle_Preferencia_BebidasTable.fnGetPosition($(row).parent().parent()[0]);
            var permission = {            
                 Delete: '@permissionDetalle_Preferencia_Bebidas.Delete' == 'True'
            };
            if (!permission.Delete || isConsultMode)
                return;            
            if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
              if (EjecutarValidacionesAlEliminarMRDetalle_Preferencia_Bebidas('Detalle_Preferencia_Bebidas_', '_' + rowIndex)) {
                var prevData = Detalle_Preferencia_BebidasTable.fnGetData(rowIndexTable );
                removedDetalle_Preferencia_BebidasData.push(prevData);
                Detalle_Preferencia_BebidasTable.fnDeleteRow(rowIndexTable );
				showDetalle_Preferencia_BebidasGrid(Detalle_Preferencia_BebidasTable.fnGetData());
              }
            }
			initiateUIControls();
        }

        function Detalle_Preferencia_BebidasrowCreationGrid(row, data, index) {
            var permission =  {            
                 Edit: '@permissionDetalle_Preferencia_Bebidas.Edit' == 'True',
                 Delete: '@permissionDetalle_Preferencia_Bebidas.Delete' == 'True'
            };
            setDetalle_Preferencia_BebidasValidation();
            var Detalle_Preferencia_BebidasRowElement = "Detalle_Preferencia_Bebidas_" + index.toString();
            $(row).addClass(Detalle_Preferencia_BebidasRowElement);
            var nameOfTable='Detalle_Preferencia_Bebidas_';
            var rowIndex = '_' + index;
            Detalle_Preferencia_BebidasinsertRowCurrentIndex = index;

            row.innerHTML = "";

            if (data.IsInsertRow) {

                if (row.childNodes.length != 0) {
                    for (var i = 0; i < row.childNodes.length; i++) {
                        row.childNodes[i].remove();
                    }
                }
                var controls = GetInsertDetalle_Preferencia_BebidasRowControls(index);
                var actionColInsert = $('<td>');

                var abc = "if(dynamicFieldValidation('" + Detalle_Preferencia_BebidasRowElement + "')){ Detalle_Preferencia_BebidasInsertRow(" + index + "); }";
                var insertRowHTML = '<a  data-toggle="tooltip" title="Confirmar Registro" onclick="' + abc + '">';
                $('<i class="fa fa-check">').appendTo($(insertRowHTML).appendTo(actionColInsert));
				$('<i class="fa fa-times">').appendTo($("<a data-toggle='tooltip' title='Cancelar Registro' onclick='Detalle_Preferencia_BebidasCancelRow(" + index + ")'>").appendTo(actionColInsert));
                actionColInsert.appendTo(row);

                for (i = 0; i < controls.length; i++) {
					var idHeader = $(controls[i]).data('field') + 'Header';
					if($(controls[i]).length > 1){
						idHeader = $($(controls[i])[1]).data('field') + 'Header';
					}					

					var classe = ($('#Detalle_Preferencia_BebidasGrid .' + idHeader).hasClass('dt-right') ? "dt-right" : "") + $('#Detalle_Preferencia_BebidasGrid .' + idHeader ).css('display') == 'none' ? " hide" : "";
				   
					if ($(controls[i]).next().length > 0) {
					    var div = $(controls[i]).next();
					    $('<td class="' + classe + '">').append($(controls[i])).append(div).appendTo(row);
					}else
					    $(controls[i]).appendTo($('<td class="' + classe + '">').appendTo(row));
					
                }
                $('#Detalle_Preferencia_BebidasGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('#Detalle_Preferencia_BebidasGrid .gridDatePicker').attr("readonly", "");
                return;
            }

            var actionCol = $('<td>');
			var edit = "<a title='@Resources.Resources.Edit' class='edit-MR' onclick='Detalle_Preferencia_BebidasEditRow(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                edit = "";
            var editPopUp = "<a title='@Resources.Resources.Edit' class='edit-popup-MR' data-toggle='modal' data-target='#AddDetalle_Preferencia_Bebidas-form' onclick='Detalle_Preferencia_BebidasEditRowPopup(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                editPopUp = "";
            var eliminar = "<a title='@Resources.Resources.Delete' class='eliminar-MR' onclick='Detalle_Preferencia_BebidasDeleteRow(" + index + ", this)'>";
            if (!permission.Delete || isConsultMode)
                eliminar = "";
            $('<i class="fa fa-pencil">').appendTo($(edit).appendTo(actionCol));
            //$('<i class="fa fa-edit">').appendTo($(editPopUp).appendTo(actionCol));
            $('<i class="fa fa-trash-o">').appendTo($(eliminar).appendTo(actionCol));
			if ($('.Action' + 'Header').css('display') != 'none')
				actionCol.appendTo(row);

            if ($('.Bebida' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Bebida'+rowIndex+'">').text(GetDetalle_Preferencia_Bebidas_BebidasName(data.Bebida)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Bebida'+rowIndex+'">').text(GetDetalle_Preferencia_Bebidas_BebidasName(data.Bebida)).appendTo(row);
            if ($('.Cantidad' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Cantidad'+rowIndex+'">').text(GetDetalle_Preferencia_Bebidas_Rango_Consumo_BebidasName(data.Cantidad)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Cantidad'+rowIndex+'">').text(GetDetalle_Preferencia_Bebidas_Rango_Consumo_BebidasName(data.Cantidad)).appendTo(row);

        }

        var Detalle_Preferencia_BebidasTable;
        function showDetalle_Preferencia_BebidasGrid(dataSet) {
            //removedDetalle_Preferencia_BebidasData = [];
            Detalle_Preferencia_BebidasTable = $('#Detalle_Preferencia_BebidasGrid').dataTable({
                dom: '<"html5buttons"B>lTgitp',
                buttons: [
                ],
                "createdRow": Detalle_Preferencia_BebidasrowCreationGrid,
                "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                data: dataSet,
                "columns": [
                    { "data": null, 'visible': true, "orderable": false },

                    { "data": "Bebida", "orderable": false },
                    { "data": "Cantidad", "orderable": false },

                ],
                "order": [[0, "asc"]],
                "language": {
                    "lengthMenu": "@Resources.Resources.Display" + " _MENU_ " + "@Resources.Resources.RecordsPerPage",
                    "zeroRecords": "@Resources.Resources.NothingFound",
                    "info": "@Resources.Resources.ShowingPages" + " _PAGE_ " + "@Resources.Resources.of" + " _PAGES_",
                    "infoEmpty": "@Resources.Resources.NoRecords",
                    "infoFiltered": "(" + "@Resources.Resources.FilteredFrom" + " _MAX_ " + "@Resources.Resources.TotalRecords" + ")",
                    "sSearch": "@Resources.Resources.Search",
                    "paginate": {
                        "previous": "@Resources.Resources.Previous",
                        "next": "@Resources.Resources.Next"
                    }
                },
				"bDestroy": true,
                "fnDrawCallback": function (settings) {
                    setDetalle_Preferencia_BebidasValidation();
                }
            }).on('init.dt', function (e, data) {
                $('a').tooltip();
            }).on('draw.dt', function () {
                $('#Detalle_Preferencia_BebidasGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('.gridDatePicker').inputmask("99-99-9999", { "placeholder": "dd-mm-yyyy" });
            });
        }


    var Detalle_Preferencia_Bebidas_BebidasItems;
        function GetDetalle_Preferencia_Bebidas_BebidasItem() {
            Detalle_Preferencia_Bebidas_BebidasItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_Preferencia_Bebidas_BebidasAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_Preferencia_Bebidas_BebidasItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
    var Detalle_Preferencia_Bebidas_Rango_Consumo_BebidasItems;
        function GetDetalle_Preferencia_Bebidas_Rango_Consumo_BebidasItem() {
            Detalle_Preferencia_Bebidas_Rango_Consumo_BebidasItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_Preferencia_Bebidas_Rango_Consumo_BebidasAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_Preferencia_Bebidas_Rango_Consumo_BebidasItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }

        var Detalle_Preferencia_BebidasData = [];
        var Detalle_Preferencia_BebidasdeletedItem = [];
        var Detalle_Preferencia_BebidasDataMain = [];
        var Detalle_Preferencia_BebidasDataMainPages = [];
        var Detalle_Preferencia_BebidasnewItemCount = 0;
        var Detalle_Preferencia_BebidasmaxItemIndex = 0;
        var Detalle_Preferencia_BebidasDataMainInitialized = false;

        function SendDetalle_Preferencia_Bebidas(callBack, FolioId) {
            Detalle_Preferencia_BebidasData = GetDetalle_Preferencia_BebidasFromDataTable();

            if (Detalle_Preferencia_BebidasData.length > 0 || $("#ReferenceFolio").val() != FolioId) {
                if ($("#ReferenceFolio").val() != "0" && FolioId ==null)
                    FolioId = $("#ReferenceFolio").val();                
                if ($("#ReferenceFolio").val() == '')
                    $("#ReferenceFolio").val('0');
                $.ajax({
                    url: '@Url.Content("~/Frontal/Pacientes/PostDetalle_Preferencia_Bebidas?MasterId=")' + FolioId + "&referenceId=" + $("#ReferenceFolio").val(),
                    type: 'POST',
                    data: GetDetalle_Preferencia_Bebidas(),
                    async: true,
                    success: function (result) {

                    },
                    error: function (result) {
                        showNotification("@Resources.Resources.ErrorContactingServer", "error");
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });
            } else {
                //showNotification("@Resources.Resources.SaveSuccess", "success");
                //callBack(FolioId);
            }
            return true;
        }

        function GetAddDetalle_Preferencia_BebidasPopup(currentRowIndex, mode, id) {

            $.ajax({
                url: "@Url.Action("AddDetalle_Preferencia_Bebidas", "Detalle_Preferencia_Bebidas")",
                type: "GET",
                async: false,
                data: { rowIndex: currentRowIndex, functionMode: mode, id: id },
                success: function (data) {
                    $(".AddDetalle_Preferencia_BebidasModal").html(data);
                },
                error: function () {

                }
            });

            @*$.get('@Url.Action("AddDetalle_Preferencia_Bebidas", "Detalle_Preferencia_Bebidas")', { rowIndex: currentRowIndex }, function (data) {
                $(".AddDetalle_Preferencia_BebidasModal").html(data);
            });*@
        }

        function ShowMessagePendingRowDetalle_Preferencia_Bebidas()
        {
            //alert('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Bebidas que consumo al día"))')
	    showNotification('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Bebidas que consumo al día"))', "warning");
        }
        var Detalle_Suscripciones_PacienteinsertRowCurrentIndex = -1;
        var Detalle_Suscripciones_PacienteDataDataTable;
        function getDetalle_Suscripciones_PacienteData() {
            $.ajax({
                url: "@Url.Content("~/Frontal/Pacientes/GetDetalle_Suscripciones_Paciente")" + "?draw=1&start=1&length=2147483647" + ($("#ReferenceFolio").val() != "" ? "&RelationId=" + $("#ReferenceFolio").val() : ""),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                    Detalle_Suscripciones_PacienteDataDataTable = result.data;
                    showDetalle_Suscripciones_PacienteGrid(result.data);
                    $('#Detalle_Suscripciones_PacienteGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_Suscripciones_PacienteGrid .gridDatePicker').attr("readonly", "");
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
        function Detalle_Suscripciones_PacienteGetUpdateRowControls(data, nameOfTable, rowIndex) {

            var columnData = [];
            var counter = 0;
            var inputData = "<input type='text' class='fullWidth form-control' />";

           columnData[counter++] = $($(GetDetalle_Suscripciones_Paciente_Planes_de_SuscripcionDropDown()).val(data.Suscripcion)).addClass('Suscripcion inputNumber').attr('id', nameOfTable + 'Suscripcion' + rowIndex).attr('data-field', 'Suscripcion').after($.parseHTML(addNew('Detalle_Suscripciones_Paciente', 'Planes_de_Suscripcion','Suscripcion', 258410)));
            columnData[counter++] = $($($.parseHTML(GetGridDatePicker())).val(data.Fecha_de_inicio)).addClass('Fecha_de_inicio').attr('id', nameOfTable + 'Fecha_de_inicio' + rowIndex).attr('data-field', 'Fecha_de_inicio');
            columnData[counter++] = $($($.parseHTML(GetGridDatePicker())).val(data.Fecha_fin)).addClass('Fecha_fin').attr('id', nameOfTable + 'Fecha_fin' + rowIndex).attr('data-field', 'Fecha_fin');
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Nombre_de_la_Suscripcion)).addClass('Nombre_de_la_Suscripcion').attr('id', nameOfTable + 'Nombre_de_la_Suscripcion' + rowIndex).attr('data-field', 'Nombre_de_la_Suscripcion');
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Costo)).addClass('Costo').attr('id', nameOfTable + 'Costo' + rowIndex).attr('data-field', 'Costo');
           columnData[counter++] = $($(GetDetalle_Suscripciones_Paciente_Estatus_de_SuscripcionDropDown()).val(data.Estatus)).addClass('Estatus inputNumber').attr('id', nameOfTable + 'Estatus' + rowIndex).attr('data-field', 'Estatus').after($.parseHTML(addNew('Detalle_Suscripciones_Paciente', 'Estatus_de_Suscripcion','Estatus', 258417)));

            return columnData;
        }



        function GetFileInfo(fileData, fileUploadData) {

            var $div = $("<div>");
            if (fileUploadData != null && fileUploadData.files.length > 0) {

                $div.append("<label>" + fileUploadData.files[0].name + "</label>");
                //<i class="fa fa-times-circle" id='removeFileAttachment'>
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;

            } else if (fileUploadData != null) {
                return $.parseHTML(GetFileUploader());
            } else {
                $div.append("<label>" + fileData.FileName + "</label>");
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;
            }
        }

        var removedDetalle_Suscripciones_PacienteData = [];
        function Detalle_Suscripciones_PacienteDeleteRow(rowIndex, row) {
            var rowIndexTable = Detalle_Suscripciones_PacienteTable.fnGetPosition($(row).parent().parent()[0]);
            var permission = {            
                 Delete: '@permissionDetalle_Suscripciones_Paciente.Delete' == 'True'
            };
            if (!permission.Delete || isConsultMode)
                return;            
            if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
              if (EjecutarValidacionesAlEliminarMRDetalle_Suscripciones_Paciente('Detalle_Suscripciones_Paciente_', '_' + rowIndex)) {
                var prevData = Detalle_Suscripciones_PacienteTable.fnGetData(rowIndexTable );
                removedDetalle_Suscripciones_PacienteData.push(prevData);
                Detalle_Suscripciones_PacienteTable.fnDeleteRow(rowIndexTable );
				showDetalle_Suscripciones_PacienteGrid(Detalle_Suscripciones_PacienteTable.fnGetData());
              }
            }
			initiateUIControls();
        }

        function Detalle_Suscripciones_PacienterowCreationGrid(row, data, index) {
            var permission =  {            
                 Edit: '@permissionDetalle_Suscripciones_Paciente.Edit' == 'True',
                 Delete: '@permissionDetalle_Suscripciones_Paciente.Delete' == 'True'
            };
            setDetalle_Suscripciones_PacienteValidation();
            var Detalle_Suscripciones_PacienteRowElement = "Detalle_Suscripciones_Paciente_" + index.toString();
            $(row).addClass(Detalle_Suscripciones_PacienteRowElement);
            var nameOfTable='Detalle_Suscripciones_Paciente_';
            var rowIndex = '_' + index;
            Detalle_Suscripciones_PacienteinsertRowCurrentIndex = index;

            row.innerHTML = "";

            if (data.IsInsertRow) {

                if (row.childNodes.length != 0) {
                    for (var i = 0; i < row.childNodes.length; i++) {
                        row.childNodes[i].remove();
                    }
                }
                var controls = GetInsertDetalle_Suscripciones_PacienteRowControls(index);
                var actionColInsert = $('<td>');

                var abc = "if(dynamicFieldValidation('" + Detalle_Suscripciones_PacienteRowElement + "')){ Detalle_Suscripciones_PacienteInsertRow(" + index + "); }";
                var insertRowHTML = '<a  data-toggle="tooltip" title="Confirmar Registro" onclick="' + abc + '">';
                $('<i class="fa fa-check">').appendTo($(insertRowHTML).appendTo(actionColInsert));
				$('<i class="fa fa-times">').appendTo($("<a data-toggle='tooltip' title='Cancelar Registro' onclick='Detalle_Suscripciones_PacienteCancelRow(" + index + ")'>").appendTo(actionColInsert));
                actionColInsert.appendTo(row);

                for (i = 0; i < controls.length; i++) {
					var idHeader = $(controls[i]).data('field') + 'Header';
					if($(controls[i]).length > 1){
						idHeader = $($(controls[i])[1]).data('field') + 'Header';
					}					

					var classe = ($('#Detalle_Suscripciones_PacienteGrid .' + idHeader).hasClass('dt-right') ? "dt-right" : "") + $('#Detalle_Suscripciones_PacienteGrid .' + idHeader ).css('display') == 'none' ? " hide" : "";
				   
					if ($(controls[i]).next().length > 0) {
					    var div = $(controls[i]).next();
					    $('<td class="' + classe + '">').append($(controls[i])).append(div).appendTo(row);
					}else
					    $(controls[i]).appendTo($('<td class="' + classe + '">').appendTo(row));
					
                }
                $('#Detalle_Suscripciones_PacienteGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('#Detalle_Suscripciones_PacienteGrid .gridDatePicker').attr("readonly", "");
                return;
            }

            var actionCol = $('<td>');
			var edit = "<a title='@Resources.Resources.Edit' class='edit-MR' onclick='Detalle_Suscripciones_PacienteEditRow(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                edit = "";
            var editPopUp = "<a title='@Resources.Resources.Edit' class='edit-popup-MR' data-toggle='modal' data-target='#AddDetalle_Suscripciones_Paciente-form' onclick='Detalle_Suscripciones_PacienteEditRowPopup(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                editPopUp = "";
            var eliminar = "<a title='@Resources.Resources.Delete' class='eliminar-MR' onclick='Detalle_Suscripciones_PacienteDeleteRow(" + index + ", this)'>";
            if (!permission.Delete || isConsultMode)
                eliminar = "";
            $('<i class="fa fa-pencil">').appendTo($(edit).appendTo(actionCol));
            //$('<i class="fa fa-edit">').appendTo($(editPopUp).appendTo(actionCol));
            $('<i class="fa fa-trash-o">').appendTo($(eliminar).appendTo(actionCol));
			if ($('.Action' + 'Header').css('display') != 'none')
				actionCol.appendTo(row);

            if ($('.Suscripcion' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Suscripcion'+rowIndex+'">').text(GetDetalle_Suscripciones_Paciente_Planes_de_SuscripcionName(data.Suscripcion)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Suscripcion'+rowIndex+'">').text(GetDetalle_Suscripciones_Paciente_Planes_de_SuscripcionName(data.Suscripcion)).appendTo(row);
            if ($('.Fecha_de_inicio' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Fecha_de_inicio'+rowIndex+'">').text(data.Fecha_de_inicio).appendTo(row);
            else
                $('<td style="display:none;" id="'+nameOfTable+'Fecha_de_inicio'+rowIndex+'">').text(data.Fecha_de_inicio).appendTo(row);
            if ($('.Fecha_fin' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Fecha_fin'+rowIndex+'">').text(data.Fecha_fin).appendTo(row);
            else
                $('<td style="display:none;" id="'+nameOfTable+'Fecha_fin'+rowIndex+'">').text(data.Fecha_fin).appendTo(row);
            if ($('.Nombre_de_la_Suscripcion' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Nombre_de_la_Suscripcion'+rowIndex+'">').text(data.Nombre_de_la_Suscripcion).appendTo(row);
            else 
                $('<td style="display:none;" id="'+nameOfTable+'Nombre_de_la_Suscripcion'+rowIndex+'">').text(data.Nombre_de_la_Suscripcion).appendTo(row);
            if ($('.Costo' + 'Header').css('display') != 'none')
                $('<td class="dt-right"  id="'+nameOfTable+'Costo'+rowIndex+'">').text(data.Costo).appendTo(row);
            else 
                 $('<td style="display:none" class="dt-right"  id="'+nameOfTable+'Costo'+rowIndex+'">').text(data.Costo).appendTo(row);
            if ($('.Estatus' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Estatus'+rowIndex+'">').text(GetDetalle_Suscripciones_Paciente_Estatus_de_SuscripcionName(data.Estatus)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Estatus'+rowIndex+'">').text(GetDetalle_Suscripciones_Paciente_Estatus_de_SuscripcionName(data.Estatus)).appendTo(row);

        }

        var Detalle_Suscripciones_PacienteTable;
        function showDetalle_Suscripciones_PacienteGrid(dataSet) {
            //removedDetalle_Suscripciones_PacienteData = [];
            Detalle_Suscripciones_PacienteTable = $('#Detalle_Suscripciones_PacienteGrid').dataTable({
                dom: '<"html5buttons"B>lTgitp',
                buttons: [
                ],
                "createdRow": Detalle_Suscripciones_PacienterowCreationGrid,
                "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                data: dataSet,
                "columns": [
                    { "data": null, 'visible': true, "orderable": false },

                    { "data": "Suscripcion", "orderable": false },
                    { "data": "Fecha_de_inicio", "orderable": false },
                    { "data": "Fecha_fin", "orderable": false },
                    { "data": "Nombre_de_la_Suscripcion", "orderable": false },
                    { "data": "Costo","className": "dt-right", "orderable": false },
                    { "data": "Estatus", "orderable": false },

                ],
                "order": [[0, "asc"]],
                "language": {
                    "lengthMenu": "@Resources.Resources.Display" + " _MENU_ " + "@Resources.Resources.RecordsPerPage",
                    "zeroRecords": "@Resources.Resources.NothingFound",
                    "info": "@Resources.Resources.ShowingPages" + " _PAGE_ " + "@Resources.Resources.of" + " _PAGES_",
                    "infoEmpty": "@Resources.Resources.NoRecords",
                    "infoFiltered": "(" + "@Resources.Resources.FilteredFrom" + " _MAX_ " + "@Resources.Resources.TotalRecords" + ")",
                    "sSearch": "@Resources.Resources.Search",
                    "paginate": {
                        "previous": "@Resources.Resources.Previous",
                        "next": "@Resources.Resources.Next"
                    }
                },
				"bDestroy": true,
                "fnDrawCallback": function (settings) {
                    setDetalle_Suscripciones_PacienteValidation();
                }
            }).on('init.dt', function (e, data) {
                $('a').tooltip();
            }).on('draw.dt', function () {
                $('#Detalle_Suscripciones_PacienteGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('.gridDatePicker').inputmask("99-99-9999", { "placeholder": "dd-mm-yyyy" });
            });
        }


    var Detalle_Suscripciones_Paciente_Planes_de_SuscripcionItems;
        function GetDetalle_Suscripciones_Paciente_Planes_de_SuscripcionItem() {
            Detalle_Suscripciones_Paciente_Planes_de_SuscripcionItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_Suscripciones_Paciente_Planes_de_SuscripcionAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_Suscripciones_Paciente_Planes_de_SuscripcionItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }




    var Detalle_Suscripciones_Paciente_Estatus_de_SuscripcionItems;
        function GetDetalle_Suscripciones_Paciente_Estatus_de_SuscripcionItem() {
            Detalle_Suscripciones_Paciente_Estatus_de_SuscripcionItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_Suscripciones_Paciente_Estatus_de_SuscripcionAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_Suscripciones_Paciente_Estatus_de_SuscripcionItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }

        var Detalle_Suscripciones_PacienteData = [];
        var Detalle_Suscripciones_PacientedeletedItem = [];
        var Detalle_Suscripciones_PacienteDataMain = [];
        var Detalle_Suscripciones_PacienteDataMainPages = [];
        var Detalle_Suscripciones_PacientenewItemCount = 0;
        var Detalle_Suscripciones_PacientemaxItemIndex = 0;
        var Detalle_Suscripciones_PacienteDataMainInitialized = false;

        function SendDetalle_Suscripciones_Paciente(callBack, FolioId) {
            Detalle_Suscripciones_PacienteData = GetDetalle_Suscripciones_PacienteFromDataTable();

            if (Detalle_Suscripciones_PacienteData.length > 0 || $("#ReferenceFolio").val() != FolioId) {
                if ($("#ReferenceFolio").val() != "0" && FolioId ==null)
                    FolioId = $("#ReferenceFolio").val();                
                if ($("#ReferenceFolio").val() == '')
                    $("#ReferenceFolio").val('0');
                $.ajax({
                    url: '@Url.Content("~/Frontal/Pacientes/PostDetalle_Suscripciones_Paciente?MasterId=")' + FolioId + "&referenceId=" + $("#ReferenceFolio").val(),
                    type: 'POST',
                    data: GetDetalle_Suscripciones_Paciente(),
                    async: true,
                    success: function (result) {

                    },
                    error: function (result) {
                        showNotification("@Resources.Resources.ErrorContactingServer", "error");
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });
            } else {
                //showNotification("@Resources.Resources.SaveSuccess", "success");
                //callBack(FolioId);
            }
            return true;
        }

        function GetAddDetalle_Suscripciones_PacientePopup(currentRowIndex, mode, id) {

            $.ajax({
                url: "@Url.Action("AddDetalle_Suscripciones_Paciente", "Detalle_Suscripciones_Paciente")",
                type: "GET",
                async: false,
                data: { rowIndex: currentRowIndex, functionMode: mode, id: id },
                success: function (data) {
                    $(".AddDetalle_Suscripciones_PacienteModal").html(data);
                },
                error: function () {

                }
            });

            @*$.get('@Url.Action("AddDetalle_Suscripciones_Paciente", "Detalle_Suscripciones_Paciente")', { rowIndex: currentRowIndex }, function (data) {
                $(".AddDetalle_Suscripciones_PacienteModal").html(data);
            });*@
        }

        function ShowMessagePendingRowDetalle_Suscripciones_Paciente()
        {
            //alert('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Suscripciones"))')
	    showNotification('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Suscripciones"))', "warning");
        }
        var Detalle_Pagos_PacienteinsertRowCurrentIndex = -1;
        var Detalle_Pagos_PacienteDataDataTable;
        function getDetalle_Pagos_PacienteData() {
            $.ajax({
                url: "@Url.Content("~/Frontal/Pacientes/GetDetalle_Pagos_Paciente")" + "?draw=1&start=1&length=2147483647" + ($("#ReferenceFolio").val() != "" ? "&RelationId=" + $("#ReferenceFolio").val() : ""),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                    Detalle_Pagos_PacienteDataDataTable = result.data;
                    showDetalle_Pagos_PacienteGrid(result.data);
                    $('#Detalle_Pagos_PacienteGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_Pagos_PacienteGrid .gridDatePicker').attr("readonly", "");
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
        function Detalle_Pagos_PacienteGetUpdateRowControls(data, nameOfTable, rowIndex) {

            var columnData = [];
            var counter = 0;
            var inputData = "<input type='text' class='fullWidth form-control' />";

           columnData[counter++] = $($(GetDetalle_Pagos_Paciente_Planes_de_SuscripcionDropDown()).val(data.Suscripcion)).addClass('Suscripcion inputNumber').attr('id', nameOfTable + 'Suscripcion' + rowIndex).attr('data-field', 'Suscripcion').after($.parseHTML(addNew('Detalle_Pagos_Paciente', 'Planes_de_Suscripcion','Suscripcion', 258420)));
            columnData[counter++] = $($($.parseHTML(GetGridDatePicker())).val(data.Fecha_de_Suscripcion)).addClass('Fecha_de_Suscripcion').attr('id', nameOfTable + 'Fecha_de_Suscripcion' + rowIndex).attr('data-field', 'Fecha_de_Suscripcion');
            columnData[counter++] = $($($.parseHTML(GetGridDatePicker())).val(data.Fecha_Limite_de_Pago)).addClass('Fecha_Limite_de_Pago').attr('id', nameOfTable + 'Fecha_Limite_de_Pago' + rowIndex).attr('data-field', 'Fecha_Limite_de_Pago');
           columnData[counter++] = $($(GetDetalle_Pagos_Paciente_Formas_de_PagoDropDown()).val(data.Forma_de_Pago)).addClass('Forma_de_Pago inputNumber').attr('id', nameOfTable + 'Forma_de_Pago' + rowIndex).attr('data-field', 'Forma_de_Pago').after($.parseHTML(addNew('Detalle_Pagos_Paciente', 'Formas_de_Pago','Forma_de_Pago', 258424)));
            columnData[counter++] = $($($.parseHTML(GetGridDatePicker())).val(data.Fecha_de_Pago)).addClass('Fecha_de_Pago').attr('id', nameOfTable + 'Fecha_de_Pago' + rowIndex).attr('data-field', 'Fecha_de_Pago');
           columnData[counter++] = $($(GetDetalle_Pagos_Paciente_Estatus_de_PagoDropDown()).val(data.Estatus)).addClass('Estatus inputNumber').attr('id', nameOfTable + 'Estatus' + rowIndex).attr('data-field', 'Estatus').after($.parseHTML(addNew('Detalle_Pagos_Paciente', 'Estatus_de_Pago','Estatus', 258426)));

            return columnData;
        }



        function GetFileInfo(fileData, fileUploadData) {

            var $div = $("<div>");
            if (fileUploadData != null && fileUploadData.files.length > 0) {

                $div.append("<label>" + fileUploadData.files[0].name + "</label>");
                //<i class="fa fa-times-circle" id='removeFileAttachment'>
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;

            } else if (fileUploadData != null) {
                return $.parseHTML(GetFileUploader());
            } else {
                $div.append("<label>" + fileData.FileName + "</label>");
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;
            }
        }

        var removedDetalle_Pagos_PacienteData = [];
        function Detalle_Pagos_PacienteDeleteRow(rowIndex, row) {
            var rowIndexTable = Detalle_Pagos_PacienteTable.fnGetPosition($(row).parent().parent()[0]);
            var permission = {            
                 Delete: '@permissionDetalle_Pagos_Paciente.Delete' == 'True'
            };
            if (!permission.Delete || isConsultMode)
                return;            
            if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
              if (EjecutarValidacionesAlEliminarMRDetalle_Pagos_Paciente('Detalle_Pagos_Paciente_', '_' + rowIndex)) {
                var prevData = Detalle_Pagos_PacienteTable.fnGetData(rowIndexTable );
                removedDetalle_Pagos_PacienteData.push(prevData);
                Detalle_Pagos_PacienteTable.fnDeleteRow(rowIndexTable );
				showDetalle_Pagos_PacienteGrid(Detalle_Pagos_PacienteTable.fnGetData());
              }
            }
			initiateUIControls();
        }

        function Detalle_Pagos_PacienterowCreationGrid(row, data, index) {
            var permission =  {            
                 Edit: '@permissionDetalle_Pagos_Paciente.Edit' == 'True',
                 Delete: '@permissionDetalle_Pagos_Paciente.Delete' == 'True'
            };
            setDetalle_Pagos_PacienteValidation();
            var Detalle_Pagos_PacienteRowElement = "Detalle_Pagos_Paciente_" + index.toString();
            $(row).addClass(Detalle_Pagos_PacienteRowElement);
            var nameOfTable='Detalle_Pagos_Paciente_';
            var rowIndex = '_' + index;
            Detalle_Pagos_PacienteinsertRowCurrentIndex = index;

            row.innerHTML = "";

            if (data.IsInsertRow) {

                if (row.childNodes.length != 0) {
                    for (var i = 0; i < row.childNodes.length; i++) {
                        row.childNodes[i].remove();
                    }
                }
                var controls = GetInsertDetalle_Pagos_PacienteRowControls(index);
                var actionColInsert = $('<td>');

                var abc = "if(dynamicFieldValidation('" + Detalle_Pagos_PacienteRowElement + "')){ Detalle_Pagos_PacienteInsertRow(" + index + "); }";
                var insertRowHTML = '<a  data-toggle="tooltip" title="Confirmar Registro" onclick="' + abc + '">';
                $('<i class="fa fa-check">').appendTo($(insertRowHTML).appendTo(actionColInsert));
				$('<i class="fa fa-times">').appendTo($("<a data-toggle='tooltip' title='Cancelar Registro' onclick='Detalle_Pagos_PacienteCancelRow(" + index + ")'>").appendTo(actionColInsert));
                actionColInsert.appendTo(row);

                for (i = 0; i < controls.length; i++) {
					var idHeader = $(controls[i]).data('field') + 'Header';
					if($(controls[i]).length > 1){
						idHeader = $($(controls[i])[1]).data('field') + 'Header';
					}					

					var classe = ($('#Detalle_Pagos_PacienteGrid .' + idHeader).hasClass('dt-right') ? "dt-right" : "") + $('#Detalle_Pagos_PacienteGrid .' + idHeader ).css('display') == 'none' ? " hide" : "";
				   
					if ($(controls[i]).next().length > 0) {
					    var div = $(controls[i]).next();
					    $('<td class="' + classe + '">').append($(controls[i])).append(div).appendTo(row);
					}else
					    $(controls[i]).appendTo($('<td class="' + classe + '">').appendTo(row));
					
                }
                $('#Detalle_Pagos_PacienteGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('#Detalle_Pagos_PacienteGrid .gridDatePicker').attr("readonly", "");
                return;
            }

            var actionCol = $('<td>');
			var edit = "<a title='@Resources.Resources.Edit' class='edit-MR' onclick='Detalle_Pagos_PacienteEditRow(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                edit = "";
            var editPopUp = "<a title='@Resources.Resources.Edit' class='edit-popup-MR' data-toggle='modal' data-target='#AddDetalle_Pagos_Paciente-form' onclick='Detalle_Pagos_PacienteEditRowPopup(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                editPopUp = "";
            var eliminar = "<a title='@Resources.Resources.Delete' class='eliminar-MR' onclick='Detalle_Pagos_PacienteDeleteRow(" + index + ", this)'>";
            if (!permission.Delete || isConsultMode)
                eliminar = "";
            $('<i class="fa fa-pencil">').appendTo($(edit).appendTo(actionCol));
            //$('<i class="fa fa-edit">').appendTo($(editPopUp).appendTo(actionCol));
            $('<i class="fa fa-trash-o">').appendTo($(eliminar).appendTo(actionCol));
			if ($('.Action' + 'Header').css('display') != 'none')
				actionCol.appendTo(row);

            if ($('.Suscripcion' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Suscripcion'+rowIndex+'">').text(GetDetalle_Pagos_Paciente_Planes_de_SuscripcionName(data.Suscripcion)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Suscripcion'+rowIndex+'">').text(GetDetalle_Pagos_Paciente_Planes_de_SuscripcionName(data.Suscripcion)).appendTo(row);
            if ($('.Fecha_de_Suscripcion' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Fecha_de_Suscripcion'+rowIndex+'">').text(data.Fecha_de_Suscripcion).appendTo(row);
            else
                $('<td style="display:none;" id="'+nameOfTable+'Fecha_de_Suscripcion'+rowIndex+'">').text(data.Fecha_de_Suscripcion).appendTo(row);
            if ($('.Fecha_Limite_de_Pago' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Fecha_Limite_de_Pago'+rowIndex+'">').text(data.Fecha_Limite_de_Pago).appendTo(row);
            else
                $('<td style="display:none;" id="'+nameOfTable+'Fecha_Limite_de_Pago'+rowIndex+'">').text(data.Fecha_Limite_de_Pago).appendTo(row);
            if ($('.Forma_de_Pago' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Forma_de_Pago'+rowIndex+'">').text(GetDetalle_Pagos_Paciente_Formas_de_PagoName(data.Forma_de_Pago)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Forma_de_Pago'+rowIndex+'">').text(GetDetalle_Pagos_Paciente_Formas_de_PagoName(data.Forma_de_Pago)).appendTo(row);
            if ($('.Fecha_de_Pago' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Fecha_de_Pago'+rowIndex+'">').text(data.Fecha_de_Pago).appendTo(row);
            else
                $('<td style="display:none;" id="'+nameOfTable+'Fecha_de_Pago'+rowIndex+'">').text(data.Fecha_de_Pago).appendTo(row);
            if ($('.Estatus' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Estatus'+rowIndex+'">').text(GetDetalle_Pagos_Paciente_Estatus_de_PagoName(data.Estatus)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Estatus'+rowIndex+'">').text(GetDetalle_Pagos_Paciente_Estatus_de_PagoName(data.Estatus)).appendTo(row);

        }

        var Detalle_Pagos_PacienteTable;
        function showDetalle_Pagos_PacienteGrid(dataSet) {
            //removedDetalle_Pagos_PacienteData = [];
            Detalle_Pagos_PacienteTable = $('#Detalle_Pagos_PacienteGrid').dataTable({
                dom: '<"html5buttons"B>lTgitp',
                buttons: [
                ],
                "createdRow": Detalle_Pagos_PacienterowCreationGrid,
                "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                data: dataSet,
                "columns": [
                    { "data": null, 'visible': true, "orderable": false },

                    { "data": "Suscripcion", "orderable": false },
                    { "data": "Fecha_de_Suscripcion", "orderable": false },
                    { "data": "Fecha_Limite_de_Pago", "orderable": false },
                    { "data": "Forma_de_Pago", "orderable": false },
                    { "data": "Fecha_de_Pago", "orderable": false },
                    { "data": "Estatus", "orderable": false },

                ],
                "order": [[0, "asc"]],
                "language": {
                    "lengthMenu": "@Resources.Resources.Display" + " _MENU_ " + "@Resources.Resources.RecordsPerPage",
                    "zeroRecords": "@Resources.Resources.NothingFound",
                    "info": "@Resources.Resources.ShowingPages" + " _PAGE_ " + "@Resources.Resources.of" + " _PAGES_",
                    "infoEmpty": "@Resources.Resources.NoRecords",
                    "infoFiltered": "(" + "@Resources.Resources.FilteredFrom" + " _MAX_ " + "@Resources.Resources.TotalRecords" + ")",
                    "sSearch": "@Resources.Resources.Search",
                    "paginate": {
                        "previous": "@Resources.Resources.Previous",
                        "next": "@Resources.Resources.Next"
                    }
                },
				"bDestroy": true,
                "fnDrawCallback": function (settings) {
                    setDetalle_Pagos_PacienteValidation();
                }
            }).on('init.dt', function (e, data) {
                $('a').tooltip();
            }).on('draw.dt', function () {
                $('#Detalle_Pagos_PacienteGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('.gridDatePicker').inputmask("99-99-9999", { "placeholder": "dd-mm-yyyy" });
            });
        }


    var Detalle_Pagos_Paciente_Planes_de_SuscripcionItems;
        function GetDetalle_Pagos_Paciente_Planes_de_SuscripcionItem() {
            Detalle_Pagos_Paciente_Planes_de_SuscripcionItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_Pagos_Paciente_Planes_de_SuscripcionAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_Pagos_Paciente_Planes_de_SuscripcionItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }


    var Detalle_Pagos_Paciente_Formas_de_PagoItems;
        function GetDetalle_Pagos_Paciente_Formas_de_PagoItem() {
            Detalle_Pagos_Paciente_Formas_de_PagoItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_Pagos_Paciente_Formas_de_PagoAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_Pagos_Paciente_Formas_de_PagoItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }

    var Detalle_Pagos_Paciente_Estatus_de_PagoItems;
        function GetDetalle_Pagos_Paciente_Estatus_de_PagoItem() {
            Detalle_Pagos_Paciente_Estatus_de_PagoItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_Pagos_Paciente_Estatus_de_PagoAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_Pagos_Paciente_Estatus_de_PagoItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }

        var Detalle_Pagos_PacienteData = [];
        var Detalle_Pagos_PacientedeletedItem = [];
        var Detalle_Pagos_PacienteDataMain = [];
        var Detalle_Pagos_PacienteDataMainPages = [];
        var Detalle_Pagos_PacientenewItemCount = 0;
        var Detalle_Pagos_PacientemaxItemIndex = 0;
        var Detalle_Pagos_PacienteDataMainInitialized = false;

        /*CODMANINI-ADD*/
            function CancelarOpenPay() {
                showme = document.getElementById("idOpenPayForm");
                showme.style.display = "none";
                showme.className = "modal fade";
            }

            $(document).ready(function () {

                var deviceSessionId = "";

                $('#pay-button').on('click', function (event) {
                    OpenPay.setId('mrccr1wmntedipfiekde');
                    OpenPay.setApiKey('pk_43043afcefa14005b29156c1c60c6e86');
                    OpenPay.setSandboxMode(true);
                    //Se genera el id de dispositivo
                    deviceSessionId = OpenPay.deviceData.setup("payment-form", "deviceIdHiddenFieldName");
                    event.preventDefault();
                    $("#pay-button").prop("disabled", true);
                    OpenPay.token.extractFormAndCreate('payment-form', sucess_callbak, error_callbak);
                });

                var sucess_callbak = function (response) {
                    var token_id = response.data.id;
                    console.log("deviceID: " + deviceSessionId);
                    console.log("tokenID: " + token_id);
                    console.log($('#CasillaOP').val());
                    var casilla = $('#CasillaOP').val();
                    var device = $('#DeviceOP').val();
                    var rowindice = $('#RowOP').val();
                    var row = parseInt(rowindice.replace("_", ""));
                    CancelarOpenPay();
                    console.log("rowindice: " + row);
                    document.getElementById(casilla).innerHTML = token_id;
                    document.getElementById(device).innerHTML = deviceSessionId;
                    var prevData = Detalle_Pagos_Pacientes_OpenPayTable.fnGetData(row);
                    console.log(prevData);
                    var newData = {
                        Folio: prevData.Folio,
                        IsInsertRow: false
                        , Usuario_que_Registra: prevData.Usuario_que_Registra
                        , Fecha_de_Pago: prevData.Fecha_de_Pago
                        , Hora_de_Pago: prevData.Hora_de_Pago
                        , TokenID: token_id
                        , Importe: prevData.Importe
                        , Concepto: prevData.Concepto
                        , Forma_de_pago: prevData.Forma_de_pago
                        , Autorizacion: prevData.Autorizacion
                        , Nombre: prevData.Nombre
                        , Apellidos: prevData.Apellidos
                        , Telefono: prevData.Telefono
                        , Email: prevData.Email
                        , DeviceID: deviceSessionId
                        , UsaPuntos: false
                        , PuntosID: prevData.PuntosID
                        , Estatus: prevData.Estatus
                    }
                    console.log("aCTUALIZANDO");
                    Detalle_Pagos_Pacientes_OpenPayTable.fnUpdate(newData, row, null, true);
                    prevData = Detalle_Pagos_Pacientes_OpenPayTable.fnGetData(row);
                    console.log(prevData);
                };

                var error_callbak = function (response) {
                    var desc = response.data.description != undefined ? response.data.description : response.message;
                    alert("ERROR [" + response.status + "] " + desc);
                    $("#pay-button").prop("disabled", false);
                };

            });
         /*CODMANFIN-ADD*/


        function SendDetalle_Pagos_Paciente(callBack, FolioId) {
            Detalle_Pagos_PacienteData = GetDetalle_Pagos_PacienteFromDataTable();

            if (Detalle_Pagos_PacienteData.length > 0 || $("#ReferenceFolio").val() != FolioId) {
                if ($("#ReferenceFolio").val() != "0" && FolioId ==null)
                    FolioId = $("#ReferenceFolio").val();                
                if ($("#ReferenceFolio").val() == '')
                    $("#ReferenceFolio").val('0');
                $.ajax({
                    url: '@Url.Content("~/Frontal/Pacientes/PostDetalle_Pagos_Paciente?MasterId=")' + FolioId + "&referenceId=" + $("#ReferenceFolio").val(),
                    type: 'POST',
                    data: GetDetalle_Pagos_Paciente(),
                    async: true,
                    success: function (result) {

                    },
                    error: function (result) {
                        showNotification("@Resources.Resources.ErrorContactingServer", "error");
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });
            } else {
                //showNotification("@Resources.Resources.SaveSuccess", "success");
                //callBack(FolioId);
            }
            return true;
        }

        function GetAddDetalle_Pagos_PacientePopup(currentRowIndex, mode, id) {

            $.ajax({
                url: "@Url.Action("AddDetalle_Pagos_Paciente", "Detalle_Pagos_Paciente")",
                type: "GET",
                async: false,
                data: { rowIndex: currentRowIndex, functionMode: mode, id: id },
                success: function (data) {
                    $(".AddDetalle_Pagos_PacienteModal").html(data);
                },
                error: function () {

                }
            });

            @*$.get('@Url.Action("AddDetalle_Pagos_Paciente", "Detalle_Pagos_Paciente")', { rowIndex: currentRowIndex }, function (data) {
                $(".AddDetalle_Pagos_PacienteModal").html(data);
            });*@
        }

        function ShowMessagePendingRowDetalle_Pagos_Paciente()
        {
            //alert('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Plan de Pagos"))')
	    showNotification('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Plan de Pagos"))', "warning");
        }
        var Detalle_Pagos_Pacientes_OpenPayinsertRowCurrentIndex = -1;
        var Detalle_Pagos_Pacientes_OpenPayDataDataTable;
        function getDetalle_Pagos_Pacientes_OpenPayData() {
            $.ajax({
                url: "@Url.Content("~/Frontal/Pacientes/GetDetalle_Pagos_Pacientes_OpenPay")" + "?draw=1&start=1&length=2147483647" + ($("#ReferenceFolio").val() != "" ? "&RelationId=" + $("#ReferenceFolio").val() : ""),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                    Detalle_Pagos_Pacientes_OpenPayDataDataTable = result.data;
                    showDetalle_Pagos_Pacientes_OpenPayGrid(result.data);
                    $('#Detalle_Pagos_Pacientes_OpenPayGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_Pagos_Pacientes_OpenPayGrid .gridDatePicker').attr("readonly", "");
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
        function Detalle_Pagos_Pacientes_OpenPayGetUpdateRowControls(data, nameOfTable, rowIndex) {

            var columnData = [];
            var counter = 0;
            var inputData = "<input type='text' class='fullWidth form-control' />";

           columnData[counter++] = $($(GetDetalle_Pagos_Pacientes_OpenPay_Spartan_UserDropDown()).val(data.Usuario_que_Registra)).addClass('Usuario_que_Registra inputNumber').attr('id', nameOfTable + 'Usuario_que_Registra' + rowIndex).attr('data-field', 'Usuario_que_Registra').after($.parseHTML(addNew('Detalle_Pagos_Pacientes_OpenPay', 'Spartan_User','Usuario_que_Registra', 260734)));
            columnData[counter++] = $($($.parseHTML(GetGridDatePicker())).val(data.Fecha_de_Pago)).addClass('Fecha_de_Pago').attr('id', nameOfTable + 'Fecha_de_Pago' + rowIndex).attr('data-field', 'Fecha_de_Pago');
            columnData[counter++] = $($($.parseHTML(GetGridTimePicker())).val(data.Hora_de_Pago)).addClass('Hora_de_Pago').attr('id', nameOfTable + 'Hora_de_Pago' + rowIndex).attr('data-field', 'Hora_de_Pago');
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.TokenID)).addClass('TokenID').attr('id', nameOfTable + 'TokenID' + rowIndex).attr('data-field', 'TokenID');
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Importe)).addClass('Importe').attr('id', nameOfTable + 'Importe' + rowIndex).attr('data-field', 'Importe');
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Concepto)).addClass('Concepto').attr('id', nameOfTable + 'Concepto' + rowIndex).attr('data-field', 'Concepto');
           columnData[counter++] = $($(GetDetalle_Pagos_Pacientes_OpenPay_Formas_de_PagoDropDown()).val(data.Forma_de_pago)).addClass('Forma_de_pago inputNumber').attr('id', nameOfTable + 'Forma_de_pago' + rowIndex).attr('data-field', 'Forma_de_pago').after($.parseHTML(addNew('Detalle_Pagos_Pacientes_OpenPay', 'Formas_de_Pago','Forma_de_pago', 260740)));
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Autorizacion)).addClass('Autorizacion').attr('id', nameOfTable + 'Autorizacion' + rowIndex).attr('data-field', 'Autorizacion');
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Nombre)).addClass('Nombre').attr('id', nameOfTable + 'Nombre' + rowIndex).attr('data-field', 'Nombre');
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Apellidos)).addClass('Apellidos').attr('id', nameOfTable + 'Apellidos' + rowIndex).attr('data-field', 'Apellidos');
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Telefono)).addClass('Telefono').attr('id', nameOfTable + 'Telefono' + rowIndex).attr('data-field', 'Telefono');
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.Email)).addClass('Email').attr('id', nameOfTable + 'Email' + rowIndex).attr('data-field', 'Email');
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.DeviceID)).addClass('DeviceID').attr('id', nameOfTable + 'DeviceID' + rowIndex).attr('data-field', 'DeviceID');
              columnData[counter++] = $($($.parseHTML(GetGridCheckBox())).prop('checked', (data.UsaPuntos=="true" || data.UsaPuntos==true)? 'checked': ''? 'checked': '')).addClass('UsaPuntos').attr('id', nameOfTable + 'UsaPuntos' + rowIndex).attr('data-field', 'UsaPuntos');
            columnData[counter++] = $($($.parseHTML(inputData)).val(data.PuntosID)).addClass('PuntosID').attr('id', nameOfTable + 'PuntosID' + rowIndex).attr('data-field', 'PuntosID');
           columnData[counter++] = $($(GetDetalle_Pagos_Pacientes_OpenPay_Estatus_de_PagoDropDown()).val(data.Estatus)).addClass('Estatus inputNumber').attr('id', nameOfTable + 'Estatus' + rowIndex).attr('data-field', 'Estatus').after($.parseHTML(addNew('Detalle_Pagos_Pacientes_OpenPay', 'Estatus_de_Pago','Estatus', 260762)));

            return columnData;
        }



        function GetFileInfo(fileData, fileUploadData) {

            var $div = $("<div>");
            if (fileUploadData != null && fileUploadData.files.length > 0) {

                $div.append("<label>" + fileUploadData.files[0].name + "</label>");
                //<i class="fa fa-times-circle" id='removeFileAttachment'>
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;

            } else if (fileUploadData != null) {
                return $.parseHTML(GetFileUploader());
            } else {
                $div.append("<label>" + fileData.FileName + "</label>");
                $div.append($("<i class='fa fa-times-circle' id='removeFileAttachment'>").click(function () {
                    if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
                        var parent = $(this).parent().parent();
                        parent.empty();
                        parent.append("<input type='file'>");
                    }
                }));
                return $div;
            }
        }

        var removedDetalle_Pagos_Pacientes_OpenPayData = [];
        function Detalle_Pagos_Pacientes_OpenPayDeleteRow(rowIndex, row) {
            var rowIndexTable = Detalle_Pagos_Pacientes_OpenPayTable.fnGetPosition($(row).parent().parent()[0]);
            var permission = {            
                 Delete: '@permissionDetalle_Pagos_Pacientes_OpenPay.Delete' == 'True'
            };
            if (!permission.Delete || isConsultMode)
                return;            
            if (confirm(htmlDecode("@Resources.Resources.DeleteConfirm"))) {
              if (EjecutarValidacionesAlEliminarMRDetalle_Pagos_Pacientes_OpenPay('Detalle_Pagos_Pacientes_OpenPay_', '_' + rowIndex)) {
                var prevData = Detalle_Pagos_Pacientes_OpenPayTable.fnGetData(rowIndexTable );
                removedDetalle_Pagos_Pacientes_OpenPayData.push(prevData);
                Detalle_Pagos_Pacientes_OpenPayTable.fnDeleteRow(rowIndexTable );
				showDetalle_Pagos_Pacientes_OpenPayGrid(Detalle_Pagos_Pacientes_OpenPayTable.fnGetData());
              }
            }
			initiateUIControls();
        }

        function Detalle_Pagos_Pacientes_OpenPayrowCreationGrid(row, data, index) {
            var permission =  {            
                 Edit: '@permissionDetalle_Pagos_Pacientes_OpenPay.Edit' == 'True',
                 Delete: '@permissionDetalle_Pagos_Pacientes_OpenPay.Delete' == 'True'
            };
            setDetalle_Pagos_Pacientes_OpenPayValidation();
            var Detalle_Pagos_Pacientes_OpenPayRowElement = "Detalle_Pagos_Pacientes_OpenPay_" + index.toString();
            $(row).addClass(Detalle_Pagos_Pacientes_OpenPayRowElement);
            var nameOfTable='Detalle_Pagos_Pacientes_OpenPay_';
            var rowIndex = '_' + index;
            Detalle_Pagos_Pacientes_OpenPayinsertRowCurrentIndex = index;

            row.innerHTML = "";

            if (data.IsInsertRow) {

                if (row.childNodes.length != 0) {
                    for (var i = 0; i < row.childNodes.length; i++) {
                        row.childNodes[i].remove();
                    }
                }
                var controls = GetInsertDetalle_Pagos_Pacientes_OpenPayRowControls(index);
                var actionColInsert = $('<td>');

                var abc = "if(dynamicFieldValidation('" + Detalle_Pagos_Pacientes_OpenPayRowElement + "')){ Detalle_Pagos_Pacientes_OpenPayInsertRow(" + index + "); }";
                var insertRowHTML = '<a  data-toggle="tooltip" title="Confirmar Registro" onclick="' + abc + '">';
                $('<i class="fa fa-check">').appendTo($(insertRowHTML).appendTo(actionColInsert));
				$('<i class="fa fa-times">').appendTo($("<a data-toggle='tooltip' title='Cancelar Registro' onclick='Detalle_Pagos_Pacientes_OpenPayCancelRow(" + index + ")'>").appendTo(actionColInsert));
                actionColInsert.appendTo(row);

                for (i = 0; i < controls.length; i++) {
					var idHeader = $(controls[i]).data('field') + 'Header';
					if($(controls[i]).length > 1){
						idHeader = $($(controls[i])[1]).data('field') + 'Header';
					}					

					var classe = ($('#Detalle_Pagos_Pacientes_OpenPayGrid .' + idHeader).hasClass('dt-right') ? "dt-right" : "") + $('#Detalle_Pagos_Pacientes_OpenPayGrid .' + idHeader ).css('display') == 'none' ? " hide" : "";
				   
					if ($(controls[i]).next().length > 0) {
					    var div = $(controls[i]).next();
					    $('<td class="' + classe + '">').append($(controls[i])).append(div).appendTo(row);
					}else
					    $(controls[i]).appendTo($('<td class="' + classe + '">').appendTo(row));
					
                }
                $('#Detalle_Pagos_Pacientes_OpenPayGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('#Detalle_Pagos_Pacientes_OpenPayGrid .gridDatePicker').attr("readonly", "");
                return;
            }

            var actionCol = $('<td>');
			var edit = "<a title='@Resources.Resources.Edit' class='edit-MR' onclick='Detalle_Pagos_Pacientes_OpenPayEditRow(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                edit = "";
            var editPopUp = "<a title='@Resources.Resources.Edit' class='edit-popup-MR' data-toggle='modal' data-target='#AddDetalle_Pagos_Pacientes_OpenPay-form' onclick='Detalle_Pagos_Pacientes_OpenPayEditRowPopup(" + index + ", this)'>";
            if (!permission.Edit || isConsultMode)
                editPopUp = "";
            var eliminar = "<a title='@Resources.Resources.Delete' class='eliminar-MR' onclick='Detalle_Pagos_Pacientes_OpenPayDeleteRow(" + index + ", this)'>";
            if (!permission.Delete || isConsultMode)
                eliminar = "";
            $('<i class="fa fa-pencil">').appendTo($(edit).appendTo(actionCol));
            //$('<i class="fa fa-edit">').appendTo($(editPopUp).appendTo(actionCol));
            $('<i class="fa fa-trash-o">').appendTo($(eliminar).appendTo(actionCol));
			if ($('.Action' + 'Header').css('display') != 'none')
				actionCol.appendTo(row);

            if ($('.Usuario_que_Registra' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Usuario_que_Registra'+rowIndex+'">').text(GetDetalle_Pagos_Pacientes_OpenPay_Spartan_UserName(data.Usuario_que_Registra)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Usuario_que_Registra'+rowIndex+'">').text(GetDetalle_Pagos_Pacientes_OpenPay_Spartan_UserName(data.Usuario_que_Registra)).appendTo(row);
            if ($('.Fecha_de_Pago' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Fecha_de_Pago'+rowIndex+'">').text(data.Fecha_de_Pago).appendTo(row);
            else
                $('<td style="display:none;" id="'+nameOfTable+'Fecha_de_Pago'+rowIndex+'">').text(data.Fecha_de_Pago).appendTo(row);
            if ($('.Hora_de_Pago' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Hora_de_Pago'+rowIndex+'">').text(data.Hora_de_Pago).appendTo(row);
            else
                $('<td style="display:none;" id="'+nameOfTable+'Hora_de_Pago'+rowIndex+'">').text(data.Hora_de_Pago).appendTo(row);
            if ($('.TokenID' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'TokenID'+rowIndex+'">').text(data.TokenID).appendTo(row);
            else 
                $('<td style="display:none;" id="'+nameOfTable+'TokenID'+rowIndex+'">').text(data.TokenID).appendTo(row);
            if ($('.Importe' + 'Header').css('display') != 'none')
                $('<td class="dt-right"  id="'+nameOfTable+'Importe'+rowIndex+'">').text(data.Importe).appendTo(row);
            else 
                 $('<td style="display:none" class="dt-right"  id="'+nameOfTable+'Importe'+rowIndex+'">').text(data.Importe).appendTo(row);
            if ($('.Concepto' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Concepto'+rowIndex+'">').text(data.Concepto).appendTo(row);
            else 
                $('<td style="display:none;" id="'+nameOfTable+'Concepto'+rowIndex+'">').text(data.Concepto).appendTo(row);
            if ($('.Forma_de_pago' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Forma_de_pago'+rowIndex+'">').text(GetDetalle_Pagos_Pacientes_OpenPay_Formas_de_PagoName(data.Forma_de_pago)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Forma_de_pago'+rowIndex+'">').text(GetDetalle_Pagos_Pacientes_OpenPay_Formas_de_PagoName(data.Forma_de_pago)).appendTo(row);
            if ($('.Autorizacion' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Autorizacion'+rowIndex+'">').text(data.Autorizacion).appendTo(row);
            else 
                $('<td style="display:none;" id="'+nameOfTable+'Autorizacion'+rowIndex+'">').text(data.Autorizacion).appendTo(row);
            if ($('.Nombre' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Nombre'+rowIndex+'">').text(data.Nombre).appendTo(row);
            else 
                $('<td style="display:none;" id="'+nameOfTable+'Nombre'+rowIndex+'">').text(data.Nombre).appendTo(row);
            if ($('.Apellidos' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Apellidos'+rowIndex+'">').text(data.Apellidos).appendTo(row);
            else 
                $('<td style="display:none;" id="'+nameOfTable+'Apellidos'+rowIndex+'">').text(data.Apellidos).appendTo(row);
            if ($('.Telefono' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Telefono'+rowIndex+'">').text(data.Telefono).appendTo(row);
            else 
                $('<td style="display:none;" id="'+nameOfTable+'Telefono'+rowIndex+'">').text(data.Telefono).appendTo(row);
            if ($('.Email' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Email'+rowIndex+'">').text(data.Email).appendTo(row);
            else 
                $('<td style="display:none;" id="'+nameOfTable+'Email'+rowIndex+'">').text(data.Email).appendTo(row);
            if ($('.DeviceID' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'DeviceID'+rowIndex+'">').text(data.DeviceID).appendTo(row);
            else 
                $('<td style="display:none;" id="'+nameOfTable+'DeviceID'+rowIndex+'">').text(data.DeviceID).appendTo(row);
            if ($('.UsaPuntos' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'UsaPuntos'+rowIndex+'">').text(data.UsaPuntos).appendTo(row);
            else
                $('<td style="display:none;" id="'+nameOfTable+'UsaPuntos'+rowIndex+'">').text(data.UsaPuntos).appendTo(row);
            if ($('.PuntosID' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'PuntosID'+rowIndex+'">').text(data.PuntosID).appendTo(row);
            else 
                $('<td style="display:none;" id="'+nameOfTable+'PuntosID'+rowIndex+'">').text(data.PuntosID).appendTo(row);
            if ($('.Estatus' + 'Header').css('display') != 'none')
                $('<td id="'+nameOfTable+'Estatus'+rowIndex+'">').text(GetDetalle_Pagos_Pacientes_OpenPay_Estatus_de_PagoName(data.Estatus)).appendTo(row);
	    else 
		$('<td style="display:none;" id="'+nameOfTable+'Estatus'+rowIndex+'">').text(GetDetalle_Pagos_Pacientes_OpenPay_Estatus_de_PagoName(data.Estatus)).appendTo(row);

        }

        var Detalle_Pagos_Pacientes_OpenPayTable;
        function showDetalle_Pagos_Pacientes_OpenPayGrid(dataSet) {
            //removedDetalle_Pagos_Pacientes_OpenPayData = [];
            Detalle_Pagos_Pacientes_OpenPayTable = $('#Detalle_Pagos_Pacientes_OpenPayGrid').dataTable({
                dom: '<"html5buttons"B>lTgitp',
                buttons: [
                ],
                "createdRow": Detalle_Pagos_Pacientes_OpenPayrowCreationGrid,
                "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                data: dataSet,
                "columns": [
                    { "data": null, 'visible': true, "orderable": false },

                    { "data": "Usuario_que_Registra", "orderable": false },
                    { "data": "Fecha_de_Pago", "orderable": false },
                    { "data": "Hora_de_Pago", "orderable": false },
                    { "data": "TokenID", "orderable": false },
                    { "data": "Importe","className": "dt-right", "orderable": false },
                    { "data": "Concepto", "orderable": false },
                    { "data": "Forma_de_pago", "orderable": false },
                    { "data": "Autorizacion", "orderable": false },
                    { "data": "Nombre", "orderable": false },
                    { "data": "Apellidos", "orderable": false },
                    { "data": "Telefono", "orderable": false },
                    { "data": "Email", "orderable": false },
                    { "data": "DeviceID", "orderable": false },
                    { "data": "UsaPuntos", "orderable": false },
                    { "data": "PuntosID", "orderable": false },
                    { "data": "Estatus", "orderable": false },

                ],
                "order": [[0, "asc"]],
                "language": {
                    "lengthMenu": "@Resources.Resources.Display" + " _MENU_ " + "@Resources.Resources.RecordsPerPage",
                    "zeroRecords": "@Resources.Resources.NothingFound",
                    "info": "@Resources.Resources.ShowingPages" + " _PAGE_ " + "@Resources.Resources.of" + " _PAGES_",
                    "infoEmpty": "@Resources.Resources.NoRecords",
                    "infoFiltered": "(" + "@Resources.Resources.FilteredFrom" + " _MAX_ " + "@Resources.Resources.TotalRecords" + ")",
                    "sSearch": "@Resources.Resources.Search",
                    "paginate": {
                        "previous": "@Resources.Resources.Previous",
                        "next": "@Resources.Resources.Next"
                    }
                },
				"bDestroy": true,
                "fnDrawCallback": function (settings) {
                    setDetalle_Pagos_Pacientes_OpenPayValidation();
                }
            }).on('init.dt', function (e, data) {
                $('a').tooltip();
            }).on('draw.dt', function () {
                $('#Detalle_Pagos_Pacientes_OpenPayGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                $('.gridDatePicker').inputmask("99-99-9999", { "placeholder": "dd-mm-yyyy" });
            });
        }


    var Detalle_Pagos_Pacientes_OpenPay_Spartan_UserItems;
        function GetDetalle_Pagos_Pacientes_OpenPay_Spartan_UserItem() {
            Detalle_Pagos_Pacientes_OpenPay_Spartan_UserItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_Pagos_Pacientes_OpenPay_Spartan_UserAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_Pagos_Pacientes_OpenPay_Spartan_UserItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }





    var Detalle_Pagos_Pacientes_OpenPay_Formas_de_PagoItems;
        function GetDetalle_Pagos_Pacientes_OpenPay_Formas_de_PagoItem() {
            Detalle_Pagos_Pacientes_OpenPay_Formas_de_PagoItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_Pagos_Pacientes_OpenPay_Formas_de_PagoAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_Pagos_Pacientes_OpenPay_Formas_de_PagoItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }








    var Detalle_Pagos_Pacientes_OpenPay_Estatus_de_PagoItems;
        function GetDetalle_Pagos_Pacientes_OpenPay_Estatus_de_PagoItem() {
            Detalle_Pagos_Pacientes_OpenPay_Estatus_de_PagoItems = null;
            var ajaxUrl = "@Url.Content("~/Frontal/Pacientes/GetDetalle_Pagos_Pacientes_OpenPay_Estatus_de_PagoAll")";
            $.ajax({
                url: ajaxUrl,
                type: 'GET',
                dataType: "json",
                async: false,
                global: false,
                success: function (result) {
                    Detalle_Pagos_Pacientes_OpenPay_Estatus_de_PagoItems = result;
                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }

        var Detalle_Pagos_Pacientes_OpenPayData = [];
        var Detalle_Pagos_Pacientes_OpenPaydeletedItem = [];
        var Detalle_Pagos_Pacientes_OpenPayDataMain = [];
        var Detalle_Pagos_Pacientes_OpenPayDataMainPages = [];
        var Detalle_Pagos_Pacientes_OpenPaynewItemCount = 0;
        var Detalle_Pagos_Pacientes_OpenPaymaxItemIndex = 0;
        var Detalle_Pagos_Pacientes_OpenPayDataMainInitialized = false;

        function SendDetalle_Pagos_Pacientes_OpenPay(callBack, FolioId) {
            Detalle_Pagos_Pacientes_OpenPayData = GetDetalle_Pagos_Pacientes_OpenPayFromDataTable();

            if (Detalle_Pagos_Pacientes_OpenPayData.length > 0 || $("#ReferenceFolio").val() != FolioId) {
                if ($("#ReferenceFolio").val() != "0" && FolioId ==null)
                    FolioId = $("#ReferenceFolio").val();                
                if ($("#ReferenceFolio").val() == '')
                    $("#ReferenceFolio").val('0');
                $.ajax({
                    url: '@Url.Content("~/Frontal/Pacientes/PostDetalle_Pagos_Pacientes_OpenPay?MasterId=")' + FolioId + "&referenceId=" + $("#ReferenceFolio").val(),
                    type: 'POST',
                    data: GetDetalle_Pagos_Pacientes_OpenPay(),
                    async: true,
                    success: function (result) {

                    },
                    error: function (result) {
                        showNotification("@Resources.Resources.ErrorContactingServer", "error");
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });
            } else {
                //showNotification("@Resources.Resources.SaveSuccess", "success");
                //callBack(FolioId);
            }
            return true;
        }

        function GetAddDetalle_Pagos_Pacientes_OpenPayPopup(currentRowIndex, mode, id) {

            $.ajax({
                url: "@Url.Action("AddDetalle_Pagos_Pacientes_OpenPay", "Detalle_Pagos_Pacientes_OpenPay")",
                type: "GET",
                async: false,
                data: { rowIndex: currentRowIndex, functionMode: mode, id: id },
                success: function (data) {
                    $(".AddDetalle_Pagos_Pacientes_OpenPayModal").html(data);
                },
                error: function () {

                }
            });

            @*$.get('@Url.Action("AddDetalle_Pagos_Pacientes_OpenPay", "Detalle_Pagos_Pacientes_OpenPay")', { rowIndex: currentRowIndex }, function (data) {
                $(".AddDetalle_Pagos_Pacientes_OpenPayModal").html(data);
            });*@
        }

        function ShowMessagePendingRowDetalle_Pagos_Pacientes_OpenPay()
        {
            //alert('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Pagos"))')
	    showNotification('@Html.Raw(string.Format(Resources.Resources.PendingRow, "Pagos"))', "warning");
        }


        function initiateUIControls() {
             $('.gridDatePicker').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
                format: "@ConfigurationProperty.DateFormatDatePicker"
            });
            //Time Picker
            $('.gridTimePicker').clockpicker();
            $('.inputMoney').inputmask("currency", { greedy: false, prefix: "", rightAlign: false });
			$('td.inputMoney').inputmask("currency", { greedy: false, prefix: "$ ", rightAlign: false });
			$('td input.inputMoney').inputmask("currency", { greedy: false, prefix: "$ ", rightAlign: false });






































































        }

    </script>

<script type="text/javascript">


   function GetCatalogPopup(catalog, nameAttribute, isMR, nameMR) {
        if (!isMR)
            var url = "@Url.Action("Create", "Catalog", new { Module_Id = "1", isPartial = true, nameAttribute = "AttributoNombre" })";
        else
            var url = "@Url.Action("Create", "Catalog", new { Module_Id = "1", isPartial = true, isMR = true, nameMR = "Multirenglon",nameAttribute= "AttributoNombre" })";

        url = url.replace("Catalog", catalog).replace("Multirenglon", nameMR).replace("AttributoNombre", nameAttribute);

        window.open(htmlDecode(url), '_blank', 'left=200,top=100,width=850,height=550,toolbar=0,resizable=0');
    }

    function RefreshCatalog(catalog, control) {

	 if ($('#' + control).hasClass('AutoComplete'))   {
		   if ($('#' + control).attr("data-isfilter") == "true") {
				eval(GetReglaFilter(control, $('#ObjectId').val()));
				return;
			}
		}
			
			var url = '@Url.Content("~/Frontal/Pacientes/GetCatalogAll")';
			url = url.replace(/Catalog/g, catalog);

			$.ajax({
				url: url,
				async: true,
				success:function(result)
				{
					addItemsToSelect($('#' + control), result);
				},
				error: function (result)
				{
					showNotification("@Resources.Resources.ErrorContactingServer", "error");
				}
			});
		
    }


        function SendPacientesData(callBack) {
			
					
		 var arr = []; 
		 $("form#CreatePacientes").find(':input').each(function( index ) {		 
			if ($(this).prop('disabled')==true|| $(this).prop('disabled')=="disabled")
			{		
				arr.push($(this).attr('id')); 
				$(this).prop('disabled', false);  	
			}
	    });
		
             var formData = new FormData($("form#CreatePacientes")[0]);
			$.each( arr, function( key, value ) {
			  $('#' +value).prop('disabled', true);
			});
			var id = $("#ReferenceFolio").val();
            var isNew = $('#hdnIsNew').val();
           
			if (Tab_Datos_Generales && !checkClientValidate('PacientesCreateForm', 'Datos_Generales')) {
				return false;
			}						

			if (Tab_Padecimientos && !checkClientValidate('PacientesCreateForm', 'Padecimientos')) {
				return false;
			}						

			if (Tab_Antecedentes && !checkClientValidate('PacientesCreateForm', 'Antecedentes')) {
				return false;
			}						

			if (Tab_Mediciones_Iniciales && !checkClientValidate('PacientesCreateForm', 'Mediciones_Iniciales')) {
				return false;
			}						

			if (Tab_Datos_Ginecologicos && !checkClientValidate('PacientesCreateForm', 'Datos_Ginecologicos')) {
				return false;
			}						

			if (Tab_Historia_Nutricional && !checkClientValidate('PacientesCreateForm', 'Historia_Nutricional')) {
				return false;
			}						

			if (Tab_Estilo_de_Vida && !checkClientValidate('PacientesCreateForm', 'Estilo_de_Vida')) {
				return false;
			}						

			if (Tab_Resultados && !checkClientValidate('PacientesCreateForm', 'Resultados')) {
				return false;
			}						

			if (Tab_Suscripcion && !checkClientValidate('PacientesCreateForm', 'Suscripcion')) {
				return false;
			}						


			
			if (isNew == "True")
            {
                id = CreateID();
            }
			
			
			if (Tab_Datos_Generales)
				Save_Datos_Generales(id);

			if (Tab_Padecimientos)
				Save_Padecimientos(id);

			if (Tab_Antecedentes)
				Save_Antecedentes(id);

			if (Tab_Mediciones_Iniciales)
				Save_Mediciones_Iniciales(id);

			if (Tab_Datos_Ginecologicos)
				Save_Datos_Ginecologicos(id);

			if (Tab_Historia_Nutricional)
				Save_Historia_Nutricional(id);

			if (Tab_Estilo_de_Vida)
				Save_Estilo_de_Vida(id);

			if (Tab_Resultados)
				Save_Resultados(id);

			if (Tab_Suscripcion)
				Save_Suscripcion(id);


			showNotification("@Resources.Resources.SaveSuccess", "success");
			callBack(id);
            return true;
        };
		function CreateID()
		{
			var newId = 0;
			$.ajax({
				url: '@Url.Content("~/Frontal/Pacientes/CreateID")',
				type: 'GET',
				async: false,
				success: function (result) {
					if (result < 0) {
						showNotification("@Resources.Resources.ErrorSave", "error");
					} else {
						newId = result;
					}
				},
				error: function (result) {
					showNotification("@Resources.Resources.ErrorContactingServer", "error");
				},
				cache: false,
				contentType: false,
				processData: false
			});
			return newId;
		}
		
		function OpenRules()
		{
			$.get('@Url.Action("Index", "Business_Rule_Creation")', {}, function (data) {
				$(".PacientesBusinessRuleModal").html(data);
			});
		}
                function PacientesGetBusinessRule(FieldId, FieldName, Attribute) {
			if (FieldId != null && FieldName != null)
			{
			        $('#FieldId').val(FieldId);
				$('#FieldName').val(FieldName);
				$('#Attribute').val(Attribute);
			}
			$('#ObjectId').val('44337');
			$('#Screen').val('Pacientes');
			OpenRules();
               }

    var permission = {
        Consult: '@permission.Consult' == 'True',
        New: '@permission.New' == 'True',
        Edit: '@permission.Edit' == 'True',
        Delete: '@permission.Delete' == 'True',
        Export: '@permission.Export' == 'True',
        Print: '@permission.Print' == 'True',
        Configure: '@permission.Configure' == 'True',
    };

    
    //MR-var statusItems;
    //MR-var stateItems;
    //MR-var cityItems = [];
    var isConsultMode = "@ViewBag.Consult" == "True";
    Consult(isConsultMode);
        function Consult(val) {
            if (val) {
                $(':input').attr('readonly', 'readonly');
                $(':input').attr('disabled', 'true');
                $('.noConsult').removeAttr('readonly');
                $('.noConsult').removeAttr('disabled');
            }
        }

    function PacientesBackToGrid() {
        		if (isPartial)
			window.close('', '_parent', '');
        else
			location.href = "@Url.Content("~/Frontal/Pacientes/")";
    }
	
	function ReadScriptSettings(callback)
    {
        $.post("@Url.Content("~/Frontal/Pacientes/ReadScriptSettings")", function (data) {
            mainElementObject = JSON.parse(data.MainElement);
			if (data.ChildElement != null) {
                childElementObject = JSON.parse(data.ChildElement);
            }
            callback();
        });
    }

    function SaveSettingsWithoutReload() {
        $.post("@Url.Content("~/Frontal/Pacientes/WriteScriptSettings")", { CustomModuleAttributeList: mainElementObject, ChildModuleAttributeList: childElementObject }, function (data) {
            //$('#hdnConfigureType').val("0");
        }, "json");
    }
	
        function SaveElementAttributes() {
            if ($('#hdnConfigureType').val() == "1") {
                $.post("@Url.Content("~/Frontal/Pacientes/WriteScriptSettings")", { CustomModuleAttributeList: mainElementObject, ChildModuleAttributeList: childElementObject }, function (data) {
                    $('#hdnConfigureType').val("0");
                    location.reload(true);
                }, "json");
            } else {
                $.post("@Url.Content("~/Frontal/Pacientes/ReadScriptSettings")", function (data) {
                    mainElementObject = JSON.parse(data.MainElement);
                    childElementObject = JSON.parse(data.ChildElement);

                    for (var i = 0; i < mainElementObject.length; i++) {
							var mainElementAttributes = '<div class="col-sm-2">';
							mainElementAttributes += '<div class="displayAttributes requiredAttribute"><a class="requiredClick" title="' + (mainElementObject[i].IsRequired == true ? "@Resources.Resources.Required" : "@Resources.Resources.NotRequired") + '" onclick="setRequired(' + i.toString() + ', this, 1)"><img src="' + (mainElementObject[i].IsRequired == true ? "@Url.Content("~/Images/Required.png")" : "@Url.Content("~/Images/Not-Required.png")") + '" alt="" /></a></div>';
							mainElementAttributes += '<div class="displayAttributes visibleAttribute"><a class="visibleClick" title="' + (mainElementObject[i].IsVisible == true ? "@Resources.Resources.Visible" : "@Resources.Resources.InVisible") + '" onclick="setVisible(' + i.toString() + ', this, 1)"><img src="' + (mainElementObject[i].IsVisible == true ? "@Url.Content("~/Images/Visible.png")" : "@Url.Content("~/Images/InVisible.png")") + '" alt="" /></a></div>';
							mainElementAttributes += '<div class="displayAttributes readOnlyAttribute"><a class="readOnlyClick" title="' + (mainElementObject[i].IsReadOnly == true ? "@Resources.Resources.Disabled" : "@Resources.Resources.Enabled") + '" onclick="setReadOnly(' + i.toString() + ', this, 1)"><img src="' + (mainElementObject[i].IsReadOnly == true ? "@Url.Content("~/Images/Disabled.png")" : "@Url.Content("~/Images/Enabled.png")") + '" alt="" /></a></div>';
							mainElementAttributes += '<div class="displayAttributes defaultValueAttribute"><a id="hlDefaultValue_' + i.toString() + '" class="defaultValueClick" title="' + (mainElementObject[i].DefaultValue) + '" onclick="setDefaultValue(' + i.toString() + ', this, 1)"><img src="' + (mainElementObject[i].DefaultValue != '' && mainElementObject[i].DefaultValue != null ? "@Url.Content("~/Images/default-value.png")" : "@Url.Content("~/Images/Not-Default-Value.png")") + '" alt="" /></a></div>';
							mainElementAttributes += '<div class="displayAttributes helpTextAttribute"><a id="hlHelpText_' + i.toString() + '" class="helpTextClick" title="' + (mainElementObject[i].HelpText) + '" onclick="setHelpText(' + i.toString() + ', this, 1)"><img src="' + (mainElementObject[i].HelpText != '' && mainElementObject[i].HelpText != null ? "@Url.Content("~/Images/green-help.png")" : "@Url.Content("~/Images/red-help.jpg")") + '" alt="" /></a></div>';
							mainElementAttributes += '</div>';
							$('#' + mainElementObject[i].inputId).parent().closest('.form-group').show();

							$('#' + mainElementObject[i].inputId).closest('.col-sm-8').after(mainElementAttributes);
                  }
					 if (childElementObject != null) {
                        for (var j = 0; j < childElementObject.length; j++) {
                            var table = childElementObject[j].table.trim();
                            var grid = '#' + table + 'Grid';
                            $(grid).find("thead").find("tr").find("th").each(function () {
                                for (var i = 0; i < childElementObject[j].elements.length; i++) {
                                    if ($(this).hasClass(childElementObject[j].elements[i].inputId + 'Header')) {
                                        $(this).show();
                                        $(this).parent().show();
                                        $(this).append(returnAttributeHTML(childElementObject[j].elements[i], table, i));
                                    }
                                }
                            });
                        }

                    }
                     $('#ConfigureSave').text('@Html.Raw(Resources.Resources.Save  +" "+ Resources.Resources.Settings)');
                    $('#hdnConfigureType').val("1");
                });
            }
        }
		$('#CreatePacientes').on('click', '.btnPopupBusinessRules', function () {
			var fieldId = $(this).data('field-id');
			var fieldName = $(this).data('field-name');
			var attribute = $(this).data('attribute');
			$('#FieldId').val(fieldId);
			$('#FieldName').val(fieldName);
			$('#Attribute').val(attribute);
                        PacientesGetBusinessRule();
		});
		//Initialize HTML Editors            
  var filebrowserBrowseUrl = '../../ckfinder/ckfinder.html';
  var filebrowserImageBrowseUrl = '../../ckfinder/ckfinder.html?type=Images';
  var filebrowserUploadUrl = '../../ckfinder/connector?command=QuickUpload&type=Files';
  var filebrowserImageUploadUrl = '../../ckfinder/connector?command=QuickUpload&type=Images';
		
		
		function Fill_Datos_Generales()
        {
            $.ajax({
                url: "@Url.Content("~/Frontal/Pacientes/Get_Datos_Generales")?Id=" + $("#ReferenceFolio").val(),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                                        $('#Folio').val(result.data.Folio);
                    $('#Fecha_de_Registro').val(result.data.Fecha_de_Registro);
                    $('#Hora_de_Registro').val(result.data.Hora_de_Registro);
                    $('#Usuario_que_Registra').val(result.data.Usuario_que_Registra);
                    $('#Es_nuevo_registro').prop('checked', result.data.Es_nuevo_registro);
                    $('#Tipo_de_Registro').val(result.data.Tipo_de_Registro);
                    $('#Tipo_de_Paciente').val(result.data.Tipo_de_Paciente);
                    $('#Usuario_Registrado').val(result.data.Usuario_Registrado);
                    $('#Empresa').val(result.data.Empresa);
                    $('#Numero_de_Empleado').val(result.data.Numero_de_Empleado);
                    $('#Nombres').val(result.data.Nombres);
                    $('#Apellido_Paterno').val(result.data.Apellido_Paterno);
                    $('#Apellido_Materno').val(result.data.Apellido_Materno);
                    $('#Nombre_Completo').val(result.data.Nombre_Completo);
                    $('#Celular').val(result.data.Celular);
                    $('#Email').val(result.data.Email);
                    $('#Fecha_de_nacimiento').val(result.data.Fecha_de_nacimiento);
                    $('#Nombre_del_Padre_o_Tutor').val(result.data.Nombre_del_Padre_o_Tutor);
                    $('#Pais_de_nacimiento').val(result.data.Pais_de_nacimiento);
                    $('#Lugar_de_nacimiento').val(result.data.Lugar_de_nacimiento);
                    $('#Sexo').val(result.data.Sexo);
                    $('#Estado_Civil').val(result.data.Estado_Civil);
                    $('#Calle').val(result.data.Calle);
                    $('#Numero_exterior').val(result.data.Numero_exterior);
                    $('#Numero_interior').val(result.data.Numero_interior);
                    $('#Colonia').val(result.data.Colonia);
                    $('#CP').val(result.data.CP);
                    $('#Ciudad').val(result.data.Ciudad);
                    $('#Pais').val(result.data.Pais);
                    $('#Estado').val(result.data.Estado);
                    $('#Ocupacion').val(result.data.Ocupacion);
                    $('#Cantidad_hijos').val(result.data.Cantidad_hijos);
                    $('#Objetivo').val(result.data.Objetivo);
                    $('#Estatus_Paciente').val(result.data.Estatus_Paciente);
                    $('#Plan_Alimenticio_Completo').prop('checked', result.data.Plan_Alimenticio_Completo);
                    $('#Plan_Rutina_Completa').prop('checked', result.data.Plan_Rutina_Completa);

                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
		
		function Save_Datos_Generales(newId) {
			var data = new FormData();
			data.append('Folio', newId);
			                data.append('Fecha_de_Registro', $('#Fecha_de_Registro').val());
                data.append('Hora_de_Registro', $('#Hora_de_Registro').val());
                data.append('Usuario_que_Registra', $('#Usuario_que_Registra').val());
                data.append('Es_nuevo_registro', $('#Es_nuevo_registro').prop('checked'));
                data.append('Tipo_de_Registro', $('#Tipo_de_Registro').val());
                data.append('Tipo_de_Paciente', $('#Tipo_de_Paciente').val());
                data.append('Usuario_Registrado', $('#Usuario_Registrado').val());
                data.append('Empresa', $('#Empresa').val());
                data.append('Numero_de_Empleado', $('#Numero_de_Empleado').val());
                data.append('Nombres', $('#Nombres').val());
                data.append('Apellido_Paterno', $('#Apellido_Paterno').val());
                data.append('Apellido_Materno', $('#Apellido_Materno').val());
                data.append('Nombre_Completo', $('#Nombre_Completo').val());
                data.append('Celular', $('#Celular').val());
                data.append('Email', $('#Email').val());
                data.append('Fecha_de_nacimiento', $('#Fecha_de_nacimiento').val());
                data.append('Nombre_del_Padre_o_Tutor', $('#Nombre_del_Padre_o_Tutor').val());
                data.append('Pais_de_nacimiento', $('#Pais_de_nacimiento').val());
                data.append('Lugar_de_nacimiento', $('#Lugar_de_nacimiento').val());
                data.append('Sexo', $('#Sexo').val());
                data.append('Estado_Civil', $('#Estado_Civil').val());
                data.append('Calle', $('#Calle').val());
                data.append('Numero_exterior', $('#Numero_exterior').val());
                data.append('Numero_interior', $('#Numero_interior').val());
                data.append('Colonia', $('#Colonia').val());
                data.append('CP', $('#CP').val());
                data.append('Ciudad', $('#Ciudad').val());
                data.append('Pais', $('#Pais').val());
                data.append('Estado', $('#Estado').val());
                data.append('Ocupacion', $('#Ocupacion').val());
                data.append('Cantidad_hijos', $('#Cantidad_hijos').val());
                data.append('Objetivo', $('#Objetivo').val());
                data.append('Estatus_Paciente', $('#Estatus_Paciente').val());
                data.append('Plan_Alimenticio_Completo', $('#Plan_Alimenticio_Completo').prop('checked'));
                data.append('Plan_Rutina_Completa', $('#Plan_Rutina_Completa').prop('checked'));

			$.ajax({
				url: '@Url.Content("~/Frontal/Pacientes/Post_Datos_Generales")',
				type: 'POST',
				data: data,
				async: false,
				dataType: "json",
				contentType: false,
				processData: false,
				success: function (result) {
					if (result < 0) {
						showNotification("@Resources.Resources.ErrorSave", "Error al guardar Datos_Generales");
					} else {
						newId = result;
                    
					}
				},
				error: function (result) {
					showNotification("@Resources.Resources.ErrorContactingServer", "Error al guardar Datos_Generales");
				},
				cache: false
			});
		}

		function Fill_Padecimientos()
        {
            $.ajax({
                url: "@Url.Content("~/Frontal/Pacientes/Get_Padecimientos")?Id=" + $("#ReferenceFolio").val(),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                                        $('#Folio').val(result.data.Folio);
                    $('#Cuenta_con_padecimientos').val(result.data.Cuenta_con_padecimientos);
                    Detalle_de_PadecimientosDataDataTable = result.Detalle_del_padecimiento;
                    showDetalle_de_PadecimientosGrid(result.Detalle_del_padecimiento);
                    $('#Detalle_de_PadecimientosGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_de_PadecimientosGrid .gridDatePicker').attr("readonly", "");

                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
		
		function Save_Padecimientos(newId) {
			var data = new FormData();
			data.append('Folio', newId);
			                data.append('Cuenta_con_padecimientos', $('#Cuenta_con_padecimientos').val());

			$.ajax({
				url: '@Url.Content("~/Frontal/Pacientes/Post_Padecimientos")',
				type: 'POST',
				data: data,
				async: false,
				dataType: "json",
				contentType: false,
				processData: false,
				success: function (result) {
					if (result < 0) {
						showNotification("@Resources.Resources.ErrorSave", "Error al guardar Padecimientos");
					} else {
						newId = result;
                    					    SendDetalle_de_Padecimientos(null, newId);

					}
				},
				error: function (result) {
					showNotification("@Resources.Resources.ErrorContactingServer", "Error al guardar Padecimientos");
				},
				cache: false
			});
		}

		function Fill_Antecedentes()
        {
            $.ajax({
                url: "@Url.Content("~/Frontal/Pacientes/Get_Antecedentes")?Id=" + $("#ReferenceFolio").val(),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                                        $('#Folio').val(result.data.Folio);
                    Detalle_Antecedentes_FamiliaresDataDataTable = result.Antecedentes_Familiares;
                    showDetalle_Antecedentes_FamiliaresGrid(result.Antecedentes_Familiares);
                    $('#Detalle_Antecedentes_FamiliaresGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_Antecedentes_FamiliaresGrid .gridDatePicker').attr("readonly", "");
                    Detalle_Antecedentes_No_PatologicosDataDataTable = result.Antecedentes_personales_no_patologicos;
                    showDetalle_Antecedentes_No_PatologicosGrid(result.Antecedentes_personales_no_patologicos);
                    $('#Detalle_Antecedentes_No_PatologicosGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_Antecedentes_No_PatologicosGrid .gridDatePicker').attr("readonly", "");

                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
		
		function Save_Antecedentes(newId) {
			var data = new FormData();
			data.append('Folio', newId);
			
			$.ajax({
				url: '@Url.Content("~/Frontal/Pacientes/Post_Antecedentes")',
				type: 'POST',
				data: data,
				async: false,
				dataType: "json",
				contentType: false,
				processData: false,
				success: function (result) {
					if (result < 0) {
						showNotification("@Resources.Resources.ErrorSave", "Error al guardar Antecedentes");
					} else {
						newId = result;
                    					    SendDetalle_Antecedentes_Familiares(null, newId);
					    SendDetalle_Antecedentes_No_Patologicos(null, newId);

					}
				},
				error: function (result) {
					showNotification("@Resources.Resources.ErrorContactingServer", "Error al guardar Antecedentes");
				},
				cache: false
			});
		}

		function Fill_Mediciones_Iniciales()
        {
            $.ajax({
                url: "@Url.Content("~/Frontal/Pacientes/Get_Mediciones_Iniciales")?Id=" + $("#ReferenceFolio").val(),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                                        $('#Folio').val(result.data.Folio);
                    $('#Frecuencia_Cardiaca').val(result.data.Frecuencia_Cardiaca);
                    $('#Frecuencia_Respiratoria').val(result.data.Frecuencia_Respiratoria);
                    $('#Presion_sistolica').val(result.data.Presion_sistolica);
                    $('#Presion_diastolica').val(result.data.Presion_diastolica);
                    $('#Peso_actual').val(result.data.Peso_actual);
                    $('#Estatura').val(result.data.Estatura);
                    $('#Peso_habitual').val(result.data.Peso_habitual);
                    $('#Circunferencia_de_cintura_cm').val(result.data.Circunferencia_de_cintura_cm);
                    $('#Circunferencia_de_cadera_cm').val(result.data.Circunferencia_de_cadera_cm);
                    $('#Anchura_de_muneca_mm').val(result.data.Anchura_de_muneca_mm);
                    $('#Circunferencia_de_brazo_cm').val(result.data.Circunferencia_de_brazo_cm);
                    $('#Pliegue_cutaneo_tricipital_mm').val(result.data.Pliegue_cutaneo_tricipital_mm);
                    $('#Pliegue_cutaneo_bicipital_mm').val(result.data.Pliegue_cutaneo_bicipital_mm);
                    $('#Pliegue_cutaneo_subescapular_mm').val(result.data.Pliegue_cutaneo_subescapular_mm);
                    $('#Pliegue_cutaneo_supraespinal_mm').val(result.data.Pliegue_cutaneo_supraespinal_mm);
                    $('#Edad_Metabolica').val(result.data.Edad_Metabolica);
                    $('#Agua_corporal').val(result.data.Agua_corporal);
                    $('#Grasa_Visceral').val(result.data.Grasa_Visceral);
                    $('#Grasa_Corporal').val(result.data.Grasa_Corporal);
                    $('#Grasa_Corporal_kg').val(result.data.Grasa_Corporal_kg);
                    $('#Masa_Muscular_kg').val(result.data.Masa_Muscular_kg);
                    $('#Masa_Muscular_').val(result.data.Masa_Muscular_);
                    Detalle_Examenes_LaboratorioDataDataTable = result.Examenes_de_Laboratorio;
                    showDetalle_Examenes_LaboratorioGrid(result.Examenes_de_Laboratorio);
                    $('#Detalle_Examenes_LaboratorioGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_Examenes_LaboratorioGrid .gridDatePicker').attr("readonly", "");

                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
		
		function Save_Mediciones_Iniciales(newId) {
			var data = new FormData();
			data.append('Folio', newId);
			                data.append('Frecuencia_Cardiaca', $('#Frecuencia_Cardiaca').val());
                data.append('Frecuencia_Respiratoria', $('#Frecuencia_Respiratoria').val());
                data.append('Presion_sistolica', $('#Presion_sistolica').val());
                data.append('Presion_diastolica', $('#Presion_diastolica').val());
                data.append('Peso_actual', $('#Peso_actual').val());
                data.append('Estatura', $('#Estatura').val());
                data.append('Peso_habitual', $('#Peso_habitual').val());
                data.append('Circunferencia_de_cintura_cm', $('#Circunferencia_de_cintura_cm').val());
                data.append('Circunferencia_de_cadera_cm', $('#Circunferencia_de_cadera_cm').val());
                data.append('Anchura_de_muneca_mm', $('#Anchura_de_muneca_mm').val());
                data.append('Circunferencia_de_brazo_cm', $('#Circunferencia_de_brazo_cm').val());
                data.append('Pliegue_cutaneo_tricipital_mm', $('#Pliegue_cutaneo_tricipital_mm').val());
                data.append('Pliegue_cutaneo_bicipital_mm', $('#Pliegue_cutaneo_bicipital_mm').val());
                data.append('Pliegue_cutaneo_subescapular_mm', $('#Pliegue_cutaneo_subescapular_mm').val());
                data.append('Pliegue_cutaneo_supraespinal_mm', $('#Pliegue_cutaneo_supraespinal_mm').val());
                data.append('Edad_Metabolica', $('#Edad_Metabolica').val());
                data.append('Agua_corporal', $('#Agua_corporal').val());
                data.append('Grasa_Visceral', $('#Grasa_Visceral').val());
                data.append('Grasa_Corporal', $('#Grasa_Corporal').val());
                data.append('Grasa_Corporal_kg', $('#Grasa_Corporal_kg').val());
                data.append('Masa_Muscular_kg', $('#Masa_Muscular_kg').val());
                data.append('Masa_Muscular_', $('#Masa_Muscular_').val());

			$.ajax({
				url: '@Url.Content("~/Frontal/Pacientes/Post_Mediciones_Iniciales")',
				type: 'POST',
				data: data,
				async: false,
				dataType: "json",
				contentType: false,
				processData: false,
				success: function (result) {
					if (result < 0) {
						showNotification("@Resources.Resources.ErrorSave", "Error al guardar Mediciones_Iniciales");
					} else {
						newId = result;
                    					    SendDetalle_Examenes_Laboratorio(null, newId);

					}
				},
				error: function (result) {
					showNotification("@Resources.Resources.ErrorContactingServer", "Error al guardar Mediciones_Iniciales");
				},
				cache: false
			});
		}

		function Fill_Datos_Ginecologicos()
        {
            $.ajax({
                url: "@Url.Content("~/Frontal/Pacientes/Get_Datos_Ginecologicos")?Id=" + $("#ReferenceFolio").val(),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                                        $('#Folio').val(result.data.Folio);
                    $('#Esta_embarazada').val(result.data.Esta_embarazada);
                    $('#Tu_embarazo_es_multiple').val(result.data.Tu_embarazo_es_multiple);
                    $('#Semana_de_gestacion').val(result.data.Semana_de_gestacion);
                    $('#Peso_pregestacional').val(result.data.Peso_pregestacional);
                    $('#Toma_anticonceptivos').val(result.data.Toma_anticonceptivos);
                    $('#Nombre_del_Anticonceptivo').val(result.data.Nombre_del_Anticonceptivo);
                    $('#Dosis').val(result.data.Dosis);
                    $('#Climaterio').val(result.data.Climaterio);
                    $('#Fecha_Climaterio').val(result.data.Fecha_Climaterio);
                    $('#Terapia_reemplazo_hormonal').val(result.data.Terapia_reemplazo_hormonal);
                    Detalle_Terapia_HormonalDataDataTable = result.Detalle_de_Terapia_Hormonal;
                    showDetalle_Terapia_HormonalGrid(result.Detalle_de_Terapia_Hormonal);
                    $('#Detalle_Terapia_HormonalGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_Terapia_HormonalGrid .gridDatePicker').attr("readonly", "");

                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
		
		function Save_Datos_Ginecologicos(newId) {
			var data = new FormData();
			data.append('Folio', newId);
			                data.append('Esta_embarazada', $('#Esta_embarazada').val());
                data.append('Tu_embarazo_es_multiple', $('#Tu_embarazo_es_multiple').val());
                data.append('Semana_de_gestacion', $('#Semana_de_gestacion').val());
                data.append('Peso_pregestacional', $('#Peso_pregestacional').val());
                data.append('Toma_anticonceptivos', $('#Toma_anticonceptivos').val());
                data.append('Nombre_del_Anticonceptivo', $('#Nombre_del_Anticonceptivo').val());
                data.append('Dosis', $('#Dosis').val());
                data.append('Climaterio', $('#Climaterio').val());
                data.append('Fecha_Climaterio', $('#Fecha_Climaterio').val());
                data.append('Terapia_reemplazo_hormonal', $('#Terapia_reemplazo_hormonal').val());

			$.ajax({
				url: '@Url.Content("~/Frontal/Pacientes/Post_Datos_Ginecologicos")',
				type: 'POST',
				data: data,
				async: false,
				dataType: "json",
				contentType: false,
				processData: false,
				success: function (result) {
					if (result < 0) {
						showNotification("@Resources.Resources.ErrorSave", "Error al guardar Datos_Ginecologicos");
					} else {
						newId = result;
                    					    SendDetalle_Terapia_Hormonal(null, newId);

					}
				},
				error: function (result) {
					showNotification("@Resources.Resources.ErrorContactingServer", "Error al guardar Datos_Ginecologicos");
				},
				cache: false
			});
		}

		function Fill_Historia_Nutricional()
        {
            $.ajax({
                url: "@Url.Content("~/Frontal/Pacientes/Get_Historia_Nutricional")?Id=" + $("#ReferenceFolio").val(),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                                        $('#Folio').val(result.data.Folio);
                    $('#Tipo_Dieta').val(result.data.Tipo_Dieta);
                    getMS_Exclusion_Ingredientes_PacienteData();
                    Detalle_Preferencia_BebidasDataDataTable = result.Detalle_Bebidas_Paciente;
                    showDetalle_Preferencia_BebidasGrid(result.Detalle_Bebidas_Paciente);
                    $('#Detalle_Preferencia_BebidasGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_Preferencia_BebidasGrid .gridDatePicker').attr("readonly", "");
                    $('#Suplementos').val(result.data.Suplementos);
                    $('#Consumo_de_sal').val(result.data.Consumo_de_sal);
                    $('#Grasas_Preferencias').val(result.data.Grasas_Preferencias);
                    $('#Comidas_cantidad').val(result.data.Comidas_cantidad);
                    $('#Preparacion_Preferencias').val(result.data.Preparacion_Preferencias);
                    $('#Entre_comidas').val(result.data.Entre_comidas);
                    $('#Apetito').val(result.data.Apetito);
                    $('#Habitos_Modificacion').val(result.data.Habitos_Modificacion);
                    $('#Horario_hambre').val(result.data.Horario_hambre);
                    $('#Cuando_cambia_mi_estado_de_animo').val(result.data.Cuando_cambia_mi_estado_de_animo);
                    $('#Medicamentos_bajar_peso').val(result.data.Medicamentos_bajar_peso);
                    $('#Cual_medicamento').val(result.data.Cual_medicamento);

                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
		
		function Save_Historia_Nutricional(newId) {
			var data = new FormData();
			data.append('Folio', newId);
			                data.append('Tipo_Dieta', $('#Tipo_Dieta').val());
                data.append('Suplementos', $('#Suplementos').val());
                data.append('Consumo_de_sal', $('#Consumo_de_sal').val());
                data.append('Grasas_Preferencias', $('#Grasas_Preferencias').val());
                data.append('Comidas_cantidad', $('#Comidas_cantidad').val());
                data.append('Preparacion_Preferencias', $('#Preparacion_Preferencias').val());
                data.append('Entre_comidas', $('#Entre_comidas').val());
                data.append('Apetito', $('#Apetito').val());
                data.append('Habitos_Modificacion', $('#Habitos_Modificacion').val());
                data.append('Horario_hambre', $('#Horario_hambre').val());
                data.append('Cuando_cambia_mi_estado_de_animo', $('#Cuando_cambia_mi_estado_de_animo').val());
                data.append('Medicamentos_bajar_peso', $('#Medicamentos_bajar_peso').val());
                data.append('Cual_medicamento', $('#Cual_medicamento').val());

			$.ajax({
				url: '@Url.Content("~/Frontal/Pacientes/Post_Historia_Nutricional")',
				type: 'POST',
				data: data,
				async: false,
				dataType: "json",
				contentType: false,
				processData: false,
				success: function (result) {
					if (result < 0) {
						showNotification("@Resources.Resources.ErrorSave", "Error al guardar Historia_Nutricional");
					} else {
						newId = result;
                    					    SendMS_Exclusion_Ingredientes_Paciente(null, newId);
					    SendDetalle_Preferencia_Bebidas(null, newId);

					}
				},
				error: function (result) {
					showNotification("@Resources.Resources.ErrorContactingServer", "Error al guardar Historia_Nutricional");
				},
				cache: false
			});
		}

		function Fill_Estilo_de_Vida()
        {
            $.ajax({
                url: "@Url.Content("~/Frontal/Pacientes/Get_Estilo_de_Vida")?Id=" + $("#ReferenceFolio").val(),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                                        $('#Folio').val(result.data.Folio);
                    $('#Frecuencia_Ejercicio').val(result.data.Frecuencia_Ejercicio);
                    $('#Duracion_Ejercicio').val(result.data.Duracion_Ejercicio);
                    $('#Tipo_Ejercicio').val(result.data.Tipo_Ejercicio);
                    $('#Antiguedad_Ejercicio').val(result.data.Antiguedad_Ejercicio);

                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
		
		function Save_Estilo_de_Vida(newId) {
			var data = new FormData();
			data.append('Folio', newId);
			                data.append('Frecuencia_Ejercicio', $('#Frecuencia_Ejercicio').val());
                data.append('Duracion_Ejercicio', $('#Duracion_Ejercicio').val());
                data.append('Tipo_Ejercicio', $('#Tipo_Ejercicio').val());
                data.append('Antiguedad_Ejercicio', $('#Antiguedad_Ejercicio').val());

			$.ajax({
				url: '@Url.Content("~/Frontal/Pacientes/Post_Estilo_de_Vida")',
				type: 'POST',
				data: data,
				async: false,
				dataType: "json",
				contentType: false,
				processData: false,
				success: function (result) {
					if (result < 0) {
						showNotification("@Resources.Resources.ErrorSave", "Error al guardar Estilo_de_Vida");
					} else {
						newId = result;
                    
					}
				},
				error: function (result) {
					showNotification("@Resources.Resources.ErrorContactingServer", "Error al guardar Estilo_de_Vida");
				},
				cache: false
			});
		}

		function Fill_Resultados()
        {
            $.ajax({
                url: "@Url.Content("~/Frontal/Pacientes/Get_Resultados")?Id=" + $("#ReferenceFolio").val(),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                                        $('#Folio').val(result.data.Folio);
                    $('#IMC').val(result.data.IMC);
                    $('#Interpretacion_IMC').val(result.data.Interpretacion_IMC);
                    $('#IMC_Pediatria').val(result.data.IMC_Pediatria);
                    $('#Complexion_corporal').val(result.data.Complexion_corporal);
                    $('#Interpretacion_complexion_corporal').val(result.data.Interpretacion_complexion_corporal);
                    $('#Distribucion_de_grasa_corporal').val(result.data.Distribucion_de_grasa_corporal);
                    $('#Interpretacion_grasa_corporal').val(result.data.Interpretacion_grasa_corporal);
                    $('#Indice_cintura_cadera').val(result.data.Indice_cintura_cadera);
                    $('#Interpretacion_indice').val(result.data.Interpretacion_indice);
                    $('#Consumo_de_agua_resultado').val(result.data.Consumo_de_agua_resultado);
                    $('#Interpretacion_agua').val(result.data.Interpretacion_agua);
                    $('#Frecuencia_cardiaca_en_Esfuerzo').val(result.data.Frecuencia_cardiaca_en_Esfuerzo);
                    $('#Interpretacion_frecuencia').val(result.data.Interpretacion_frecuencia);
                    $('#Dificultad_de_Rutina_de_Ejercicios').val(result.data.Dificultad_de_Rutina_de_Ejercicios);
                    $('#Interpretacion_dificultad').val(result.data.Interpretacion_dificultad);
                    $('#Calorias').val(result.data.Calorias);
                    $('#Interpretacion_calorias').val(result.data.Interpretacion_calorias);
                    $('#Observaciones').val(result.data.Observaciones);

                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
		
		function Save_Resultados(newId) {
			var data = new FormData();
			data.append('Folio', newId);
			                data.append('IMC', $('#IMC').val());
                data.append('Interpretacion_IMC', $('#Interpretacion_IMC').val());
                data.append('IMC_Pediatria', $('#IMC_Pediatria').val());
                data.append('Complexion_corporal', $('#Complexion_corporal').val());
                data.append('Interpretacion_complexion_corporal', $('#Interpretacion_complexion_corporal').val());
                data.append('Distribucion_de_grasa_corporal', $('#Distribucion_de_grasa_corporal').val());
                data.append('Interpretacion_grasa_corporal', $('#Interpretacion_grasa_corporal').val());
                data.append('Indice_cintura_cadera', $('#Indice_cintura_cadera').val());
                data.append('Interpretacion_indice', $('#Interpretacion_indice').val());
                data.append('Consumo_de_agua_resultado', $('#Consumo_de_agua_resultado').val());
                data.append('Interpretacion_agua', $('#Interpretacion_agua').val());
                data.append('Frecuencia_cardiaca_en_Esfuerzo', $('#Frecuencia_cardiaca_en_Esfuerzo').val());
                data.append('Interpretacion_frecuencia', $('#Interpretacion_frecuencia').val());
                data.append('Dificultad_de_Rutina_de_Ejercicios', $('#Dificultad_de_Rutina_de_Ejercicios').val());
                data.append('Interpretacion_dificultad', $('#Interpretacion_dificultad').val());
                data.append('Calorias', $('#Calorias').val());
                data.append('Interpretacion_calorias', $('#Interpretacion_calorias').val());
                data.append('Observaciones', $('#Observaciones').val());

			$.ajax({
				url: '@Url.Content("~/Frontal/Pacientes/Post_Resultados")',
				type: 'POST',
				data: data,
				async: false,
				dataType: "json",
				contentType: false,
				processData: false,
				success: function (result) {
					if (result < 0) {
						showNotification("@Resources.Resources.ErrorSave", "Error al guardar Resultados");
					} else {
						newId = result;
                    
					}
				},
				error: function (result) {
					showNotification("@Resources.Resources.ErrorContactingServer", "Error al guardar Resultados");
				},
				cache: false
			});
		}

		function Fill_Suscripcion()
        {
            $.ajax({
                url: "@Url.Content("~/Frontal/Pacientes/Get_Suscripcion")?Id=" + $("#ReferenceFolio").val(),
                type: 'GET',
                dataType: "json",
                async: false,
                success: function (result) {
                                        $('#Folio').val(result.data.Folio);
                    Detalle_Suscripciones_PacienteDataDataTable = result.Suscripciones;
                    showDetalle_Suscripciones_PacienteGrid(result.Suscripciones);
                    $('#Detalle_Suscripciones_PacienteGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_Suscripciones_PacienteGrid .gridDatePicker').attr("readonly", "");
                    Detalle_Pagos_PacienteDataDataTable = result.Pagos;
                    showDetalle_Pagos_PacienteGrid(result.Pagos);
                    $('#Detalle_Pagos_PacienteGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_Pagos_PacienteGrid .gridDatePicker').attr("readonly", "");
                    Detalle_Pagos_Pacientes_OpenPayDataDataTable = result.Pagos_OpenPay;
                    showDetalle_Pagos_Pacientes_OpenPayGrid(result.Pagos_OpenPay);
                    $('#Detalle_Pagos_Pacientes_OpenPayGrid .inputMoney').inputmask("currency", { prefix: "$", rightAlign: false });
                    $('#Detalle_Pagos_Pacientes_OpenPayGrid .gridDatePicker').attr("readonly", "");

                },
                error: function (result) {
                    showNotification("@Resources.Resources.ErrorContactingServer", "error");
                }
            });
        }
		
		function Save_Suscripcion(newId) {
			var data = new FormData();
			data.append('Folio', newId);
			
			$.ajax({
				url: '@Url.Content("~/Frontal/Pacientes/Post_Suscripcion")',
				type: 'POST',
				data: data,
				async: false,
				dataType: "json",
				contentType: false,
				processData: false,
				success: function (result) {
					if (result < 0) {
						showNotification("@Resources.Resources.ErrorSave", "Error al guardar Suscripcion");
					} else {
						newId = result;
                    					    SendDetalle_Suscripciones_Paciente(null, newId);
					    SendDetalle_Pagos_Paciente(null, newId);
					    SendDetalle_Pagos_Pacientes_OpenPay(null, newId);

					}
				},
				error: function (result) {
					showNotification("@Resources.Resources.ErrorContactingServer", "Error al guardar Suscripcion");
				},
				cache: false
			});
		}


    </script>
}
    <input type="hidden" id="FieldId" name="FieldId" value="" />
    <input type="hidden" id="FieldName" name="FieldName" value="" />
    <input type="hidden" id="ObjectId" name="ObjectId" value="" />
    <input type="hidden" id="Attribute" name="Attribute" value="" />
    <input type="hidden" id="Screen" name="Screen" value="" />
     <input type="hidden" id="Pacientes_cmbLabelSelect" name="Pacientes_cmbLabelSelect" value="@Resources.Resources.CmbSelect" />


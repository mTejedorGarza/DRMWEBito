<div aria-hidden="true" class="modal fade in" id="DashboardWizard" style="display: none; background-color:rgba(0, 0, 0, 0.7); ">
    <div class="modal-dialog" style="width:calc(100% - 109px); height:100%;">
        <div class="modal-content" style="height:80%;">
            <div class="modal-header">
                <h4 class="modal-title">
                    Nuevo Dashboard
                    <button data-dismiss="modal" class="close" type="button"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                </h4>
            </div>
            <div class="modal-body" style="height:60vh">
                <div id="wizardloader">
                    <div class="lds-svg ng-scope">
                        <svg class="lds-spin" width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">
                            <g transform="translate(70,50)">
                                <g transform="rotate(0)">
                                    <circle cx="0" cy="0" r="10" fill="#459448" fill-opacity="1" transform="scale(1.03487 1.03487)">
                                        <animateTransform attributeName="transform" type="scale" begin="-0.5s" values="2.1 2.1;1 1" keyTimes="0;1" dur="0.6s" repeatCount="indefinite"></animateTransform>
                                        <animate attributeName="fill-opacity" keyTimes="0;1" dur="0.6s" repeatCount="indefinite" values="1;0" begin="-0.5s"></animate>
                                    </circle>
                                </g>
                            </g>
                            <g transform="translate(60,67.32050807568876)">
                                <g transform="rotate(59.99999999999999)">
                                    <circle cx="0" cy="0" r="10" fill="#459448" fill-opacity="0.8333333333333334" transform="scale(1.21821 1.21821)">
                                        <animateTransform attributeName="transform" type="scale" begin="-0.39999999999999997s" values="2.1 2.1;1 1" keyTimes="0;1" dur="0.6s" repeatCount="indefinite"></animateTransform>
                                        <animate attributeName="fill-opacity" keyTimes="0;1" dur="0.6s" repeatCount="indefinite" values="1;0" begin="-0.39999999999999997s"></animate>
                                    </circle>
                                </g>
                            </g>
                            <g transform="translate(40,67.32050807568878)">
                                <g transform="rotate(119.99999999999999)">
                                    <circle cx="0" cy="0" r="10" fill="#459448" fill-opacity="0.6666666666666666" transform="scale(1.40154 1.40154)">
                                        <animateTransform attributeName="transform" type="scale" begin="-0.3s" values="2.1 2.1;1 1" keyTimes="0;1" dur="0.6s" repeatCount="indefinite"></animateTransform>
                                        <animate attributeName="fill-opacity" keyTimes="0;1" dur="0.6s" repeatCount="indefinite" values="1;0" begin="-0.3s"></animate>
                                    </circle>
                                </g>
                            </g>
                            <g transform="translate(30,50)">
                                <g transform="rotate(180)">
                                    <circle cx="0" cy="0" r="10" fill="#459448" fill-opacity="0.5" transform="scale(1.58487 1.58487)">
                                        <animateTransform attributeName="transform" type="scale" begin="-0.19999999999999998s" values="2.1 2.1;1 1" keyTimes="0;1" dur="0.6s" repeatCount="indefinite"></animateTransform>
                                        <animate attributeName="fill-opacity" keyTimes="0;1" dur="0.6s" repeatCount="indefinite" values="1;0" begin="-0.19999999999999998s"></animate>
                                    </circle>
                                </g>
                            </g>
                            <g transform="translate(39.99999999999999,32.67949192431123)">
                                <g transform="rotate(239.99999999999997)">
                                    <circle cx="0" cy="0" r="10" fill="#459448" fill-opacity="0.3333333333333333" transform="scale(1.76821 1.76821)">
                                        <animateTransform attributeName="transform" type="scale" begin="-0.09999999999999999s" values="2.1 2.1;1 1" keyTimes="0;1" dur="0.6s" repeatCount="indefinite"></animateTransform>
                                        <animate attributeName="fill-opacity" keyTimes="0;1" dur="0.6s" repeatCount="indefinite" values="1;0" begin="-0.09999999999999999s"></animate>
                                    </circle>
                                </g>
                            </g>
                            <g transform="translate(60,32.67949192431123)">
                                <g transform="rotate(300.00000000000006)">
                                    <circle cx="0" cy="0" r="10" fill="#459448" fill-opacity="0.16666666666666666" transform="scale(1.95154 1.95154)">
                                        <animateTransform attributeName="transform" type="scale" begin="0s" values="2.1 2.1;1 1" keyTimes="0;1" dur="0.6s" repeatCount="indefinite"></animateTransform>
                                        <animate attributeName="fill-opacity" keyTimes="0;1" dur="0.6s" repeatCount="indefinite" values="1;0" begin="0s"></animate>
                                    </circle>
                                </g>
                            </g>
                        </svg>
                    </div>
                </div>
                <div class="stepwizard">
                    <div class="stepwizard-row setup-panel">
                        <div class="stepwizard-step">
                            <a href="#step-1" type="button" class="btn btn-primary btn-circle">1</a>
                            <p>Configuración</p>
                        </div>

                        <div class="stepwizard-step">
                            <a href="#step-2" type="button" class="btn btn-default btn-circle" disabled="disabled">2</a>
                            <p>Template</p>
                        </div>
                    </div>
                    <form id="DashBoardEditForm" action="@Url.Action("Dashboard_Config_Card_SearchElement")" method="Post">
                        <div class="row setup-content" id="step-1">
                            @Html.Partial("DashBoardWizardP1")
                        </div>
                        <div class="row setup-content" id="step-2">

                        </div>
                    </form>
                </div>

            </div>

        </div>
    </div>
</div>

<style type="text/css">
    #wizardloader {
        position: absolute;
        left: 50%;
        width: 10%;
        top: 10%;
        margin: 0;
        padding: 0;
        display: none;
        z-index: 9999;
    }


    .form-control {
        height: 37px;
    }

    .stepwizard-step p {
        margin-top: 10px;
    }

    .stepwizard-row {
        display: inline-block;
        width: 100%;
    }

    .stepwizard {
        display: table;
        width: 100%;
        position: relative;
    }

    .stepwizard-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px;
        background-color: #ccc;
        z-order: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
        width: 30%
    }

    .btn-circle {
        width: 30px;
        height: 30px;
        text-align: center;
        padding: 6px 0;
        font-size: 12px;
        line-height: 1.428571429;
        border-radius: 15px;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {
        var navListItems = $('div.setup-panel div a'), // tab nav items
            allWells = $('.setup-content'), // content div
            allNextBtn = $('.nextBtn'); // next button

        allWells.hide(); // hide all contents by defauld

        navListItems.click(function (e) {
            e.preventDefault();
            var $target = $($(this).attr('href')),
                $item = $(this);

            if (!$item.hasClass('disabled')) {
                navListItems.removeClass('btn-primary').addClass('btn-default');
                $item.addClass('btn-primary');
                allWells.hide();
                $target.show();
                $target.find('input:eq(0)').focus();
            }
        });
        // next button
        allNextBtn.click(function () {

            var curStep = $(this).closest(".setup-content"),
                curStepBtn = curStep.attr("id"),
                nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
                curInputs = curStep.find("input[type='text'],input[type='email'],input[type='password'],input[type='url']"),
                isValid = true;
            // Validation
            $(".form-group").removeClass("has-error");
            for (var i = 0; i < curInputs.length; i++) {
                if (!curInputs[i].validity.valid) {
                    isValid = false;
                    $(curInputs[i]).closest(".form-group").addClass("has-error");
                }
            }
            // move to next step if valid
            if (isValid) {
                //Obtain the value from radio buttons in Wizard Step 1
                debugger;
                enablebutton("button-step-2", false);
                var valorId = $("input:radio[name ='DashboardEditFormTipoElemento']:checked").val();
                loader(true);
                Dashboard_Config_Card_SearchElement(valorId, function () {

                    nextStepWizard.removeAttr('disabled').trigger('click');
                    loader(false);
                });
            }

        });

        $('div.setup-panel div a.btn-primary').trigger('click');
    });

    function loader(modo) {
        if (modo) {
            $("#wizardloader").css("display", "block");
        } else {
            $("#wizardloader").css("display", "none");
        }
    }

    function enablebutton(button, modo) {
            $("#" + button).prop('disabled', !modo);
    }
</script>